{"abi":[{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"modules/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=modules/openzeppelin-contracts/\",\":@openzeppelin/contracts/=modules/openzeppelin-contracts/contracts/\",\":ds-test/=modules/forge-std/lib/ds-test/src/\",\":erc4626-tests/=modules/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=modules/forge-std/src/\",\":halmos-cheatcodes/=modules/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=modules/seadrop/lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=modules/seadrop/lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"modules/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"modules/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=modules/openzeppelin-contracts/","@openzeppelin/contracts/=modules/openzeppelin-contracts/contracts/","ds-test/=modules/forge-std/lib/ds-test/src/","erc4626-tests/=modules/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=modules/forge-std/src/","halmos-cheatcodes/=modules/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=modules/seadrop/lib/openzeppelin-contracts-upgradeable/contracts/","openzeppelin-contracts/=modules/seadrop/lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"modules/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol":"ERC165"},"evmVersion":"paris","libraries":{}},"sources":{"modules/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol":{"keccak256":"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e","urls":["bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9","dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf"],"license":"MIT"},"modules/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c","urls":["bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e","dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"modules/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol","id":47951,"exportedSymbols":{"ERC165":[47950],"IERC165":[47962]},"nodeType":"SourceUnit","src":"114:798:66","nodes":[{"id":47928,"nodeType":"PragmaDirective","src":"114:24:66","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":47930,"nodeType":"ImportDirective","src":"140:38:66","nodes":[],"absolutePath":"modules/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","nameLocation":"-1:-1:-1","scope":47951,"sourceUnit":47963,"symbolAliases":[{"foreign":{"id":47929,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47962,"src":"148:7:66","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":47950,"nodeType":"ContractDefinition","src":"660:251:66","nodes":[{"id":47949,"nodeType":"FunctionDefinition","src":"763:146:66","nodes":[],"body":{"id":47948,"nodeType":"Block","src":"845:64:66","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":47946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47941,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47936,"src":"862:11:66","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":47943,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47962,"src":"882:7:66","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$47962_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$47962_$","typeString":"type(contract IERC165)"}],"id":47942,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:66","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":47944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$47962","typeString":"type(contract IERC165)"}},"id":47945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:66","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:66","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:66","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":47940,"id":47947,"nodeType":"Return","src":"855:47:66"}]},"baseFunctions":[47961],"documentation":{"id":47934,"nodeType":"StructuredDocumentation","src":"702:56:66","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:66","parameters":{"id":47937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47936,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:66","nodeType":"VariableDeclaration","scope":47949,"src":"790:18:66","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":47935,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:66","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:66"},"returnParameters":{"id":47940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":47949,"src":"839:4:66","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47938,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:66","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:66"},"scope":47950,"stateMutability":"view","virtual":true,"visibility":"public"}],"abstract":true,"baseContracts":[{"baseName":{"id":47932,"name":"IERC165","nameLocations":["688:7:66"],"nodeType":"IdentifierPath","referencedDeclaration":47962,"src":"688:7:66"},"id":47933,"nodeType":"InheritanceSpecifier","src":"688:7:66"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":47931,"nodeType":"StructuredDocumentation","src":"180:479:66","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"linearizedBaseContracts":[47950,47962],"name":"ERC165","nameLocation":"678:6:66","scope":47951,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":66}