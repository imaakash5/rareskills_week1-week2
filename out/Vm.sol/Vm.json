{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"blobBaseFee","inputs":[{"name":"newBlobBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobhashes","inputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcastRawTransaction","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobhashes","inputs":[],"outputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getFoundryVersion","inputs":[],"outputs":[{"name":"version","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonTypeArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pauseTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecretUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"publicKeyP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"randomAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[{"name":"min","type":"uint256","internalType":"uint256"},{"name":"max","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setBlockhash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","blobBaseFee(uint256)":"6d315d7e","blobhashes(bytes32[])":"129de7eb","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","broadcastRawTransaction(bytes)":"8c0c72e0","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deployCode(string)":"9a8325a0","deployCode(string,bytes)":"29ce9dde","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectEmitAnonymous()":"2e5f270c","expectEmitAnonymous(address)":"6fc68705","expectEmitAnonymous(bool,bool,bool,bool,bool)":"c948db5e","expectEmitAnonymous(bool,bool,bool,bool,bool,address)":"71c95899","expectPartialRevert(bytes4)":"11fb5b9c","expectRevert()":"f4844814","expectRevert(bytes)":"f28dceb3","expectRevert(bytes4)":"c31eb0e0","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getBlobBaseFee()":"1f6d6ef7","getBlobhashes()":"f56ff18b","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getFoundryVersion()":"ea991bb5","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","indexOf(string,string)":"8a0807b7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonType(string,string)":"a9da313b","parseJsonType(string,string,string)":"e3f5ae33","parseJsonTypeArray(string,string,string)":"0175d535","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","pauseTracing()":"c94d1f90","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prevrandao(bytes32)":"3b925549","prevrandao(uint256)":"9cb1c0d4","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptSecretUint(string)":"69ca02b7","promptUint(string)":"652fd489","publicKeyP256(uint256)":"c453949e","randomAddress()":"d5bee9f5","randomUint()":"25124730","randomUint(uint256,uint256)":"d61b051b","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetGasMetering()":"be367dd3","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","resumeTracing()":"72a09ccb","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpc(string,string,string)":"0199a220","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeJsonType(string,bytes)":"6d4f96a6","serializeJsonType(string,string,string,bytes)":"6f93bccb","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setBlockhash(uint256,bytes32)":"5314b54a","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signCompact((address,uint256,uint256,uint256),bytes32)":"3d0e292f","signCompact(address,bytes32)":"8e2f97bf","signCompact(bytes32)":"a282dc4b","signCompact(uint256,bytes32)":"cc2a781f","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startStateDiffRecording()":"cf22e3c9","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"broadcastRawTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFoundryVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"publicKeyP256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"setBlockhash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"broadcastRawTransaction(bytes)\":{\"notice\":\"Takes a signed transaction and broadcasts it to the network.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deployCode(string)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,bytes)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionaly accepts abi-encoded constructor arguments.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous()\":{\"notice\":\"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmitAnonymous(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectPartialRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getFoundryVersion()\":{\"notice\":\"Returns the Foundry version. Format: <cargo_version>+<git_sha>+<build_timestamp> Sample output: 0.2.0+faa94c384+202407110019 Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000) to compare timestamps while ignoring minor time differences.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get the nonce of a `Wallet`.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory revm state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonType(string,string)\":{\"notice\":\"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonType(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonTypeArray(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"pauseTracing()\":{\"notice\":\"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"publicKeyP256(uint256)\":{\"notice\":\"Derives secp256r1 public key from the provided `privateKey`.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uin256 value between the provided range (=min..=max).\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetGasMetering()\":{\"notice\":\"Reset gas metering (i.e. gas usage is set to gas limit).\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"resumeTracing()\":{\"notice\":\"Unpauses collection of call traces.\"},\"revertTo(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpc(string,string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the given endpoint.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeJsonType(string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeJsonType(string,string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setBlockhash(uint256,bytes32)\":{\"notice\":\"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signCompact((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signCompact(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address.\"},\"signCompact(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"signCompact(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top of the test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"modules/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=modules/openzeppelin-contracts/\",\":@openzeppelin/contracts/=modules/openzeppelin-contracts/contracts/\",\":ds-test/=modules/forge-std/lib/ds-test/src/\",\":erc4626-tests/=modules/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=modules/forge-std/src/\",\":halmos-cheatcodes/=modules/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=modules/seadrop/lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=modules/seadrop/lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"modules/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb3ca910e843e6c87139f86db4f91b294769472391a4f98b5022dcd547302caef\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://0314c7594d84b45fe47169d7bf9f95014380f48f1103c8025a3c1604c1d125c4\",\"dweb:/ipfs/Qmew6zvJHJnZEKJW6Gua2SVG7REwMFHjsMjWVgE3u8jRJT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[{"internalType":"uint256","name":"newBlobBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"blobBaseFee"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"blobhashes"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"broadcastRawTransaction"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobhashes","outputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getFoundryVersion","outputs":[{"internalType":"string","name":"version","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"pauseTracing"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[{"internalType":"uint256","name":"newPrevrandao","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecretUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"publicKeyP256","outputs":[{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"min","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resetGasMetering"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"resumeTracing"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setBlockhash"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"blobBaseFee(uint256)":{"notice":"Sets `block.blobbasefee`"},"blobhashes(bytes32[])":{"notice":"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"broadcastRawTransaction(bytes)":{"notice":"Takes a signed transaction and broadcasts it to the network."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deployCode(string)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,bytes)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionaly accepts abi-encoded constructor arguments."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous()":{"notice":"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmitAnonymous(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous(bool,bool,bool,bool,bool)":{"notice":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmitAnonymous(bool,bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectPartialRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlobhashes()":{"notice":"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getFoundryVersion()":{"notice":"Returns the Foundry version. Format: <cargo_version>+<git_sha>+<build_timestamp> Sample output: 0.2.0+faa94c384+202407110019 Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000) to compare timestamps while ignoring minor time differences."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get the nonce of a `Wallet`."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonType(string,string)":{"notice":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"parseJsonType(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"parseJsonTypeArray(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"pauseTracing()":{"notice":"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"prevrandao(uint256)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptSecretUint(string)":{"notice":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"publicKeyP256(uint256)":{"notice":"Derives secp256r1 public key from the provided `privateKey`."},"randomAddress()":{"notice":"Returns a random `address`."},"randomUint()":{"notice":"Returns a random uint256 value."},"randomUint(uint256,uint256)":{"notice":"Returns random uin256 value between the provided range (=min..=max)."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetGasMetering()":{"notice":"Reset gas metering (i.e. gas usage is set to gas limit)."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"resumeTracing()":{"notice":"Unpauses collection of call traces."},"revertTo(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"revertToAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpc(string,string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the given endpoint."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeJsonType(string,bytes)":{"notice":"See `serializeJson`."},"serializeJsonType(string,string,string,bytes)":{"notice":"See `serializeJson`."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setBlockhash(uint256,bytes32)":{"notice":"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signCompact((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signCompact(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address."},"signCompact(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"signCompact(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top of the test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@openzeppelin/=modules/openzeppelin-contracts/","@openzeppelin/contracts/=modules/openzeppelin-contracts/contracts/","ds-test/=modules/forge-std/lib/ds-test/src/","erc4626-tests/=modules/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=modules/forge-std/src/","halmos-cheatcodes/=modules/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=modules/seadrop/lib/openzeppelin-contracts-upgradeable/contracts/","openzeppelin-contracts/=modules/seadrop/lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"modules/forge-std/src/Vm.sol":"Vm"},"evmVersion":"paris","libraries":{}},"sources":{"modules/forge-std/src/Vm.sol":{"keccak256":"0xb3ca910e843e6c87139f86db4f91b294769472391a4f98b5022dcd547302caef","urls":["bzz-raw://0314c7594d84b45fe47169d7bf9f95014380f48f1103c8025a3c1604c1d125c4","dweb:/ipfs/Qmew6zvJHJnZEKJW6Gua2SVG7REwMFHjsMjWVgE3u8jRJT"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"modules/forge-std/src/Vm.sol","id":19898,"exportedSymbols":{"Vm":[19897],"VmSafe":[19242]},"nodeType":"SourceUnit","src":"117:98421:30","nodes":[{"id":15833,"nodeType":"PragmaDirective","src":"117:31:30","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":15834,"nodeType":"PragmaDirective","src":"149:33:30","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":19242,"nodeType":"ContractDefinition","src":"409:81928:30","nodes":[{"id":15842,"nodeType":"EnumDefinition","src":"529:533:30","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":15836,"nodeType":"StructuredDocumentation","src":"432:92:30","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":15837,"name":"None","nameLocation":"610:4:30","nodeType":"EnumValue","src":"610:4:30"},{"id":15838,"name":"Broadcast","nameLocation":"714:9:30","nodeType":"EnumValue","src":"714:9:30"},{"id":15839,"name":"RecurrentBroadcast","nameLocation":"829:18:30","nodeType":"EnumValue","src":"829:18:30"},{"id":15840,"name":"Prank","nameLocation":"939:5:30","nodeType":"EnumValue","src":"939:5:30"},{"id":15841,"name":"RecurrentPrank","nameLocation":"1042:14:30","nodeType":"EnumValue","src":"1042:14:30"}],"name":"CallerMode","nameLocation":"534:10:30"},{"id":15855,"nodeType":"EnumDefinition","src":"1118:791:30","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":15843,"nodeType":"StructuredDocumentation","src":"1068:45:30","text":"The kind of account access that occurred."},"members":[{"id":15844,"name":"Call","nameLocation":"1186:4:30","nodeType":"EnumValue","src":"1186:4:30"},{"id":15845,"name":"DelegateCall","nameLocation":"1252:12:30","nodeType":"EnumValue","src":"1252:12:30"},{"id":15846,"name":"CallCode","nameLocation":"1322:8:30","nodeType":"EnumValue","src":"1322:8:30"},{"id":15847,"name":"StaticCall","nameLocation":"1390:10:30","nodeType":"EnumValue","src":"1390:10:30"},{"id":15848,"name":"Create","nameLocation":"1446:6:30","nodeType":"EnumValue","src":"1446:6:30"},{"id":15849,"name":"SelfDestruct","nameLocation":"1505:12:30","nodeType":"EnumValue","src":"1505:12:30"},{"id":15850,"name":"Resume","nameLocation":"1644:6:30","nodeType":"EnumValue","src":"1644:6:30"},{"id":15851,"name":"Balance","nameLocation":"1703:7:30","nodeType":"EnumValue","src":"1703:7:30"},{"id":15852,"name":"Extcodesize","nameLocation":"1764:11:30","nodeType":"EnumValue","src":"1764:11:30"},{"id":15853,"name":"Extcodehash","nameLocation":"1829:11:30","nodeType":"EnumValue","src":"1829:11:30"},{"id":15854,"name":"Extcodecopy","nameLocation":"1892:11:30","nodeType":"EnumValue","src":"1892:11:30"}],"name":"AccountAccessKind","nameLocation":"1123:17:30"},{"id":15866,"nodeType":"EnumDefinition","src":"1949:683:30","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":15856,"nodeType":"StructuredDocumentation","src":"1915:29:30","text":"Forge execution contexts."},"members":[{"id":15857,"name":"TestGroup","nameLocation":"2047:9:30","nodeType":"EnumValue","src":"2047:9:30"},{"id":15858,"name":"Test","nameLocation":"2109:4:30","nodeType":"EnumValue","src":"2109:4:30"},{"id":15859,"name":"Coverage","nameLocation":"2170:8:30","nodeType":"EnumValue","src":"2170:8:30"},{"id":15860,"name":"Snapshot","nameLocation":"2235:8:30","nodeType":"EnumValue","src":"2235:8:30"},{"id":15861,"name":"ScriptGroup","nameLocation":"2327:11:30","nodeType":"EnumValue","src":"2327:11:30"},{"id":15862,"name":"ScriptDryRun","nameLocation":"2393:12:30","nodeType":"EnumValue","src":"2393:12:30"},{"id":15863,"name":"ScriptBroadcast","nameLocation":"2472:15:30","nodeType":"EnumValue","src":"2472:15:30"},{"id":15864,"name":"ScriptResume","nameLocation":"2551:12:30","nodeType":"EnumValue","src":"2551:12:30"},{"id":15865,"name":"Unknown","nameLocation":"2619:7:30","nodeType":"EnumValue","src":"2619:7:30"}],"name":"ForgeContext","nameLocation":"1954:12:30"},{"id":15875,"nodeType":"StructDefinition","src":"2694:237:30","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":15867,"nodeType":"StructuredDocumentation","src":"2638:51:30","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":15870,"mutability":"mutable","name":"topics","nameLocation":"2792:6:30","nodeType":"VariableDeclaration","scope":15875,"src":"2782:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2782:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15869,"nodeType":"ArrayTypeName","src":"2782:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15872,"mutability":"mutable","name":"data","nameLocation":"2850:4:30","nodeType":"VariableDeclaration","scope":15875,"src":"2844:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15871,"name":"bytes","nodeType":"ElementaryTypeName","src":"2844:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15874,"mutability":"mutable","name":"emitter","nameLocation":"2917:7:30","nodeType":"VariableDeclaration","scope":15875,"src":"2909:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15873,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2701:3:30","scope":19242,"visibility":"public"},{"id":15881,"nodeType":"StructDefinition","src":"3000:119:30","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":15876,"nodeType":"StructuredDocumentation","src":"2937:58:30","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":15878,"mutability":"mutable","name":"key","nameLocation":"3065:3:30","nodeType":"VariableDeclaration","scope":15881,"src":"3058:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":15877,"name":"string","nodeType":"ElementaryTypeName","src":"3058:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15880,"mutability":"mutable","name":"url","nameLocation":"3109:3:30","nodeType":"VariableDeclaration","scope":15881,"src":"3102:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":15879,"name":"string","nodeType":"ElementaryTypeName","src":"3102:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3007:3:30","scope":19242,"visibility":"public"},{"id":15902,"nodeType":"StructDefinition","src":"3179:615:30","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":15882,"nodeType":"StructuredDocumentation","src":"3125:49:30","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":15884,"mutability":"mutable","name":"emitter","nameLocation":"3260:7:30","nodeType":"VariableDeclaration","scope":15902,"src":"3252:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15883,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15887,"mutability":"mutable","name":"topics","nameLocation":"3354:6:30","nodeType":"VariableDeclaration","scope":15902,"src":"3344:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15885,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3344:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15886,"nodeType":"ArrayTypeName","src":"3344:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15889,"mutability":"mutable","name":"data","nameLocation":"3412:4:30","nodeType":"VariableDeclaration","scope":15902,"src":"3406:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15888,"name":"bytes","nodeType":"ElementaryTypeName","src":"3406:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15891,"mutability":"mutable","name":"blockHash","nameLocation":"3461:9:30","nodeType":"VariableDeclaration","scope":15902,"src":"3453:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3453:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15893,"mutability":"mutable","name":"blockNumber","nameLocation":"3516:11:30","nodeType":"VariableDeclaration","scope":15902,"src":"3509:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15892,"name":"uint64","nodeType":"ElementaryTypeName","src":"3509:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15895,"mutability":"mutable","name":"transactionHash","nameLocation":"3578:15:30","nodeType":"VariableDeclaration","scope":15902,"src":"3570:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3570:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15897,"mutability":"mutable","name":"transactionIndex","nameLocation":"3657:16:30","nodeType":"VariableDeclaration","scope":15902,"src":"3650:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15896,"name":"uint64","nodeType":"ElementaryTypeName","src":"3650:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15899,"mutability":"mutable","name":"logIndex","nameLocation":"3717:8:30","nodeType":"VariableDeclaration","scope":15902,"src":"3709:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15898,"name":"uint256","nodeType":"ElementaryTypeName","src":"3709:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15901,"mutability":"mutable","name":"removed","nameLocation":"3780:7:30","nodeType":"VariableDeclaration","scope":15902,"src":"3775:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15900,"name":"bool","nodeType":"ElementaryTypeName","src":"3775:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3186:10:30","scope":19242,"visibility":"public"},{"id":15914,"nodeType":"StructDefinition","src":"3870:334:30","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":15903,"nodeType":"StructuredDocumentation","src":"3800:65:30","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":15905,"mutability":"mutable","name":"errorMessage","nameLocation":"3941:12:30","nodeType":"VariableDeclaration","scope":15914,"src":"3934:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":15904,"name":"string","nodeType":"ElementaryTypeName","src":"3934:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15907,"mutability":"mutable","name":"path","nameLocation":"4004:4:30","nodeType":"VariableDeclaration","scope":15914,"src":"3997:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":15906,"name":"string","nodeType":"ElementaryTypeName","src":"3997:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15909,"mutability":"mutable","name":"depth","nameLocation":"4060:5:30","nodeType":"VariableDeclaration","scope":15914,"src":"4053:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15908,"name":"uint64","nodeType":"ElementaryTypeName","src":"4053:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15911,"mutability":"mutable","name":"isDir","nameLocation":"4125:5:30","nodeType":"VariableDeclaration","scope":15914,"src":"4120:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15910,"name":"bool","nodeType":"ElementaryTypeName","src":"4120:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15913,"mutability":"mutable","name":"isSymlink","nameLocation":"4188:9:30","nodeType":"VariableDeclaration","scope":15914,"src":"4183:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15912,"name":"bool","nodeType":"ElementaryTypeName","src":"4183:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"3877:8:30","scope":19242,"visibility":"public"},{"id":15930,"nodeType":"StructDefinition","src":"4434:599:30","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":15915,"nodeType":"StructuredDocumentation","src":"4210:219:30","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":15917,"mutability":"mutable","name":"isDir","nameLocation":"4520:5:30","nodeType":"VariableDeclaration","scope":15930,"src":"4515:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15916,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15919,"mutability":"mutable","name":"isSymlink","nameLocation":"4591:9:30","nodeType":"VariableDeclaration","scope":15930,"src":"4586:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15918,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15921,"mutability":"mutable","name":"length","nameLocation":"4683:6:30","nodeType":"VariableDeclaration","scope":15930,"src":"4675:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15920,"name":"uint256","nodeType":"ElementaryTypeName","src":"4675:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15923,"mutability":"mutable","name":"readOnly","nameLocation":"4774:8:30","nodeType":"VariableDeclaration","scope":15930,"src":"4769:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15922,"name":"bool","nodeType":"ElementaryTypeName","src":"4769:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15925,"mutability":"mutable","name":"modified","nameLocation":"4863:8:30","nodeType":"VariableDeclaration","scope":15930,"src":"4855:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15924,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15927,"mutability":"mutable","name":"accessed","nameLocation":"4939:8:30","nodeType":"VariableDeclaration","scope":15930,"src":"4931:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15926,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15929,"mutability":"mutable","name":"created","nameLocation":"5019:7:30","nodeType":"VariableDeclaration","scope":15930,"src":"5011:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15928,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4441:10:30","scope":19242,"visibility":"public"},{"id":15940,"nodeType":"StructDefinition","src":"5087:277:30","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":15931,"nodeType":"StructuredDocumentation","src":"5039:43:30","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":15933,"mutability":"mutable","name":"addr","nameLocation":"5152:4:30","nodeType":"VariableDeclaration","scope":15940,"src":"5144:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15932,"name":"address","nodeType":"ElementaryTypeName","src":"5144:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15935,"mutability":"mutable","name":"publicKeyX","nameLocation":"5214:10:30","nodeType":"VariableDeclaration","scope":15940,"src":"5206:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15934,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15937,"mutability":"mutable","name":"publicKeyY","nameLocation":"5282:10:30","nodeType":"VariableDeclaration","scope":15940,"src":"5274:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15936,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15939,"mutability":"mutable","name":"privateKey","nameLocation":"5347:10:30","nodeType":"VariableDeclaration","scope":15940,"src":"5339:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15938,"name":"uint256","nodeType":"ElementaryTypeName","src":"5339:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5094:6:30","scope":19242,"visibility":"public"},{"id":15948,"nodeType":"StructDefinition","src":"5409:213:30","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":15941,"nodeType":"StructuredDocumentation","src":"5370:34:30","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":15943,"mutability":"mutable","name":"exitCode","nameLocation":"5480:8:30","nodeType":"VariableDeclaration","scope":15948,"src":"5474:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":15942,"name":"int32","nodeType":"ElementaryTypeName","src":"5474:5:30","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":15945,"mutability":"mutable","name":"stdout","nameLocation":"5557:6:30","nodeType":"VariableDeclaration","scope":15948,"src":"5551:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15944,"name":"bytes","nodeType":"ElementaryTypeName","src":"5551:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15947,"mutability":"mutable","name":"stderr","nameLocation":"5609:6:30","nodeType":"VariableDeclaration","scope":15948,"src":"5603:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15946,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5416:9:30","scope":19242,"visibility":"public"},{"id":15954,"nodeType":"StructDefinition","src":"5671:184:30","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":15949,"nodeType":"StructuredDocumentation","src":"5628:38:30","text":"Information on the chain and fork."},"members":[{"constant":false,"id":15951,"mutability":"mutable","name":"forkId","nameLocation":"5772:6:30","nodeType":"VariableDeclaration","scope":15954,"src":"5764:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15950,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15953,"mutability":"mutable","name":"chainId","nameLocation":"5841:7:30","nodeType":"VariableDeclaration","scope":15954,"src":"5833:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15952,"name":"uint256","nodeType":"ElementaryTypeName","src":"5833:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5678:9:30","scope":19242,"visibility":"public"},{"id":15986,"nodeType":"StructDefinition","src":"5916:1837:30","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":15955,"nodeType":"StructuredDocumentation","src":"5861:50:30","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":15958,"mutability":"mutable","name":"chainInfo","nameLocation":"6008:9:30","nodeType":"VariableDeclaration","scope":15986,"src":"5998:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$15954_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":15957,"nodeType":"UserDefinedTypeName","pathNode":{"id":15956,"name":"ChainInfo","nameLocations":["5998:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":15954,"src":"5998:9:30"},"referencedDeclaration":15954,"src":"5998:9:30","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$15954_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":15961,"mutability":"mutable","name":"kind","nameLocation":"6471:4:30","nodeType":"VariableDeclaration","scope":15986,"src":"6453:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$15855","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":15960,"nodeType":"UserDefinedTypeName","pathNode":{"id":15959,"name":"AccountAccessKind","nameLocations":["6453:17:30"],"nodeType":"IdentifierPath","referencedDeclaration":15855,"src":"6453:17:30"},"referencedDeclaration":15855,"src":"6453:17:30","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$15855","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":15963,"mutability":"mutable","name":"account","nameLocation":"6648:7:30","nodeType":"VariableDeclaration","scope":15986,"src":"6640:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15962,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15965,"mutability":"mutable","name":"accessor","nameLocation":"6711:8:30","nodeType":"VariableDeclaration","scope":15986,"src":"6703:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15964,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15967,"mutability":"mutable","name":"initialized","nameLocation":"6922:11:30","nodeType":"VariableDeclaration","scope":15986,"src":"6917:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15966,"name":"bool","nodeType":"ElementaryTypeName","src":"6917:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15969,"mutability":"mutable","name":"oldBalance","nameLocation":"7008:10:30","nodeType":"VariableDeclaration","scope":15986,"src":"7000:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15968,"name":"uint256","nodeType":"ElementaryTypeName","src":"7000:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15971,"mutability":"mutable","name":"newBalance","nameLocation":"7183:10:30","nodeType":"VariableDeclaration","scope":15986,"src":"7175:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15970,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15973,"mutability":"mutable","name":"deployedCode","nameLocation":"7260:12:30","nodeType":"VariableDeclaration","scope":15986,"src":"7254:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15972,"name":"bytes","nodeType":"ElementaryTypeName","src":"7254:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15975,"mutability":"mutable","name":"value","nameLocation":"7344:5:30","nodeType":"VariableDeclaration","scope":15986,"src":"7336:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15974,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15977,"mutability":"mutable","name":"data","nameLocation":"7418:4:30","nodeType":"VariableDeclaration","scope":15986,"src":"7412:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15976,"name":"bytes","nodeType":"ElementaryTypeName","src":"7412:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15979,"mutability":"mutable","name":"reverted","nameLocation":"7513:8:30","nodeType":"VariableDeclaration","scope":15986,"src":"7508:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15978,"name":"bool","nodeType":"ElementaryTypeName","src":"7508:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15983,"mutability":"mutable","name":"storageAccesses","nameLocation":"7635:15:30","nodeType":"VariableDeclaration","scope":15986,"src":"7619:31:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$16000_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":15981,"nodeType":"UserDefinedTypeName","pathNode":{"id":15980,"name":"StorageAccess","nameLocations":["7619:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":16000,"src":"7619:13:30"},"referencedDeclaration":16000,"src":"7619:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$16000_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":15982,"nodeType":"ArrayTypeName","src":"7619:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$16000_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":15985,"mutability":"mutable","name":"depth","nameLocation":"7741:5:30","nodeType":"VariableDeclaration","scope":15986,"src":"7734:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15984,"name":"uint64","nodeType":"ElementaryTypeName","src":"7734:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"5923:13:30","scope":19242,"visibility":"public"},{"id":16000,"nodeType":"StructDefinition","src":"7815:425:30","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":15987,"nodeType":"StructuredDocumentation","src":"7759:51:30","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":15989,"mutability":"mutable","name":"account","nameLocation":"7905:7:30","nodeType":"VariableDeclaration","scope":16000,"src":"7897:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15988,"name":"address","nodeType":"ElementaryTypeName","src":"7897:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15991,"mutability":"mutable","name":"slot","nameLocation":"7969:4:30","nodeType":"VariableDeclaration","scope":16000,"src":"7961:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7961:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15993,"mutability":"mutable","name":"isWrite","nameLocation":"8026:7:30","nodeType":"VariableDeclaration","scope":16000,"src":"8021:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15992,"name":"bool","nodeType":"ElementaryTypeName","src":"8021:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15995,"mutability":"mutable","name":"previousValue","nameLocation":"8094:13:30","nodeType":"VariableDeclaration","scope":16000,"src":"8086:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8086:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15997,"mutability":"mutable","name":"newValue","nameLocation":"8163:8:30","nodeType":"VariableDeclaration","scope":16000,"src":"8155:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15996,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8155:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15999,"mutability":"mutable","name":"reverted","nameLocation":"8225:8:30","nodeType":"VariableDeclaration","scope":16000,"src":"8220:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15998,"name":"bool","nodeType":"ElementaryTypeName","src":"8220:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"7822:13:30","scope":19242,"visibility":"public"},{"id":16012,"nodeType":"StructDefinition","src":"8291:458:30","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":16001,"nodeType":"StructuredDocumentation","src":"8246:40:30","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":16003,"mutability":"mutable","name":"gasLimit","nameLocation":"8357:8:30","nodeType":"VariableDeclaration","scope":16012,"src":"8350:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16002,"name":"uint64","nodeType":"ElementaryTypeName","src":"8350:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16005,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"8413:12:30","nodeType":"VariableDeclaration","scope":16012,"src":"8406:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16004,"name":"uint64","nodeType":"ElementaryTypeName","src":"8406:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16007,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"8594:13:30","nodeType":"VariableDeclaration","scope":16012,"src":"8587:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16006,"name":"uint64","nodeType":"ElementaryTypeName","src":"8587:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16009,"mutability":"mutable","name":"gasRefunded","nameLocation":"8662:11:30","nodeType":"VariableDeclaration","scope":16012,"src":"8656:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":16008,"name":"int64","nodeType":"ElementaryTypeName","src":"8656:5:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":16011,"mutability":"mutable","name":"gasRemaining","nameLocation":"8730:12:30","nodeType":"VariableDeclaration","scope":16012,"src":"8723:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16010,"name":"uint64","nodeType":"ElementaryTypeName","src":"8723:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8298:3:30","scope":19242,"visibility":"public"},{"id":16021,"nodeType":"FunctionDefinition","src":"8892:91:30","nodes":[],"documentation":{"id":16013,"nodeType":"StructuredDocumentation","src":"8788:99:30","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"8901:12:30","parameters":{"id":16016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16015,"mutability":"mutable","name":"walletLabel","nameLocation":"8930:11:30","nodeType":"VariableDeclaration","scope":16021,"src":"8914:27:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16014,"name":"string","nodeType":"ElementaryTypeName","src":"8914:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8913:29:30"},"returnParameters":{"id":16020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16019,"mutability":"mutable","name":"wallet","nameLocation":"8975:6:30","nodeType":"VariableDeclaration","scope":16021,"src":"8961:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15940_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16018,"nodeType":"UserDefinedTypeName","pathNode":{"id":16017,"name":"Wallet","nameLocations":["8961:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":15940,"src":"8961:6:30"},"referencedDeclaration":15940,"src":"8961:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15940_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"8960:22:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16030,"nodeType":"FunctionDefinition","src":"9061:82:30","nodes":[],"documentation":{"id":16022,"nodeType":"StructuredDocumentation","src":"8989:67:30","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"9070:12:30","parameters":{"id":16025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16024,"mutability":"mutable","name":"privateKey","nameLocation":"9091:10:30","nodeType":"VariableDeclaration","scope":16030,"src":"9083:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16023,"name":"uint256","nodeType":"ElementaryTypeName","src":"9083:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9082:20:30"},"returnParameters":{"id":16029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16028,"mutability":"mutable","name":"wallet","nameLocation":"9135:6:30","nodeType":"VariableDeclaration","scope":16030,"src":"9121:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15940_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16027,"nodeType":"UserDefinedTypeName","pathNode":{"id":16026,"name":"Wallet","nameLocations":["9121:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":15940,"src":"9121:6:30"},"referencedDeclaration":15940,"src":"9121:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15940_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"9120:22:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16041,"nodeType":"FunctionDefinition","src":"9257:111:30","nodes":[],"documentation":{"id":16031,"nodeType":"StructuredDocumentation","src":"9149:103:30","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"9266:12:30","parameters":{"id":16036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16033,"mutability":"mutable","name":"privateKey","nameLocation":"9287:10:30","nodeType":"VariableDeclaration","scope":16041,"src":"9279:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16032,"name":"uint256","nodeType":"ElementaryTypeName","src":"9279:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16035,"mutability":"mutable","name":"walletLabel","nameLocation":"9315:11:30","nodeType":"VariableDeclaration","scope":16041,"src":"9299:27:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16034,"name":"string","nodeType":"ElementaryTypeName","src":"9299:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9278:49:30"},"returnParameters":{"id":16040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16039,"mutability":"mutable","name":"wallet","nameLocation":"9360:6:30","nodeType":"VariableDeclaration","scope":16041,"src":"9346:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15940_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16038,"nodeType":"UserDefinedTypeName","pathNode":{"id":16037,"name":"Wallet","nameLocations":["9346:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":15940,"src":"9346:6:30"},"referencedDeclaration":15940,"src":"9346:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15940_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"9345:22:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16051,"nodeType":"FunctionDefinition","src":"9516:102:30","nodes":[],"documentation":{"id":16042,"nodeType":"StructuredDocumentation","src":"9374:137:30","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"9525:9:30","parameters":{"id":16047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16044,"mutability":"mutable","name":"mnemonic","nameLocation":"9551:8:30","nodeType":"VariableDeclaration","scope":16051,"src":"9535:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16043,"name":"string","nodeType":"ElementaryTypeName","src":"9535:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16046,"mutability":"mutable","name":"index","nameLocation":"9568:5:30","nodeType":"VariableDeclaration","scope":16051,"src":"9561:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16045,"name":"uint32","nodeType":"ElementaryTypeName","src":"9561:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"9534:40:30"},"returnParameters":{"id":16050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16049,"mutability":"mutable","name":"privateKey","nameLocation":"9606:10:30","nodeType":"VariableDeclaration","scope":16051,"src":"9598:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16048,"name":"uint256","nodeType":"ElementaryTypeName","src":"9598:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9597:20:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16063,"nodeType":"FunctionDefinition","src":"9747:158:30","nodes":[],"documentation":{"id":16052,"nodeType":"StructuredDocumentation","src":"9624:118:30","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"9756:9:30","parameters":{"id":16059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16054,"mutability":"mutable","name":"mnemonic","nameLocation":"9782:8:30","nodeType":"VariableDeclaration","scope":16063,"src":"9766:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16053,"name":"string","nodeType":"ElementaryTypeName","src":"9766:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16056,"mutability":"mutable","name":"derivationPath","nameLocation":"9808:14:30","nodeType":"VariableDeclaration","scope":16063,"src":"9792:30:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16055,"name":"string","nodeType":"ElementaryTypeName","src":"9792:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16058,"mutability":"mutable","name":"index","nameLocation":"9831:5:30","nodeType":"VariableDeclaration","scope":16063,"src":"9824:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16057,"name":"uint32","nodeType":"ElementaryTypeName","src":"9824:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"9765:72:30"},"returnParameters":{"id":16062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16061,"mutability":"mutable","name":"privateKey","nameLocation":"9893:10:30","nodeType":"VariableDeclaration","scope":16063,"src":"9885:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16060,"name":"uint256","nodeType":"ElementaryTypeName","src":"9885:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9884:20:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16075,"nodeType":"FunctionDefinition","src":"10079:152:30","nodes":[],"documentation":{"id":16064,"nodeType":"StructuredDocumentation","src":"9911:163:30","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"10088:9:30","parameters":{"id":16071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16066,"mutability":"mutable","name":"mnemonic","nameLocation":"10114:8:30","nodeType":"VariableDeclaration","scope":16075,"src":"10098:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16065,"name":"string","nodeType":"ElementaryTypeName","src":"10098:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16068,"mutability":"mutable","name":"index","nameLocation":"10131:5:30","nodeType":"VariableDeclaration","scope":16075,"src":"10124:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16067,"name":"uint32","nodeType":"ElementaryTypeName","src":"10124:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":16070,"mutability":"mutable","name":"language","nameLocation":"10154:8:30","nodeType":"VariableDeclaration","scope":16075,"src":"10138:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16069,"name":"string","nodeType":"ElementaryTypeName","src":"10138:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10097:66:30"},"returnParameters":{"id":16074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16073,"mutability":"mutable","name":"privateKey","nameLocation":"10219:10:30","nodeType":"VariableDeclaration","scope":16075,"src":"10211:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16072,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10210:20:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16089,"nodeType":"FunctionDefinition","src":"10386:184:30","nodes":[],"documentation":{"id":16076,"nodeType":"StructuredDocumentation","src":"10237:144:30","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"10395:9:30","parameters":{"id":16085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16078,"mutability":"mutable","name":"mnemonic","nameLocation":"10421:8:30","nodeType":"VariableDeclaration","scope":16089,"src":"10405:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16077,"name":"string","nodeType":"ElementaryTypeName","src":"10405:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16080,"mutability":"mutable","name":"derivationPath","nameLocation":"10447:14:30","nodeType":"VariableDeclaration","scope":16089,"src":"10431:30:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16079,"name":"string","nodeType":"ElementaryTypeName","src":"10431:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16082,"mutability":"mutable","name":"index","nameLocation":"10470:5:30","nodeType":"VariableDeclaration","scope":16089,"src":"10463:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16081,"name":"uint32","nodeType":"ElementaryTypeName","src":"10463:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":16084,"mutability":"mutable","name":"language","nameLocation":"10493:8:30","nodeType":"VariableDeclaration","scope":16089,"src":"10477:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16083,"name":"string","nodeType":"ElementaryTypeName","src":"10477:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10404:98:30"},"returnParameters":{"id":16088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16087,"mutability":"mutable","name":"privateKey","nameLocation":"10558:10:30","nodeType":"VariableDeclaration","scope":16089,"src":"10550:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16086,"name":"uint256","nodeType":"ElementaryTypeName","src":"10550:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10549:20:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16099,"nodeType":"FunctionDefinition","src":"10645:106:30","nodes":[],"documentation":{"id":16090,"nodeType":"StructuredDocumentation","src":"10576:64:30","text":"Derives secp256r1 public key from the provided `privateKey`."},"functionSelector":"c453949e","implemented":false,"kind":"function","modifiers":[],"name":"publicKeyP256","nameLocation":"10654:13:30","parameters":{"id":16093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16092,"mutability":"mutable","name":"privateKey","nameLocation":"10676:10:30","nodeType":"VariableDeclaration","scope":16099,"src":"10668:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16091,"name":"uint256","nodeType":"ElementaryTypeName","src":"10668:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10667:20:30"},"returnParameters":{"id":16098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16095,"mutability":"mutable","name":"publicKeyX","nameLocation":"10719:10:30","nodeType":"VariableDeclaration","scope":16099,"src":"10711:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16094,"name":"uint256","nodeType":"ElementaryTypeName","src":"10711:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16097,"mutability":"mutable","name":"publicKeyY","nameLocation":"10739:10:30","nodeType":"VariableDeclaration","scope":16099,"src":"10731:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16096,"name":"uint256","nodeType":"ElementaryTypeName","src":"10731:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10710:40:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16107,"nodeType":"FunctionDefinition","src":"10835:76:30","nodes":[],"documentation":{"id":16100,"nodeType":"StructuredDocumentation","src":"10757:73:30","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"10844:11:30","parameters":{"id":16103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16102,"mutability":"mutable","name":"privateKey","nameLocation":"10864:10:30","nodeType":"VariableDeclaration","scope":16107,"src":"10856:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16101,"name":"uint256","nodeType":"ElementaryTypeName","src":"10856:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:20:30"},"returnParameters":{"id":16106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16105,"mutability":"mutable","name":"keyAddr","nameLocation":"10902:7:30","nodeType":"VariableDeclaration","scope":16107,"src":"10894:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16104,"name":"address","nodeType":"ElementaryTypeName","src":"10894:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10893:17:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16120,"nodeType":"FunctionDefinition","src":"11190:102:30","nodes":[],"documentation":{"id":16108,"nodeType":"StructuredDocumentation","src":"10917:268:30","text":"Signs data with a `Wallet`.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"3d0e292f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"11199:11:30","parameters":{"id":16114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16111,"mutability":"mutable","name":"wallet","nameLocation":"11227:6:30","nodeType":"VariableDeclaration","scope":16120,"src":"11211:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15940_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16110,"nodeType":"UserDefinedTypeName","pathNode":{"id":16109,"name":"Wallet","nameLocations":["11211:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":15940,"src":"11211:6:30"},"referencedDeclaration":15940,"src":"11211:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15940_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":16113,"mutability":"mutable","name":"digest","nameLocation":"11243:6:30","nodeType":"VariableDeclaration","scope":16120,"src":"11235:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11235:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11210:40:30"},"returnParameters":{"id":16119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16116,"mutability":"mutable","name":"r","nameLocation":"11277:1:30","nodeType":"VariableDeclaration","scope":16120,"src":"11269:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11269:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16118,"mutability":"mutable","name":"vs","nameLocation":"11288:2:30","nodeType":"VariableDeclaration","scope":16120,"src":"11280:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11280:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11268:23:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16132,"nodeType":"FunctionDefinition","src":"11603:103:30","nodes":[],"documentation":{"id":16121,"nodeType":"StructuredDocumentation","src":"11298:300:30","text":"Signs `digest` with `privateKey` using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"cc2a781f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"11612:11:30","parameters":{"id":16126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16123,"mutability":"mutable","name":"privateKey","nameLocation":"11632:10:30","nodeType":"VariableDeclaration","scope":16132,"src":"11624:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16122,"name":"uint256","nodeType":"ElementaryTypeName","src":"11624:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16125,"mutability":"mutable","name":"digest","nameLocation":"11652:6:30","nodeType":"VariableDeclaration","scope":16132,"src":"11644:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11644:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11623:36:30"},"returnParameters":{"id":16131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16128,"mutability":"mutable","name":"r","nameLocation":"11691:1:30","nodeType":"VariableDeclaration","scope":16132,"src":"11683:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11683:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16130,"mutability":"mutable","name":"vs","nameLocation":"11702:2:30","nodeType":"VariableDeclaration","scope":16132,"src":"11694:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11694:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11682:23:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16142,"nodeType":"FunctionDefinition","src":"12382:83:30","nodes":[],"documentation":{"id":16133,"nodeType":"StructuredDocumentation","src":"11712:665:30","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"a282dc4b","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"12391:11:30","parameters":{"id":16136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16135,"mutability":"mutable","name":"digest","nameLocation":"12411:6:30","nodeType":"VariableDeclaration","scope":16142,"src":"12403:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12403:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12402:16:30"},"returnParameters":{"id":16141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16138,"mutability":"mutable","name":"r","nameLocation":"12450:1:30","nodeType":"VariableDeclaration","scope":16142,"src":"12442:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12442:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16140,"mutability":"mutable","name":"vs","nameLocation":"12461:2:30","nodeType":"VariableDeclaration","scope":16142,"src":"12453:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12453:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12441:23:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16154,"nodeType":"FunctionDefinition","src":"12879:99:30","nodes":[],"documentation":{"id":16143,"nodeType":"StructuredDocumentation","src":"12471:403:30","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8e2f97bf","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"12888:11:30","parameters":{"id":16148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16145,"mutability":"mutable","name":"signer","nameLocation":"12908:6:30","nodeType":"VariableDeclaration","scope":16154,"src":"12900:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16144,"name":"address","nodeType":"ElementaryTypeName","src":"12900:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16147,"mutability":"mutable","name":"digest","nameLocation":"12924:6:30","nodeType":"VariableDeclaration","scope":16154,"src":"12916:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12916:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12899:32:30"},"returnParameters":{"id":16153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16150,"mutability":"mutable","name":"r","nameLocation":"12963:1:30","nodeType":"VariableDeclaration","scope":16154,"src":"12955:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12955:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16152,"mutability":"mutable","name":"vs","nameLocation":"12974:2:30","nodeType":"VariableDeclaration","scope":16154,"src":"12966:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12966:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12954:23:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16166,"nodeType":"FunctionDefinition","src":"13052:99:30","nodes":[],"documentation":{"id":16155,"nodeType":"StructuredDocumentation","src":"12984:63:30","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"13061:8:30","parameters":{"id":16160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16157,"mutability":"mutable","name":"privateKey","nameLocation":"13078:10:30","nodeType":"VariableDeclaration","scope":16166,"src":"13070:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16156,"name":"uint256","nodeType":"ElementaryTypeName","src":"13070:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16159,"mutability":"mutable","name":"digest","nameLocation":"13098:6:30","nodeType":"VariableDeclaration","scope":16166,"src":"13090:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13090:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13069:36:30"},"returnParameters":{"id":16165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16162,"mutability":"mutable","name":"r","nameLocation":"13137:1:30","nodeType":"VariableDeclaration","scope":16166,"src":"13129:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13129:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16164,"mutability":"mutable","name":"s","nameLocation":"13148:1:30","nodeType":"VariableDeclaration","scope":16166,"src":"13140:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13140:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13128:22:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16181,"nodeType":"FunctionDefinition","src":"13193:103:30","nodes":[],"documentation":{"id":16167,"nodeType":"StructuredDocumentation","src":"13157:31:30","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"13202:4:30","parameters":{"id":16173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16170,"mutability":"mutable","name":"wallet","nameLocation":"13223:6:30","nodeType":"VariableDeclaration","scope":16181,"src":"13207:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15940_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16169,"nodeType":"UserDefinedTypeName","pathNode":{"id":16168,"name":"Wallet","nameLocations":["13207:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":15940,"src":"13207:6:30"},"referencedDeclaration":15940,"src":"13207:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15940_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":16172,"mutability":"mutable","name":"digest","nameLocation":"13239:6:30","nodeType":"VariableDeclaration","scope":16181,"src":"13231:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13231:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13206:40:30"},"returnParameters":{"id":16180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16175,"mutability":"mutable","name":"v","nameLocation":"13271:1:30","nodeType":"VariableDeclaration","scope":16181,"src":"13265:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":16174,"name":"uint8","nodeType":"ElementaryTypeName","src":"13265:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":16177,"mutability":"mutable","name":"r","nameLocation":"13282:1:30","nodeType":"VariableDeclaration","scope":16181,"src":"13274:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13274:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16179,"mutability":"mutable","name":"s","nameLocation":"13293:1:30","nodeType":"VariableDeclaration","scope":16181,"src":"13285:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13285:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13264:31:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16195,"nodeType":"FunctionDefinition","src":"13370:104:30","nodes":[],"documentation":{"id":16182,"nodeType":"StructuredDocumentation","src":"13302:63:30","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"13379:4:30","parameters":{"id":16187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16184,"mutability":"mutable","name":"privateKey","nameLocation":"13392:10:30","nodeType":"VariableDeclaration","scope":16195,"src":"13384:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16183,"name":"uint256","nodeType":"ElementaryTypeName","src":"13384:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16186,"mutability":"mutable","name":"digest","nameLocation":"13412:6:30","nodeType":"VariableDeclaration","scope":16195,"src":"13404:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13404:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13383:36:30"},"returnParameters":{"id":16194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16189,"mutability":"mutable","name":"v","nameLocation":"13449:1:30","nodeType":"VariableDeclaration","scope":16195,"src":"13443:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":16188,"name":"uint8","nodeType":"ElementaryTypeName","src":"13443:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":16191,"mutability":"mutable","name":"r","nameLocation":"13460:1:30","nodeType":"VariableDeclaration","scope":16195,"src":"13452:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13452:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16193,"mutability":"mutable","name":"s","nameLocation":"13471:1:30","nodeType":"VariableDeclaration","scope":16195,"src":"13463:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13463:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13442:31:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16207,"nodeType":"FunctionDefinition","src":"13913:84:30","nodes":[],"documentation":{"id":16196,"nodeType":"StructuredDocumentation","src":"13480:428:30","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"13922:4:30","parameters":{"id":16199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16198,"mutability":"mutable","name":"digest","nameLocation":"13935:6:30","nodeType":"VariableDeclaration","scope":16207,"src":"13927:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13927:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13926:16:30"},"returnParameters":{"id":16206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16201,"mutability":"mutable","name":"v","nameLocation":"13972:1:30","nodeType":"VariableDeclaration","scope":16207,"src":"13966:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":16200,"name":"uint8","nodeType":"ElementaryTypeName","src":"13966:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":16203,"mutability":"mutable","name":"r","nameLocation":"13983:1:30","nodeType":"VariableDeclaration","scope":16207,"src":"13975:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13975:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16205,"mutability":"mutable","name":"s","nameLocation":"13994:1:30","nodeType":"VariableDeclaration","scope":16207,"src":"13986:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13986:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13965:31:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16221,"nodeType":"FunctionDefinition","src":"14174:100:30","nodes":[],"documentation":{"id":16208,"nodeType":"StructuredDocumentation","src":"14003:166:30","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"14183:4:30","parameters":{"id":16213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16210,"mutability":"mutable","name":"signer","nameLocation":"14196:6:30","nodeType":"VariableDeclaration","scope":16221,"src":"14188:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16209,"name":"address","nodeType":"ElementaryTypeName","src":"14188:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16212,"mutability":"mutable","name":"digest","nameLocation":"14212:6:30","nodeType":"VariableDeclaration","scope":16221,"src":"14204:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14204:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14187:32:30"},"returnParameters":{"id":16220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16215,"mutability":"mutable","name":"v","nameLocation":"14249:1:30","nodeType":"VariableDeclaration","scope":16221,"src":"14243:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":16214,"name":"uint8","nodeType":"ElementaryTypeName","src":"14243:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":16217,"mutability":"mutable","name":"r","nameLocation":"14260:1:30","nodeType":"VariableDeclaration","scope":16221,"src":"14252:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16216,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14252:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16219,"mutability":"mutable","name":"s","nameLocation":"14271:1:30","nodeType":"VariableDeclaration","scope":16221,"src":"14263:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14263:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14242:31:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16229,"nodeType":"FunctionDefinition","src":"14461:80:30","nodes":[],"documentation":{"id":16222,"nodeType":"StructuredDocumentation","src":"14318:138:30","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"14470:10:30","parameters":{"id":16225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16224,"mutability":"mutable","name":"name","nameLocation":"14497:4:30","nodeType":"VariableDeclaration","scope":16229,"src":"14481:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16223,"name":"string","nodeType":"ElementaryTypeName","src":"14481:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14480:22:30"},"returnParameters":{"id":16228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16227,"mutability":"mutable","name":"value","nameLocation":"14534:5:30","nodeType":"VariableDeclaration","scope":16229,"src":"14526:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16226,"name":"address","nodeType":"ElementaryTypeName","src":"14526:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14525:15:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16240,"nodeType":"FunctionDefinition","src":"14724:112:30","nodes":[],"documentation":{"id":16230,"nodeType":"StructuredDocumentation","src":"14547:172:30","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"14733:10:30","parameters":{"id":16235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16232,"mutability":"mutable","name":"name","nameLocation":"14760:4:30","nodeType":"VariableDeclaration","scope":16240,"src":"14744:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16231,"name":"string","nodeType":"ElementaryTypeName","src":"14744:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16234,"mutability":"mutable","name":"delim","nameLocation":"14782:5:30","nodeType":"VariableDeclaration","scope":16240,"src":"14766:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16233,"name":"string","nodeType":"ElementaryTypeName","src":"14766:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14743:45:30"},"returnParameters":{"id":16239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16238,"mutability":"mutable","name":"value","nameLocation":"14829:5:30","nodeType":"VariableDeclaration","scope":16240,"src":"14812:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16236,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16237,"nodeType":"ArrayTypeName","src":"14812:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"14811:24:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16248,"nodeType":"FunctionDefinition","src":"14982:74:30","nodes":[],"documentation":{"id":16241,"nodeType":"StructuredDocumentation","src":"14842:135:30","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"14991:7:30","parameters":{"id":16244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16243,"mutability":"mutable","name":"name","nameLocation":"15015:4:30","nodeType":"VariableDeclaration","scope":16248,"src":"14999:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16242,"name":"string","nodeType":"ElementaryTypeName","src":"14999:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14998:22:30"},"returnParameters":{"id":16247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16246,"mutability":"mutable","name":"value","nameLocation":"15049:5:30","nodeType":"VariableDeclaration","scope":16248,"src":"15044:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16245,"name":"bool","nodeType":"ElementaryTypeName","src":"15044:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15043:12:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16259,"nodeType":"FunctionDefinition","src":"15236:106:30","nodes":[],"documentation":{"id":16249,"nodeType":"StructuredDocumentation","src":"15062:169:30","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"15245:7:30","parameters":{"id":16254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16251,"mutability":"mutable","name":"name","nameLocation":"15269:4:30","nodeType":"VariableDeclaration","scope":16259,"src":"15253:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16250,"name":"string","nodeType":"ElementaryTypeName","src":"15253:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16253,"mutability":"mutable","name":"delim","nameLocation":"15291:5:30","nodeType":"VariableDeclaration","scope":16259,"src":"15275:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16252,"name":"string","nodeType":"ElementaryTypeName","src":"15275:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15252:45:30"},"returnParameters":{"id":16258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16257,"mutability":"mutable","name":"value","nameLocation":"15335:5:30","nodeType":"VariableDeclaration","scope":16259,"src":"15321:19:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16255,"name":"bool","nodeType":"ElementaryTypeName","src":"15321:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16256,"nodeType":"ArrayTypeName","src":"15321:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15320:21:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16267,"nodeType":"FunctionDefinition","src":"15491:80:30","nodes":[],"documentation":{"id":16260,"nodeType":"StructuredDocumentation","src":"15348:138:30","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"15500:10:30","parameters":{"id":16263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16262,"mutability":"mutable","name":"name","nameLocation":"15527:4:30","nodeType":"VariableDeclaration","scope":16267,"src":"15511:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16261,"name":"string","nodeType":"ElementaryTypeName","src":"15511:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15510:22:30"},"returnParameters":{"id":16266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16265,"mutability":"mutable","name":"value","nameLocation":"15564:5:30","nodeType":"VariableDeclaration","scope":16267,"src":"15556:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15556:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15555:15:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16278,"nodeType":"FunctionDefinition","src":"15754:112:30","nodes":[],"documentation":{"id":16268,"nodeType":"StructuredDocumentation","src":"15577:172:30","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"15763:10:30","parameters":{"id":16273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16270,"mutability":"mutable","name":"name","nameLocation":"15790:4:30","nodeType":"VariableDeclaration","scope":16278,"src":"15774:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16269,"name":"string","nodeType":"ElementaryTypeName","src":"15774:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16272,"mutability":"mutable","name":"delim","nameLocation":"15812:5:30","nodeType":"VariableDeclaration","scope":16278,"src":"15796:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16271,"name":"string","nodeType":"ElementaryTypeName","src":"15796:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15773:45:30"},"returnParameters":{"id":16277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16276,"mutability":"mutable","name":"value","nameLocation":"15859:5:30","nodeType":"VariableDeclaration","scope":16278,"src":"15842:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16274,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15842:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16275,"nodeType":"ArrayTypeName","src":"15842:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"15841:24:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16286,"nodeType":"FunctionDefinition","src":"16013:83:30","nodes":[],"documentation":{"id":16279,"nodeType":"StructuredDocumentation","src":"15872:136:30","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"16022:8:30","parameters":{"id":16282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16281,"mutability":"mutable","name":"name","nameLocation":"16047:4:30","nodeType":"VariableDeclaration","scope":16286,"src":"16031:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16280,"name":"string","nodeType":"ElementaryTypeName","src":"16031:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16030:22:30"},"returnParameters":{"id":16285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16284,"mutability":"mutable","name":"value","nameLocation":"16089:5:30","nodeType":"VariableDeclaration","scope":16286,"src":"16076:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16283,"name":"bytes","nodeType":"ElementaryTypeName","src":"16076:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16075:20:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16297,"nodeType":"FunctionDefinition","src":"16277:108:30","nodes":[],"documentation":{"id":16287,"nodeType":"StructuredDocumentation","src":"16102:170:30","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"16286:8:30","parameters":{"id":16292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16289,"mutability":"mutable","name":"name","nameLocation":"16311:4:30","nodeType":"VariableDeclaration","scope":16297,"src":"16295:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16288,"name":"string","nodeType":"ElementaryTypeName","src":"16295:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16291,"mutability":"mutable","name":"delim","nameLocation":"16333:5:30","nodeType":"VariableDeclaration","scope":16297,"src":"16317:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16290,"name":"string","nodeType":"ElementaryTypeName","src":"16317:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16294:45:30"},"returnParameters":{"id":16296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16295,"mutability":"mutable","name":"value","nameLocation":"16378:5:30","nodeType":"VariableDeclaration","scope":16297,"src":"16363:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16293,"name":"bytes","nodeType":"ElementaryTypeName","src":"16363:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16294,"nodeType":"ArrayTypeName","src":"16363:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"16362:22:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16305,"nodeType":"FunctionDefinition","src":"16487:77:30","nodes":[],"documentation":{"id":16298,"nodeType":"StructuredDocumentation","src":"16391:91:30","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"16496:9:30","parameters":{"id":16301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16300,"mutability":"mutable","name":"name","nameLocation":"16522:4:30","nodeType":"VariableDeclaration","scope":16305,"src":"16506:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16299,"name":"string","nodeType":"ElementaryTypeName","src":"16506:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16505:22:30"},"returnParameters":{"id":16304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16303,"mutability":"mutable","name":"result","nameLocation":"16556:6:30","nodeType":"VariableDeclaration","scope":16305,"src":"16551:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16302,"name":"bool","nodeType":"ElementaryTypeName","src":"16551:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16550:13:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16313,"nodeType":"FunctionDefinition","src":"16712:75:30","nodes":[],"documentation":{"id":16306,"nodeType":"StructuredDocumentation","src":"16570:137:30","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"16721:6:30","parameters":{"id":16309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16308,"mutability":"mutable","name":"name","nameLocation":"16744:4:30","nodeType":"VariableDeclaration","scope":16313,"src":"16728:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16307,"name":"string","nodeType":"ElementaryTypeName","src":"16728:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16727:22:30"},"returnParameters":{"id":16312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16311,"mutability":"mutable","name":"value","nameLocation":"16780:5:30","nodeType":"VariableDeclaration","scope":16313,"src":"16773:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16310,"name":"int256","nodeType":"ElementaryTypeName","src":"16773:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"16772:14:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16324,"nodeType":"FunctionDefinition","src":"16969:107:30","nodes":[],"documentation":{"id":16314,"nodeType":"StructuredDocumentation","src":"16793:171:30","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"16978:6:30","parameters":{"id":16319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16316,"mutability":"mutable","name":"name","nameLocation":"17001:4:30","nodeType":"VariableDeclaration","scope":16324,"src":"16985:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16315,"name":"string","nodeType":"ElementaryTypeName","src":"16985:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16318,"mutability":"mutable","name":"delim","nameLocation":"17023:5:30","nodeType":"VariableDeclaration","scope":16324,"src":"17007:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16317,"name":"string","nodeType":"ElementaryTypeName","src":"17007:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16984:45:30"},"returnParameters":{"id":16323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16322,"mutability":"mutable","name":"value","nameLocation":"17069:5:30","nodeType":"VariableDeclaration","scope":16324,"src":"17053:21:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16320,"name":"int256","nodeType":"ElementaryTypeName","src":"17053:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16321,"nodeType":"ArrayTypeName","src":"17053:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"17052:23:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16334,"nodeType":"FunctionDefinition","src":"17267:91:30","nodes":[],"documentation":{"id":16325,"nodeType":"StructuredDocumentation","src":"17082:180:30","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"17276:5:30","parameters":{"id":16330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16327,"mutability":"mutable","name":"name","nameLocation":"17298:4:30","nodeType":"VariableDeclaration","scope":16334,"src":"17282:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16326,"name":"string","nodeType":"ElementaryTypeName","src":"17282:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16329,"mutability":"mutable","name":"defaultValue","nameLocation":"17309:12:30","nodeType":"VariableDeclaration","scope":16334,"src":"17304:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16328,"name":"bool","nodeType":"ElementaryTypeName","src":"17304:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17281:41:30"},"returnParameters":{"id":16333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16332,"mutability":"mutable","name":"value","nameLocation":"17351:5:30","nodeType":"VariableDeclaration","scope":16334,"src":"17346:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16331,"name":"bool","nodeType":"ElementaryTypeName","src":"17346:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17345:12:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16344,"nodeType":"FunctionDefinition","src":"17552:97:30","nodes":[],"documentation":{"id":16335,"nodeType":"StructuredDocumentation","src":"17364:183:30","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"17561:5:30","parameters":{"id":16340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16337,"mutability":"mutable","name":"name","nameLocation":"17583:4:30","nodeType":"VariableDeclaration","scope":16344,"src":"17567:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16336,"name":"string","nodeType":"ElementaryTypeName","src":"17567:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16339,"mutability":"mutable","name":"defaultValue","nameLocation":"17597:12:30","nodeType":"VariableDeclaration","scope":16344,"src":"17589:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16338,"name":"uint256","nodeType":"ElementaryTypeName","src":"17589:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17566:44:30"},"returnParameters":{"id":16343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16342,"mutability":"mutable","name":"value","nameLocation":"17642:5:30","nodeType":"VariableDeclaration","scope":16344,"src":"17634:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16341,"name":"uint256","nodeType":"ElementaryTypeName","src":"17634:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17633:15:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16358,"nodeType":"FunctionDefinition","src":"17877:164:30","nodes":[],"documentation":{"id":16345,"nodeType":"StructuredDocumentation","src":"17655:217:30","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"17886:5:30","parameters":{"id":16353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16347,"mutability":"mutable","name":"name","nameLocation":"17908:4:30","nodeType":"VariableDeclaration","scope":16358,"src":"17892:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16346,"name":"string","nodeType":"ElementaryTypeName","src":"17892:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16349,"mutability":"mutable","name":"delim","nameLocation":"17930:5:30","nodeType":"VariableDeclaration","scope":16358,"src":"17914:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16348,"name":"string","nodeType":"ElementaryTypeName","src":"17914:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16352,"mutability":"mutable","name":"defaultValue","nameLocation":"17956:12:30","nodeType":"VariableDeclaration","scope":16358,"src":"17937:31:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16350,"name":"address","nodeType":"ElementaryTypeName","src":"17937:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16351,"nodeType":"ArrayTypeName","src":"17937:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"17891:78:30"},"returnParameters":{"id":16357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16356,"mutability":"mutable","name":"value","nameLocation":"18034:5:30","nodeType":"VariableDeclaration","scope":16358,"src":"18017:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16354,"name":"address","nodeType":"ElementaryTypeName","src":"18017:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16355,"nodeType":"ArrayTypeName","src":"18017:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"18016:24:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16372,"nodeType":"FunctionDefinition","src":"18269:164:30","nodes":[],"documentation":{"id":16359,"nodeType":"StructuredDocumentation","src":"18047:217:30","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"18278:5:30","parameters":{"id":16367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16361,"mutability":"mutable","name":"name","nameLocation":"18300:4:30","nodeType":"VariableDeclaration","scope":16372,"src":"18284:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16360,"name":"string","nodeType":"ElementaryTypeName","src":"18284:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16363,"mutability":"mutable","name":"delim","nameLocation":"18322:5:30","nodeType":"VariableDeclaration","scope":16372,"src":"18306:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16362,"name":"string","nodeType":"ElementaryTypeName","src":"18306:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16366,"mutability":"mutable","name":"defaultValue","nameLocation":"18348:12:30","nodeType":"VariableDeclaration","scope":16372,"src":"18329:31:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18329:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16365,"nodeType":"ArrayTypeName","src":"18329:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"18283:78:30"},"returnParameters":{"id":16371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16370,"mutability":"mutable","name":"value","nameLocation":"18426:5:30","nodeType":"VariableDeclaration","scope":16372,"src":"18409:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18409:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16369,"nodeType":"ArrayTypeName","src":"18409:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"18408:24:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16386,"nodeType":"FunctionDefinition","src":"18660:162:30","nodes":[],"documentation":{"id":16373,"nodeType":"StructuredDocumentation","src":"18439:216:30","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"18669:5:30","parameters":{"id":16381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16375,"mutability":"mutable","name":"name","nameLocation":"18691:4:30","nodeType":"VariableDeclaration","scope":16386,"src":"18675:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16374,"name":"string","nodeType":"ElementaryTypeName","src":"18675:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16377,"mutability":"mutable","name":"delim","nameLocation":"18713:5:30","nodeType":"VariableDeclaration","scope":16386,"src":"18697:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16376,"name":"string","nodeType":"ElementaryTypeName","src":"18697:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16380,"mutability":"mutable","name":"defaultValue","nameLocation":"18738:12:30","nodeType":"VariableDeclaration","scope":16386,"src":"18720:30:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16378,"name":"string","nodeType":"ElementaryTypeName","src":"18720:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16379,"nodeType":"ArrayTypeName","src":"18720:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"18674:77:30"},"returnParameters":{"id":16385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16384,"mutability":"mutable","name":"value","nameLocation":"18815:5:30","nodeType":"VariableDeclaration","scope":16386,"src":"18799:21:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16382,"name":"string","nodeType":"ElementaryTypeName","src":"18799:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16383,"nodeType":"ArrayTypeName","src":"18799:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"18798:23:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16400,"nodeType":"FunctionDefinition","src":"19048:160:30","nodes":[],"documentation":{"id":16387,"nodeType":"StructuredDocumentation","src":"18828:215:30","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19057:5:30","parameters":{"id":16395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16389,"mutability":"mutable","name":"name","nameLocation":"19079:4:30","nodeType":"VariableDeclaration","scope":16400,"src":"19063:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16388,"name":"string","nodeType":"ElementaryTypeName","src":"19063:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16391,"mutability":"mutable","name":"delim","nameLocation":"19101:5:30","nodeType":"VariableDeclaration","scope":16400,"src":"19085:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16390,"name":"string","nodeType":"ElementaryTypeName","src":"19085:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16394,"mutability":"mutable","name":"defaultValue","nameLocation":"19125:12:30","nodeType":"VariableDeclaration","scope":16400,"src":"19108:29:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16392,"name":"bytes","nodeType":"ElementaryTypeName","src":"19108:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16393,"nodeType":"ArrayTypeName","src":"19108:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"19062:76:30"},"returnParameters":{"id":16399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16398,"mutability":"mutable","name":"value","nameLocation":"19201:5:30","nodeType":"VariableDeclaration","scope":16400,"src":"19186:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16396,"name":"bytes","nodeType":"ElementaryTypeName","src":"19186:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16397,"nodeType":"ArrayTypeName","src":"19186:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"19185:22:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16410,"nodeType":"FunctionDefinition","src":"19401:95:30","nodes":[],"documentation":{"id":16401,"nodeType":"StructuredDocumentation","src":"19214:182:30","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19410:5:30","parameters":{"id":16406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16403,"mutability":"mutable","name":"name","nameLocation":"19432:4:30","nodeType":"VariableDeclaration","scope":16410,"src":"19416:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16402,"name":"string","nodeType":"ElementaryTypeName","src":"19416:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16405,"mutability":"mutable","name":"defaultValue","nameLocation":"19445:12:30","nodeType":"VariableDeclaration","scope":16410,"src":"19438:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16404,"name":"int256","nodeType":"ElementaryTypeName","src":"19438:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19415:43:30"},"returnParameters":{"id":16409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16408,"mutability":"mutable","name":"value","nameLocation":"19489:5:30","nodeType":"VariableDeclaration","scope":16410,"src":"19482:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16407,"name":"int256","nodeType":"ElementaryTypeName","src":"19482:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19481:14:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16420,"nodeType":"FunctionDefinition","src":"19690:97:30","nodes":[],"documentation":{"id":16411,"nodeType":"StructuredDocumentation","src":"19502:183:30","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19699:5:30","parameters":{"id":16416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16413,"mutability":"mutable","name":"name","nameLocation":"19721:4:30","nodeType":"VariableDeclaration","scope":16420,"src":"19705:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16412,"name":"string","nodeType":"ElementaryTypeName","src":"19705:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16415,"mutability":"mutable","name":"defaultValue","nameLocation":"19735:12:30","nodeType":"VariableDeclaration","scope":16420,"src":"19727:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16414,"name":"address","nodeType":"ElementaryTypeName","src":"19727:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19704:44:30"},"returnParameters":{"id":16419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16418,"mutability":"mutable","name":"value","nameLocation":"19780:5:30","nodeType":"VariableDeclaration","scope":16420,"src":"19772:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16417,"name":"address","nodeType":"ElementaryTypeName","src":"19772:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19771:15:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16430,"nodeType":"FunctionDefinition","src":"19981:97:30","nodes":[],"documentation":{"id":16421,"nodeType":"StructuredDocumentation","src":"19793:183:30","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19990:5:30","parameters":{"id":16426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16423,"mutability":"mutable","name":"name","nameLocation":"20012:4:30","nodeType":"VariableDeclaration","scope":16430,"src":"19996:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16422,"name":"string","nodeType":"ElementaryTypeName","src":"19996:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16425,"mutability":"mutable","name":"defaultValue","nameLocation":"20026:12:30","nodeType":"VariableDeclaration","scope":16430,"src":"20018:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20018:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19995:44:30"},"returnParameters":{"id":16429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16428,"mutability":"mutable","name":"value","nameLocation":"20071:5:30","nodeType":"VariableDeclaration","scope":16430,"src":"20063:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16427,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20063:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20062:15:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16440,"nodeType":"FunctionDefinition","src":"20271:111:30","nodes":[],"documentation":{"id":16431,"nodeType":"StructuredDocumentation","src":"20084:182:30","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20280:5:30","parameters":{"id":16436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16433,"mutability":"mutable","name":"name","nameLocation":"20302:4:30","nodeType":"VariableDeclaration","scope":16440,"src":"20286:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16432,"name":"string","nodeType":"ElementaryTypeName","src":"20286:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16435,"mutability":"mutable","name":"defaultValue","nameLocation":"20324:12:30","nodeType":"VariableDeclaration","scope":16440,"src":"20308:28:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16434,"name":"string","nodeType":"ElementaryTypeName","src":"20308:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20285:52:30"},"returnParameters":{"id":16439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16438,"mutability":"mutable","name":"value","nameLocation":"20375:5:30","nodeType":"VariableDeclaration","scope":16440,"src":"20361:19:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16437,"name":"string","nodeType":"ElementaryTypeName","src":"20361:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20360:21:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16450,"nodeType":"FunctionDefinition","src":"20574:109:30","nodes":[],"documentation":{"id":16441,"nodeType":"StructuredDocumentation","src":"20388:181:30","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20583:5:30","parameters":{"id":16446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16443,"mutability":"mutable","name":"name","nameLocation":"20605:4:30","nodeType":"VariableDeclaration","scope":16450,"src":"20589:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16442,"name":"string","nodeType":"ElementaryTypeName","src":"20589:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16445,"mutability":"mutable","name":"defaultValue","nameLocation":"20626:12:30","nodeType":"VariableDeclaration","scope":16450,"src":"20611:27:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16444,"name":"bytes","nodeType":"ElementaryTypeName","src":"20611:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20588:51:30"},"returnParameters":{"id":16449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16448,"mutability":"mutable","name":"value","nameLocation":"20676:5:30","nodeType":"VariableDeclaration","scope":16450,"src":"20663:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16447,"name":"bytes","nodeType":"ElementaryTypeName","src":"20663:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20662:20:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16464,"nodeType":"FunctionDefinition","src":"20908:158:30","nodes":[],"documentation":{"id":16451,"nodeType":"StructuredDocumentation","src":"20689:214:30","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20917:5:30","parameters":{"id":16459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16453,"mutability":"mutable","name":"name","nameLocation":"20939:4:30","nodeType":"VariableDeclaration","scope":16464,"src":"20923:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16452,"name":"string","nodeType":"ElementaryTypeName","src":"20923:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16455,"mutability":"mutable","name":"delim","nameLocation":"20961:5:30","nodeType":"VariableDeclaration","scope":16464,"src":"20945:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16454,"name":"string","nodeType":"ElementaryTypeName","src":"20945:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16458,"mutability":"mutable","name":"defaultValue","nameLocation":"20984:12:30","nodeType":"VariableDeclaration","scope":16464,"src":"20968:28:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16456,"name":"bool","nodeType":"ElementaryTypeName","src":"20968:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16457,"nodeType":"ArrayTypeName","src":"20968:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"20922:75:30"},"returnParameters":{"id":16463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16462,"mutability":"mutable","name":"value","nameLocation":"21059:5:30","nodeType":"VariableDeclaration","scope":16464,"src":"21045:19:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16460,"name":"bool","nodeType":"ElementaryTypeName","src":"21045:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16461,"nodeType":"ArrayTypeName","src":"21045:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"21044:21:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16478,"nodeType":"FunctionDefinition","src":"21294:164:30","nodes":[],"documentation":{"id":16465,"nodeType":"StructuredDocumentation","src":"21072:217:30","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21303:5:30","parameters":{"id":16473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16467,"mutability":"mutable","name":"name","nameLocation":"21325:4:30","nodeType":"VariableDeclaration","scope":16478,"src":"21309:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16466,"name":"string","nodeType":"ElementaryTypeName","src":"21309:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16469,"mutability":"mutable","name":"delim","nameLocation":"21347:5:30","nodeType":"VariableDeclaration","scope":16478,"src":"21331:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16468,"name":"string","nodeType":"ElementaryTypeName","src":"21331:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16472,"mutability":"mutable","name":"defaultValue","nameLocation":"21373:12:30","nodeType":"VariableDeclaration","scope":16478,"src":"21354:31:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16470,"name":"uint256","nodeType":"ElementaryTypeName","src":"21354:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16471,"nodeType":"ArrayTypeName","src":"21354:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21308:78:30"},"returnParameters":{"id":16477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16476,"mutability":"mutable","name":"value","nameLocation":"21451:5:30","nodeType":"VariableDeclaration","scope":16478,"src":"21434:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16474,"name":"uint256","nodeType":"ElementaryTypeName","src":"21434:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16475,"nodeType":"ArrayTypeName","src":"21434:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21433:24:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16492,"nodeType":"FunctionDefinition","src":"21685:162:30","nodes":[],"documentation":{"id":16479,"nodeType":"StructuredDocumentation","src":"21464:216:30","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21694:5:30","parameters":{"id":16487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16481,"mutability":"mutable","name":"name","nameLocation":"21716:4:30","nodeType":"VariableDeclaration","scope":16492,"src":"21700:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16480,"name":"string","nodeType":"ElementaryTypeName","src":"21700:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16483,"mutability":"mutable","name":"delim","nameLocation":"21738:5:30","nodeType":"VariableDeclaration","scope":16492,"src":"21722:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16482,"name":"string","nodeType":"ElementaryTypeName","src":"21722:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16486,"mutability":"mutable","name":"defaultValue","nameLocation":"21763:12:30","nodeType":"VariableDeclaration","scope":16492,"src":"21745:30:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16484,"name":"int256","nodeType":"ElementaryTypeName","src":"21745:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16485,"nodeType":"ArrayTypeName","src":"21745:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"21699:77:30"},"returnParameters":{"id":16491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16490,"mutability":"mutable","name":"value","nameLocation":"21840:5:30","nodeType":"VariableDeclaration","scope":16492,"src":"21824:21:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16488,"name":"int256","nodeType":"ElementaryTypeName","src":"21824:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16489,"nodeType":"ArrayTypeName","src":"21824:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"21823:23:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16500,"nodeType":"FunctionDefinition","src":"21995:85:30","nodes":[],"documentation":{"id":16493,"nodeType":"StructuredDocumentation","src":"21853:137:30","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"22004:9:30","parameters":{"id":16496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16495,"mutability":"mutable","name":"name","nameLocation":"22030:4:30","nodeType":"VariableDeclaration","scope":16500,"src":"22014:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16494,"name":"string","nodeType":"ElementaryTypeName","src":"22014:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22013:22:30"},"returnParameters":{"id":16499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16498,"mutability":"mutable","name":"value","nameLocation":"22073:5:30","nodeType":"VariableDeclaration","scope":16500,"src":"22059:19:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16497,"name":"string","nodeType":"ElementaryTypeName","src":"22059:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22058:21:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16511,"nodeType":"FunctionDefinition","src":"22262:110:30","nodes":[],"documentation":{"id":16501,"nodeType":"StructuredDocumentation","src":"22086:171:30","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"22271:9:30","parameters":{"id":16506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16503,"mutability":"mutable","name":"name","nameLocation":"22297:4:30","nodeType":"VariableDeclaration","scope":16511,"src":"22281:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16502,"name":"string","nodeType":"ElementaryTypeName","src":"22281:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16505,"mutability":"mutable","name":"delim","nameLocation":"22319:5:30","nodeType":"VariableDeclaration","scope":16511,"src":"22303:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16504,"name":"string","nodeType":"ElementaryTypeName","src":"22303:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22280:45:30"},"returnParameters":{"id":16510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16509,"mutability":"mutable","name":"value","nameLocation":"22365:5:30","nodeType":"VariableDeclaration","scope":16511,"src":"22349:21:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16507,"name":"string","nodeType":"ElementaryTypeName","src":"22349:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16508,"nodeType":"ArrayTypeName","src":"22349:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"22348:23:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16519,"nodeType":"FunctionDefinition","src":"22521:77:30","nodes":[],"documentation":{"id":16512,"nodeType":"StructuredDocumentation","src":"22378:138:30","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"22530:7:30","parameters":{"id":16515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16514,"mutability":"mutable","name":"name","nameLocation":"22554:4:30","nodeType":"VariableDeclaration","scope":16519,"src":"22538:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16513,"name":"string","nodeType":"ElementaryTypeName","src":"22538:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22537:22:30"},"returnParameters":{"id":16518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16517,"mutability":"mutable","name":"value","nameLocation":"22591:5:30","nodeType":"VariableDeclaration","scope":16519,"src":"22583:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16516,"name":"uint256","nodeType":"ElementaryTypeName","src":"22583:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22582:15:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16530,"nodeType":"FunctionDefinition","src":"22781:109:30","nodes":[],"documentation":{"id":16520,"nodeType":"StructuredDocumentation","src":"22604:172:30","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"22790:7:30","parameters":{"id":16525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16522,"mutability":"mutable","name":"name","nameLocation":"22814:4:30","nodeType":"VariableDeclaration","scope":16530,"src":"22798:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16521,"name":"string","nodeType":"ElementaryTypeName","src":"22798:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16524,"mutability":"mutable","name":"delim","nameLocation":"22836:5:30","nodeType":"VariableDeclaration","scope":16530,"src":"22820:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16523,"name":"string","nodeType":"ElementaryTypeName","src":"22820:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22797:45:30"},"returnParameters":{"id":16529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16528,"mutability":"mutable","name":"value","nameLocation":"22883:5:30","nodeType":"VariableDeclaration","scope":16530,"src":"22866:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16526,"name":"uint256","nodeType":"ElementaryTypeName","src":"22866:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16527,"nodeType":"ArrayTypeName","src":"22866:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"22865:24:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16539,"nodeType":"FunctionDefinition","src":"22967:77:30","nodes":[],"documentation":{"id":16531,"nodeType":"StructuredDocumentation","src":"22896:66:30","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"22976:9:30","parameters":{"id":16535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16534,"mutability":"mutable","name":"context","nameLocation":"22999:7:30","nodeType":"VariableDeclaration","scope":16539,"src":"22986:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$15866","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":16533,"nodeType":"UserDefinedTypeName","pathNode":{"id":16532,"name":"ForgeContext","nameLocations":["22986:12:30"],"nodeType":"IdentifierPath","referencedDeclaration":15866,"src":"22986:12:30"},"referencedDeclaration":15866,"src":"22986:12:30","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$15866","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"22985:22:30"},"returnParameters":{"id":16538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16537,"mutability":"mutable","name":"result","nameLocation":"23036:6:30","nodeType":"VariableDeclaration","scope":16539,"src":"23031:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16536,"name":"bool","nodeType":"ElementaryTypeName","src":"23031:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23030:13:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16547,"nodeType":"FunctionDefinition","src":"23086:70:30","nodes":[],"documentation":{"id":16540,"nodeType":"StructuredDocumentation","src":"23050:31:30","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"23095:6:30","parameters":{"id":16545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16542,"mutability":"mutable","name":"name","nameLocation":"23118:4:30","nodeType":"VariableDeclaration","scope":16547,"src":"23102:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16541,"name":"string","nodeType":"ElementaryTypeName","src":"23102:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16544,"mutability":"mutable","name":"value","nameLocation":"23140:5:30","nodeType":"VariableDeclaration","scope":16547,"src":"23124:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16543,"name":"string","nodeType":"ElementaryTypeName","src":"23124:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23101:45:30"},"returnParameters":{"id":16546,"nodeType":"ParameterList","parameters":[],"src":"23155:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16559,"nodeType":"FunctionDefinition","src":"23288:109:30","nodes":[],"documentation":{"id":16548,"nodeType":"StructuredDocumentation","src":"23192:91:30","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"23297:8:30","parameters":{"id":16551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16550,"mutability":"mutable","name":"target","nameLocation":"23314:6:30","nodeType":"VariableDeclaration","scope":16559,"src":"23306:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16549,"name":"address","nodeType":"ElementaryTypeName","src":"23306:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23305:16:30"},"returnParameters":{"id":16558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16554,"mutability":"mutable","name":"readSlots","nameLocation":"23357:9:30","nodeType":"VariableDeclaration","scope":16559,"src":"23340:26:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23340:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16553,"nodeType":"ArrayTypeName","src":"23340:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":16557,"mutability":"mutable","name":"writeSlots","nameLocation":"23385:10:30","nodeType":"VariableDeclaration","scope":16559,"src":"23368:27:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23368:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16556,"nodeType":"ArrayTypeName","src":"23368:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"23339:57:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16567,"nodeType":"FunctionDefinition","src":"23453:74:30","nodes":[],"documentation":{"id":16560,"nodeType":"StructuredDocumentation","src":"23403:45:30","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"23462:4:30","parameters":{"id":16563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16562,"mutability":"mutable","name":"privateKey","nameLocation":"23475:10:30","nodeType":"VariableDeclaration","scope":16567,"src":"23467:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16561,"name":"uint256","nodeType":"ElementaryTypeName","src":"23467:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23466:20:30"},"returnParameters":{"id":16566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16565,"mutability":"mutable","name":"keyAddr","nameLocation":"23518:7:30","nodeType":"VariableDeclaration","scope":16567,"src":"23510:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16564,"name":"address","nodeType":"ElementaryTypeName","src":"23510:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23509:17:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16584,"nodeType":"FunctionDefinition","src":"23590:160:30","nodes":[],"documentation":{"id":16568,"nodeType":"StructuredDocumentation","src":"23533:52:30","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"23599:11:30","parameters":{"id":16578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16570,"mutability":"mutable","name":"fromBlock","nameLocation":"23619:9:30","nodeType":"VariableDeclaration","scope":16584,"src":"23611:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16569,"name":"uint256","nodeType":"ElementaryTypeName","src":"23611:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16572,"mutability":"mutable","name":"toBlock","nameLocation":"23638:7:30","nodeType":"VariableDeclaration","scope":16584,"src":"23630:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16571,"name":"uint256","nodeType":"ElementaryTypeName","src":"23630:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16574,"mutability":"mutable","name":"target","nameLocation":"23655:6:30","nodeType":"VariableDeclaration","scope":16584,"src":"23647:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16573,"name":"address","nodeType":"ElementaryTypeName","src":"23647:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16577,"mutability":"mutable","name":"topics","nameLocation":"23682:6:30","nodeType":"VariableDeclaration","scope":16584,"src":"23663:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23663:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16576,"nodeType":"ArrayTypeName","src":"23663:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"23610:79:30"},"returnParameters":{"id":16583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16582,"mutability":"mutable","name":"logs","nameLocation":"23744:4:30","nodeType":"VariableDeclaration","scope":16584,"src":"23724:24:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$15902_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":16580,"nodeType":"UserDefinedTypeName","pathNode":{"id":16579,"name":"EthGetLogs","nameLocations":["23724:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":15902,"src":"23724:10:30"},"referencedDeclaration":15902,"src":"23724:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$15902_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":16581,"nodeType":"ArrayTypeName","src":"23724:12:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$15902_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"23723:26:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16590,"nodeType":"FunctionDefinition","src":"24087:70:30","nodes":[],"documentation":{"id":16585,"nodeType":"StructuredDocumentation","src":"23756:326:30","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"24096:14:30","parameters":{"id":16586,"nodeType":"ParameterList","parameters":[],"src":"24110:2:30"},"returnParameters":{"id":16589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16588,"mutability":"mutable","name":"blobBaseFee","nameLocation":"24144:11:30","nodeType":"VariableDeclaration","scope":16590,"src":"24136:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16587,"name":"uint256","nodeType":"ElementaryTypeName","src":"24136:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24135:21:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16596,"nodeType":"FunctionDefinition","src":"24472:65:30","nodes":[],"documentation":{"id":16591,"nodeType":"StructuredDocumentation","src":"24163:304:30","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"24481:14:30","parameters":{"id":16592,"nodeType":"ParameterList","parameters":[],"src":"24495:2:30"},"returnParameters":{"id":16595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16594,"mutability":"mutable","name":"height","nameLocation":"24529:6:30","nodeType":"VariableDeclaration","scope":16596,"src":"24521:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16593,"name":"uint256","nodeType":"ElementaryTypeName","src":"24521:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24520:16:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16602,"nodeType":"FunctionDefinition","src":"24861:71:30","nodes":[],"documentation":{"id":16597,"nodeType":"StructuredDocumentation","src":"24543:313:30","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"24870:17:30","parameters":{"id":16598,"nodeType":"ParameterList","parameters":[],"src":"24887:2:30"},"returnParameters":{"id":16601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16600,"mutability":"mutable","name":"timestamp","nameLocation":"24921:9:30","nodeType":"VariableDeclaration","scope":16602,"src":"24913:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16599,"name":"uint256","nodeType":"ElementaryTypeName","src":"24913:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24912:19:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16616,"nodeType":"FunctionDefinition","src":"25025:146:30","nodes":[],"documentation":{"id":16603,"nodeType":"StructuredDocumentation","src":"24938:82:30","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"25034:24:30","parameters":{"id":16608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16605,"mutability":"mutable","name":"target","nameLocation":"25067:6:30","nodeType":"VariableDeclaration","scope":16616,"src":"25059:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16604,"name":"address","nodeType":"ElementaryTypeName","src":"25059:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16607,"mutability":"mutable","name":"elementSlot","nameLocation":"25083:11:30","nodeType":"VariableDeclaration","scope":16616,"src":"25075:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25075:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25058:37:30"},"returnParameters":{"id":16615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16610,"mutability":"mutable","name":"found","nameLocation":"25135:5:30","nodeType":"VariableDeclaration","scope":16616,"src":"25130:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16609,"name":"bool","nodeType":"ElementaryTypeName","src":"25130:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16612,"mutability":"mutable","name":"key","nameLocation":"25150:3:30","nodeType":"VariableDeclaration","scope":16616,"src":"25142:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25142:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16614,"mutability":"mutable","name":"parent","nameLocation":"25163:6:30","nodeType":"VariableDeclaration","scope":16616,"src":"25155:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25155:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25129:41:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16626,"nodeType":"FunctionDefinition","src":"25268:97:30","nodes":[],"documentation":{"id":16617,"nodeType":"StructuredDocumentation","src":"25177:86:30","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"25277:16:30","parameters":{"id":16622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16619,"mutability":"mutable","name":"target","nameLocation":"25302:6:30","nodeType":"VariableDeclaration","scope":16626,"src":"25294:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16618,"name":"address","nodeType":"ElementaryTypeName","src":"25294:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16621,"mutability":"mutable","name":"mappingSlot","nameLocation":"25318:11:30","nodeType":"VariableDeclaration","scope":16626,"src":"25310:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25310:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25293:37:30"},"returnParameters":{"id":16625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16624,"mutability":"mutable","name":"length","nameLocation":"25357:6:30","nodeType":"VariableDeclaration","scope":16626,"src":"25349:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16623,"name":"uint256","nodeType":"ElementaryTypeName","src":"25349:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25348:16:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16638,"nodeType":"FunctionDefinition","src":"25569:109:30","nodes":[],"documentation":{"id":16627,"nodeType":"StructuredDocumentation","src":"25371:193:30","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"25578:16:30","parameters":{"id":16634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16629,"mutability":"mutable","name":"target","nameLocation":"25603:6:30","nodeType":"VariableDeclaration","scope":16638,"src":"25595:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16628,"name":"address","nodeType":"ElementaryTypeName","src":"25595:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16631,"mutability":"mutable","name":"mappingSlot","nameLocation":"25619:11:30","nodeType":"VariableDeclaration","scope":16638,"src":"25611:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25611:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16633,"mutability":"mutable","name":"idx","nameLocation":"25640:3:30","nodeType":"VariableDeclaration","scope":16638,"src":"25632:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16632,"name":"uint256","nodeType":"ElementaryTypeName","src":"25632:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25594:50:30"},"returnParameters":{"id":16637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16636,"mutability":"mutable","name":"value","nameLocation":"25671:5:30","nodeType":"VariableDeclaration","scope":16638,"src":"25663:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25663:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25662:15:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16646,"nodeType":"FunctionDefinition","src":"25722:72:30","nodes":[],"documentation":{"id":16639,"nodeType":"StructuredDocumentation","src":"25684:33:30","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"25731:8:30","parameters":{"id":16642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16641,"mutability":"mutable","name":"account","nameLocation":"25748:7:30","nodeType":"VariableDeclaration","scope":16646,"src":"25740:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16640,"name":"address","nodeType":"ElementaryTypeName","src":"25740:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25739:17:30"},"returnParameters":{"id":16645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16644,"mutability":"mutable","name":"nonce","nameLocation":"25787:5:30","nodeType":"VariableDeclaration","scope":16646,"src":"25780:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16643,"name":"uint64","nodeType":"ElementaryTypeName","src":"25780:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"25779:14:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16655,"nodeType":"FunctionDefinition","src":"25837:74:30","nodes":[],"documentation":{"id":16647,"nodeType":"StructuredDocumentation","src":"25800:32:30","text":"Get the nonce of a `Wallet`."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"25846:8:30","parameters":{"id":16651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16650,"mutability":"mutable","name":"wallet","nameLocation":"25871:6:30","nodeType":"VariableDeclaration","scope":16655,"src":"25855:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15940_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16649,"nodeType":"UserDefinedTypeName","pathNode":{"id":16648,"name":"Wallet","nameLocations":["25855:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":15940,"src":"25855:6:30"},"referencedDeclaration":15940,"src":"25855:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15940_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"25854:24:30"},"returnParameters":{"id":16654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16653,"mutability":"mutable","name":"nonce","nameLocation":"25904:5:30","nodeType":"VariableDeclaration","scope":16655,"src":"25897:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16652,"name":"uint64","nodeType":"ElementaryTypeName","src":"25897:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"25896:14:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16663,"nodeType":"FunctionDefinition","src":"25953:64:30","nodes":[],"documentation":{"id":16656,"nodeType":"StructuredDocumentation","src":"25917:31:30","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"25962:15:30","parameters":{"id":16657,"nodeType":"ParameterList","parameters":[],"src":"25977:2:30"},"returnParameters":{"id":16662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16661,"mutability":"mutable","name":"logs","nameLocation":"26011:4:30","nodeType":"VariableDeclaration","scope":16663,"src":"25998:17:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$15875_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":16659,"nodeType":"UserDefinedTypeName","pathNode":{"id":16658,"name":"Log","nameLocations":["25998:3:30"],"nodeType":"IdentifierPath","referencedDeclaration":15875,"src":"25998:3:30"},"referencedDeclaration":15875,"src":"25998:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$15875_storage_ptr","typeString":"struct VmSafe.Log"}},"id":16660,"nodeType":"ArrayTypeName","src":"25998:5:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$15875_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"25997:19:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16670,"nodeType":"FunctionDefinition","src":"26067:62:30","nodes":[],"documentation":{"id":16664,"nodeType":"StructuredDocumentation","src":"26023:39:30","text":"Gets the gas used in the last call."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"26076:11:30","parameters":{"id":16665,"nodeType":"ParameterList","parameters":[],"src":"26087:2:30"},"returnParameters":{"id":16669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16668,"mutability":"mutable","name":"gas","nameLocation":"26124:3:30","nodeType":"VariableDeclaration","scope":16670,"src":"26113:14:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$16012_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":16667,"nodeType":"UserDefinedTypeName","pathNode":{"id":16666,"name":"Gas","nameLocations":["26113:3:30"],"nodeType":"IdentifierPath","referencedDeclaration":16012,"src":"26113:3:30"},"referencedDeclaration":16012,"src":"26113:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$16012_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"26112:16:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16680,"nodeType":"FunctionDefinition","src":"26181:81:30","nodes":[],"documentation":{"id":16671,"nodeType":"StructuredDocumentation","src":"26135:41:30","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"26190:4:30","parameters":{"id":16676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16673,"mutability":"mutable","name":"target","nameLocation":"26203:6:30","nodeType":"VariableDeclaration","scope":16680,"src":"26195:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16672,"name":"address","nodeType":"ElementaryTypeName","src":"26195:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16675,"mutability":"mutable","name":"slot","nameLocation":"26219:4:30","nodeType":"VariableDeclaration","scope":16680,"src":"26211:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26211:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26194:30:30"},"returnParameters":{"id":16679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16678,"mutability":"mutable","name":"data","nameLocation":"26256:4:30","nodeType":"VariableDeclaration","scope":16680,"src":"26248:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26248:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26247:14:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16684,"nodeType":"FunctionDefinition","src":"26353:37:30","nodes":[],"documentation":{"id":16681,"nodeType":"StructuredDocumentation","src":"26268:80:30","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"26362:16:30","parameters":{"id":16682,"nodeType":"ParameterList","parameters":[],"src":"26378:2:30"},"returnParameters":{"id":16683,"nodeType":"ParameterList","parameters":[],"src":"26389:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16688,"nodeType":"FunctionDefinition","src":"26442:27:30","nodes":[],"documentation":{"id":16685,"nodeType":"StructuredDocumentation","src":"26396:41:30","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"26451:6:30","parameters":{"id":16686,"nodeType":"ParameterList","parameters":[],"src":"26457:2:30"},"returnParameters":{"id":16687,"nodeType":"ParameterList","parameters":[],"src":"26468:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16692,"nodeType":"FunctionDefinition","src":"26516:31:30","nodes":[],"documentation":{"id":16689,"nodeType":"StructuredDocumentation","src":"26475:36:30","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"26525:10:30","parameters":{"id":16690,"nodeType":"ParameterList","parameters":[],"src":"26535:2:30"},"returnParameters":{"id":16691,"nodeType":"ParameterList","parameters":[],"src":"26546:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16696,"nodeType":"FunctionDefinition","src":"26618:37:30","nodes":[],"documentation":{"id":16693,"nodeType":"StructuredDocumentation","src":"26553:60:30","text":"Reset gas metering (i.e. gas usage is set to gas limit)."},"functionSelector":"be367dd3","implemented":false,"kind":"function","modifiers":[],"name":"resetGasMetering","nameLocation":"26627:16:30","parameters":{"id":16694,"nodeType":"ParameterList","parameters":[],"src":"26643:2:30"},"returnParameters":{"id":16695,"nodeType":"ParameterList","parameters":[],"src":"26654:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16700,"nodeType":"FunctionDefinition","src":"26745:38:30","nodes":[],"documentation":{"id":16697,"nodeType":"StructuredDocumentation","src":"26661:79:30","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"26754:17:30","parameters":{"id":16698,"nodeType":"ParameterList","parameters":[],"src":"26771:2:30"},"returnParameters":{"id":16699,"nodeType":"ParameterList","parameters":[],"src":"26782:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16710,"nodeType":"FunctionDefinition","src":"26860:98:30","nodes":[],"documentation":{"id":16701,"nodeType":"StructuredDocumentation","src":"26789:66:30","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"26869:3:30","parameters":{"id":16706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16703,"mutability":"mutable","name":"method","nameLocation":"26889:6:30","nodeType":"VariableDeclaration","scope":16710,"src":"26873:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16702,"name":"string","nodeType":"ElementaryTypeName","src":"26873:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16705,"mutability":"mutable","name":"params","nameLocation":"26913:6:30","nodeType":"VariableDeclaration","scope":16710,"src":"26897:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16704,"name":"string","nodeType":"ElementaryTypeName","src":"26897:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26872:48:30"},"returnParameters":{"id":16709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16708,"mutability":"mutable","name":"data","nameLocation":"26952:4:30","nodeType":"VariableDeclaration","scope":16710,"src":"26939:17:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16707,"name":"bytes","nodeType":"ElementaryTypeName","src":"26939:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26938:19:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16722,"nodeType":"FunctionDefinition","src":"27033:142:30","nodes":[],"documentation":{"id":16711,"nodeType":"StructuredDocumentation","src":"26964:64:30","text":"Performs an Ethereum JSON-RPC request to the given endpoint."},"functionSelector":"0199a220","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"27042:3:30","parameters":{"id":16718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16713,"mutability":"mutable","name":"urlOrAlias","nameLocation":"27062:10:30","nodeType":"VariableDeclaration","scope":16722,"src":"27046:26:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16712,"name":"string","nodeType":"ElementaryTypeName","src":"27046:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16715,"mutability":"mutable","name":"method","nameLocation":"27090:6:30","nodeType":"VariableDeclaration","scope":16722,"src":"27074:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16714,"name":"string","nodeType":"ElementaryTypeName","src":"27074:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16717,"mutability":"mutable","name":"params","nameLocation":"27114:6:30","nodeType":"VariableDeclaration","scope":16722,"src":"27098:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16716,"name":"string","nodeType":"ElementaryTypeName","src":"27098:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27045:76:30"},"returnParameters":{"id":16721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16720,"mutability":"mutable","name":"data","nameLocation":"27169:4:30","nodeType":"VariableDeclaration","scope":16722,"src":"27156:17:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16719,"name":"bytes","nodeType":"ElementaryTypeName","src":"27156:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27155:19:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16726,"nodeType":"FunctionDefinition","src":"27243:42:30","nodes":[],"documentation":{"id":16723,"nodeType":"StructuredDocumentation","src":"27181:57:30","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"27252:21:30","parameters":{"id":16724,"nodeType":"ParameterList","parameters":[],"src":"27273:2:30"},"returnParameters":{"id":16725,"nodeType":"ParameterList","parameters":[],"src":"27284:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16730,"nodeType":"FunctionDefinition","src":"27429:44:30","nodes":[],"documentation":{"id":16727,"nodeType":"StructuredDocumentation","src":"27291:133:30","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"27438:23:30","parameters":{"id":16728,"nodeType":"ParameterList","parameters":[],"src":"27461:2:30"},"returnParameters":{"id":16729,"nodeType":"ParameterList","parameters":[],"src":"27472:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16738,"nodeType":"FunctionDefinition","src":"27581:92:30","nodes":[],"documentation":{"id":16731,"nodeType":"StructuredDocumentation","src":"27479:97:30","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"27590:22:30","parameters":{"id":16732,"nodeType":"ParameterList","parameters":[],"src":"27612:2:30"},"returnParameters":{"id":16737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16736,"mutability":"mutable","name":"accountAccesses","nameLocation":"27656:15:30","nodeType":"VariableDeclaration","scope":16738,"src":"27633:38:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$15986_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":16734,"nodeType":"UserDefinedTypeName","pathNode":{"id":16733,"name":"AccountAccess","nameLocations":["27633:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":15986,"src":"27633:13:30"},"referencedDeclaration":15986,"src":"27633:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$15986_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":16735,"nodeType":"ArrayTypeName","src":"27633:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$15986_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"27632:40:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16742,"nodeType":"FunctionDefinition","src":"27769:41:30","nodes":[],"documentation":{"id":16739,"nodeType":"StructuredDocumentation","src":"27679:85:30","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"27778:20:30","parameters":{"id":16740,"nodeType":"ParameterList","parameters":[],"src":"27798:2:30"},"returnParameters":{"id":16741,"nodeType":"ParameterList","parameters":[],"src":"27809:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16748,"nodeType":"FunctionDefinition","src":"28009:50:30","nodes":[],"documentation":{"id":16743,"nodeType":"StructuredDocumentation","src":"27853:151:30","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"28018:9:30","parameters":{"id":16746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16745,"mutability":"mutable","name":"path","nameLocation":"28044:4:30","nodeType":"VariableDeclaration","scope":16748,"src":"28028:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16744,"name":"string","nodeType":"ElementaryTypeName","src":"28028:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28027:22:30"},"returnParameters":{"id":16747,"nodeType":"ParameterList","parameters":[],"src":"28058:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16758,"nodeType":"FunctionDefinition","src":"28374:93:30","nodes":[],"documentation":{"id":16749,"nodeType":"StructuredDocumentation","src":"28065:304:30","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"28383:8:30","parameters":{"id":16754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16751,"mutability":"mutable","name":"from","nameLocation":"28408:4:30","nodeType":"VariableDeclaration","scope":16758,"src":"28392:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16750,"name":"string","nodeType":"ElementaryTypeName","src":"28392:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16753,"mutability":"mutable","name":"to","nameLocation":"28430:2:30","nodeType":"VariableDeclaration","scope":16758,"src":"28414:18:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16752,"name":"string","nodeType":"ElementaryTypeName","src":"28414:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28391:42:30"},"returnParameters":{"id":16757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16756,"mutability":"mutable","name":"copied","nameLocation":"28459:6:30","nodeType":"VariableDeclaration","scope":16758,"src":"28452:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16755,"name":"uint64","nodeType":"ElementaryTypeName","src":"28452:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"28451:15:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16766,"nodeType":"FunctionDefinition","src":"28872:66:30","nodes":[],"documentation":{"id":16759,"nodeType":"StructuredDocumentation","src":"28473:394:30","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"28881:9:30","parameters":{"id":16764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16761,"mutability":"mutable","name":"path","nameLocation":"28907:4:30","nodeType":"VariableDeclaration","scope":16766,"src":"28891:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16760,"name":"string","nodeType":"ElementaryTypeName","src":"28891:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16763,"mutability":"mutable","name":"recursive","nameLocation":"28918:9:30","nodeType":"VariableDeclaration","scope":16766,"src":"28913:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16762,"name":"bool","nodeType":"ElementaryTypeName","src":"28913:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28890:38:30"},"returnParameters":{"id":16765,"nodeType":"ParameterList","parameters":[],"src":"28937:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16774,"nodeType":"FunctionDefinition","src":"29168:93:30","nodes":[],"documentation":{"id":16767,"nodeType":"StructuredDocumentation","src":"28944:219:30","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"9a8325a0","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"29177:10:30","parameters":{"id":16770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16769,"mutability":"mutable","name":"artifactPath","nameLocation":"29204:12:30","nodeType":"VariableDeclaration","scope":16774,"src":"29188:28:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16768,"name":"string","nodeType":"ElementaryTypeName","src":"29188:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29187:30:30"},"returnParameters":{"id":16773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16772,"mutability":"mutable","name":"deployedAddress","nameLocation":"29244:15:30","nodeType":"VariableDeclaration","scope":16774,"src":"29236:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16771,"name":"address","nodeType":"ElementaryTypeName","src":"29236:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29235:25:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16784,"nodeType":"FunctionDefinition","src":"29554:141:30","nodes":[],"documentation":{"id":16775,"nodeType":"StructuredDocumentation","src":"29267:282:30","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionaly accepts abi-encoded constructor arguments."},"functionSelector":"29ce9dde","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"29563:10:30","parameters":{"id":16780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16777,"mutability":"mutable","name":"artifactPath","nameLocation":"29590:12:30","nodeType":"VariableDeclaration","scope":16784,"src":"29574:28:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16776,"name":"string","nodeType":"ElementaryTypeName","src":"29574:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16779,"mutability":"mutable","name":"constructorArgs","nameLocation":"29619:15:30","nodeType":"VariableDeclaration","scope":16784,"src":"29604:30:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16778,"name":"bytes","nodeType":"ElementaryTypeName","src":"29604:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29573:62:30"},"returnParameters":{"id":16783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16782,"mutability":"mutable","name":"deployedAddress","nameLocation":"29678:15:30","nodeType":"VariableDeclaration","scope":16784,"src":"29670:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16781,"name":"address","nodeType":"ElementaryTypeName","src":"29670:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29669:25:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16792,"nodeType":"FunctionDefinition","src":"29790:69:30","nodes":[],"documentation":{"id":16785,"nodeType":"StructuredDocumentation","src":"29701:84:30","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"29799:6:30","parameters":{"id":16788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16787,"mutability":"mutable","name":"path","nameLocation":"29822:4:30","nodeType":"VariableDeclaration","scope":16792,"src":"29806:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16786,"name":"string","nodeType":"ElementaryTypeName","src":"29806:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29805:22:30"},"returnParameters":{"id":16791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16790,"mutability":"mutable","name":"result","nameLocation":"29851:6:30","nodeType":"VariableDeclaration","scope":16792,"src":"29846:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16789,"name":"bool","nodeType":"ElementaryTypeName","src":"29846:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29845:13:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16801,"nodeType":"FunctionDefinition","src":"29924:84:30","nodes":[],"documentation":{"id":16793,"nodeType":"StructuredDocumentation","src":"29865:54:30","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"29933:3:30","parameters":{"id":16797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16796,"mutability":"mutable","name":"commandInput","nameLocation":"29955:12:30","nodeType":"VariableDeclaration","scope":16801,"src":"29937:30:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16794,"name":"string","nodeType":"ElementaryTypeName","src":"29937:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16795,"nodeType":"ArrayTypeName","src":"29937:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"29936:32:30"},"returnParameters":{"id":16800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16799,"mutability":"mutable","name":"result","nameLocation":"30000:6:30","nodeType":"VariableDeclaration","scope":16801,"src":"29987:19:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16798,"name":"bytes","nodeType":"ElementaryTypeName","src":"29987:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29986:21:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16810,"nodeType":"FunctionDefinition","src":"30107:93:30","nodes":[],"documentation":{"id":16802,"nodeType":"StructuredDocumentation","src":"30014:88:30","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"30116:10:30","parameters":{"id":16805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16804,"mutability":"mutable","name":"path","nameLocation":"30143:4:30","nodeType":"VariableDeclaration","scope":16810,"src":"30127:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16803,"name":"string","nodeType":"ElementaryTypeName","src":"30127:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30126:22:30"},"returnParameters":{"id":16809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16808,"mutability":"mutable","name":"metadata","nameLocation":"30190:8:30","nodeType":"VariableDeclaration","scope":16810,"src":"30172:26:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$15930_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":16807,"nodeType":"UserDefinedTypeName","pathNode":{"id":16806,"name":"FsMetadata","nameLocations":["30172:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":15930,"src":"30172:10:30"},"referencedDeclaration":15930,"src":"30172:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$15930_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"30171:28:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16818,"nodeType":"FunctionDefinition","src":"30438:101:30","nodes":[],"documentation":{"id":16811,"nodeType":"StructuredDocumentation","src":"30206:227:30","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"30447:7:30","parameters":{"id":16814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16813,"mutability":"mutable","name":"artifactPath","nameLocation":"30471:12:30","nodeType":"VariableDeclaration","scope":16818,"src":"30455:28:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16812,"name":"string","nodeType":"ElementaryTypeName","src":"30455:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30454:30:30"},"returnParameters":{"id":16817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16816,"mutability":"mutable","name":"creationBytecode","nameLocation":"30521:16:30","nodeType":"VariableDeclaration","scope":16818,"src":"30508:29:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16815,"name":"bytes","nodeType":"ElementaryTypeName","src":"30508:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30507:31:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16826,"nodeType":"FunctionDefinition","src":"30777:108:30","nodes":[],"documentation":{"id":16819,"nodeType":"StructuredDocumentation","src":"30545:227:30","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"30786:15:30","parameters":{"id":16822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16821,"mutability":"mutable","name":"artifactPath","nameLocation":"30818:12:30","nodeType":"VariableDeclaration","scope":16826,"src":"30802:28:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16820,"name":"string","nodeType":"ElementaryTypeName","src":"30802:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30801:30:30"},"returnParameters":{"id":16825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16824,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"30868:15:30","nodeType":"VariableDeclaration","scope":16826,"src":"30855:28:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16823,"name":"bytes","nodeType":"ElementaryTypeName","src":"30855:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30854:30:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16834,"nodeType":"FunctionDefinition","src":"30991:68:30","nodes":[],"documentation":{"id":16827,"nodeType":"StructuredDocumentation","src":"30891:95:30","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"31000:5:30","parameters":{"id":16830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16829,"mutability":"mutable","name":"path","nameLocation":"31022:4:30","nodeType":"VariableDeclaration","scope":16834,"src":"31006:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16828,"name":"string","nodeType":"ElementaryTypeName","src":"31006:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31005:22:30"},"returnParameters":{"id":16833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16832,"mutability":"mutable","name":"result","nameLocation":"31051:6:30","nodeType":"VariableDeclaration","scope":16834,"src":"31046:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16831,"name":"bool","nodeType":"ElementaryTypeName","src":"31046:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31045:13:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16842,"nodeType":"FunctionDefinition","src":"31168:69:30","nodes":[],"documentation":{"id":16835,"nodeType":"StructuredDocumentation","src":"31065:98:30","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"31177:6:30","parameters":{"id":16838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16837,"mutability":"mutable","name":"path","nameLocation":"31200:4:30","nodeType":"VariableDeclaration","scope":16842,"src":"31184:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16836,"name":"string","nodeType":"ElementaryTypeName","src":"31184:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31183:22:30"},"returnParameters":{"id":16841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16840,"mutability":"mutable","name":"result","nameLocation":"31229:6:30","nodeType":"VariableDeclaration","scope":16842,"src":"31224:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16839,"name":"bool","nodeType":"ElementaryTypeName","src":"31224:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31223:13:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16848,"nodeType":"FunctionDefinition","src":"31293:66:30","nodes":[],"documentation":{"id":16843,"nodeType":"StructuredDocumentation","src":"31243:45:30","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"31302:11:30","parameters":{"id":16844,"nodeType":"ParameterList","parameters":[],"src":"31313:2:30"},"returnParameters":{"id":16847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16846,"mutability":"mutable","name":"path","nameLocation":"31353:4:30","nodeType":"VariableDeclaration","scope":16848,"src":"31339:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16845,"name":"string","nodeType":"ElementaryTypeName","src":"31339:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31338:20:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16856,"nodeType":"FunctionDefinition","src":"31426:83:30","nodes":[],"documentation":{"id":16849,"nodeType":"StructuredDocumentation","src":"31365:56:30","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"31435:6:30","parameters":{"id":16852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16851,"mutability":"mutable","name":"promptText","nameLocation":"31458:10:30","nodeType":"VariableDeclaration","scope":16856,"src":"31442:26:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16850,"name":"string","nodeType":"ElementaryTypeName","src":"31442:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31441:28:30"},"returnParameters":{"id":16855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16854,"mutability":"mutable","name":"input","nameLocation":"31502:5:30","nodeType":"VariableDeclaration","scope":16856,"src":"31488:19:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16853,"name":"string","nodeType":"ElementaryTypeName","src":"31488:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31487:21:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16864,"nodeType":"FunctionDefinition","src":"31572:78:30","nodes":[],"documentation":{"id":16857,"nodeType":"StructuredDocumentation","src":"31515:52:30","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"31581:13:30","parameters":{"id":16860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16859,"mutability":"mutable","name":"promptText","nameLocation":"31611:10:30","nodeType":"VariableDeclaration","scope":16864,"src":"31595:26:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16858,"name":"string","nodeType":"ElementaryTypeName","src":"31595:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31594:28:30"},"returnParameters":{"id":16863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16864,"src":"31641:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16861,"name":"address","nodeType":"ElementaryTypeName","src":"31641:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"31640:9:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16872,"nodeType":"FunctionDefinition","src":"31724:89:30","nodes":[],"documentation":{"id":16865,"nodeType":"StructuredDocumentation","src":"31656:63:30","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"31733:12:30","parameters":{"id":16868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16867,"mutability":"mutable","name":"promptText","nameLocation":"31762:10:30","nodeType":"VariableDeclaration","scope":16872,"src":"31746:26:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16866,"name":"string","nodeType":"ElementaryTypeName","src":"31746:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31745:28:30"},"returnParameters":{"id":16871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16870,"mutability":"mutable","name":"input","nameLocation":"31806:5:30","nodeType":"VariableDeclaration","scope":16872,"src":"31792:19:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16869,"name":"string","nodeType":"ElementaryTypeName","src":"31792:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31791:21:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16880,"nodeType":"FunctionDefinition","src":"31893:81:30","nodes":[],"documentation":{"id":16873,"nodeType":"StructuredDocumentation","src":"31819:69:30","text":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"functionSelector":"69ca02b7","implemented":false,"kind":"function","modifiers":[],"name":"promptSecretUint","nameLocation":"31902:16:30","parameters":{"id":16876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16875,"mutability":"mutable","name":"promptText","nameLocation":"31935:10:30","nodeType":"VariableDeclaration","scope":16880,"src":"31919:26:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16874,"name":"string","nodeType":"ElementaryTypeName","src":"31919:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31918:28:30"},"returnParameters":{"id":16879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16880,"src":"31965:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16877,"name":"uint256","nodeType":"ElementaryTypeName","src":"31965:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31964:9:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16888,"nodeType":"FunctionDefinition","src":"32034:75:30","nodes":[],"documentation":{"id":16881,"nodeType":"StructuredDocumentation","src":"31980:49:30","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"32043:10:30","parameters":{"id":16884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16883,"mutability":"mutable","name":"promptText","nameLocation":"32070:10:30","nodeType":"VariableDeclaration","scope":16888,"src":"32054:26:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16882,"name":"string","nodeType":"ElementaryTypeName","src":"32054:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32053:28:30"},"returnParameters":{"id":16887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16888,"src":"32100:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16885,"name":"uint256","nodeType":"ElementaryTypeName","src":"32100:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32099:9:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16898,"nodeType":"FunctionDefinition","src":"32357:89:30","nodes":[],"documentation":{"id":16889,"nodeType":"StructuredDocumentation","src":"32115:237:30","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"32366:7:30","parameters":{"id":16892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16891,"mutability":"mutable","name":"path","nameLocation":"32390:4:30","nodeType":"VariableDeclaration","scope":16898,"src":"32374:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16890,"name":"string","nodeType":"ElementaryTypeName","src":"32374:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32373:22:30"},"returnParameters":{"id":16897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16896,"mutability":"mutable","name":"entries","nameLocation":"32437:7:30","nodeType":"VariableDeclaration","scope":16898,"src":"32419:25:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15914_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":16894,"nodeType":"UserDefinedTypeName","pathNode":{"id":16893,"name":"DirEntry","nameLocations":["32419:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":15914,"src":"32419:8:30"},"referencedDeclaration":15914,"src":"32419:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$15914_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":16895,"nodeType":"ArrayTypeName","src":"32419:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15914_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"32418:27:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16910,"nodeType":"FunctionDefinition","src":"32483:106:30","nodes":[],"documentation":{"id":16899,"nodeType":"StructuredDocumentation","src":"32452:26:30","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"32492:7:30","parameters":{"id":16904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16901,"mutability":"mutable","name":"path","nameLocation":"32516:4:30","nodeType":"VariableDeclaration","scope":16910,"src":"32500:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16900,"name":"string","nodeType":"ElementaryTypeName","src":"32500:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16903,"mutability":"mutable","name":"maxDepth","nameLocation":"32529:8:30","nodeType":"VariableDeclaration","scope":16910,"src":"32522:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16902,"name":"uint64","nodeType":"ElementaryTypeName","src":"32522:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"32499:39:30"},"returnParameters":{"id":16909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16908,"mutability":"mutable","name":"entries","nameLocation":"32580:7:30","nodeType":"VariableDeclaration","scope":16910,"src":"32562:25:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15914_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":16906,"nodeType":"UserDefinedTypeName","pathNode":{"id":16905,"name":"DirEntry","nameLocations":["32562:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":15914,"src":"32562:8:30"},"referencedDeclaration":15914,"src":"32562:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$15914_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":16907,"nodeType":"ArrayTypeName","src":"32562:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15914_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"32561:27:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16924,"nodeType":"FunctionDefinition","src":"32626:148:30","nodes":[],"documentation":{"id":16911,"nodeType":"StructuredDocumentation","src":"32595:26:30","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"32635:7:30","parameters":{"id":16918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16913,"mutability":"mutable","name":"path","nameLocation":"32659:4:30","nodeType":"VariableDeclaration","scope":16924,"src":"32643:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16912,"name":"string","nodeType":"ElementaryTypeName","src":"32643:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16915,"mutability":"mutable","name":"maxDepth","nameLocation":"32672:8:30","nodeType":"VariableDeclaration","scope":16924,"src":"32665:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16914,"name":"uint64","nodeType":"ElementaryTypeName","src":"32665:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16917,"mutability":"mutable","name":"followLinks","nameLocation":"32687:11:30","nodeType":"VariableDeclaration","scope":16924,"src":"32682:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16916,"name":"bool","nodeType":"ElementaryTypeName","src":"32682:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32642:57:30"},"returnParameters":{"id":16923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16922,"mutability":"mutable","name":"entries","nameLocation":"32765:7:30","nodeType":"VariableDeclaration","scope":16924,"src":"32747:25:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15914_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":16920,"nodeType":"UserDefinedTypeName","pathNode":{"id":16919,"name":"DirEntry","nameLocations":["32747:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":15914,"src":"32747:8:30"},"referencedDeclaration":15914,"src":"32747:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$15914_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":16921,"nodeType":"ArrayTypeName","src":"32747:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15914_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"32746:27:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16932,"nodeType":"FunctionDefinition","src":"32872:83:30","nodes":[],"documentation":{"id":16925,"nodeType":"StructuredDocumentation","src":"32780:87:30","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"32881:8:30","parameters":{"id":16928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16927,"mutability":"mutable","name":"path","nameLocation":"32906:4:30","nodeType":"VariableDeclaration","scope":16932,"src":"32890:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16926,"name":"string","nodeType":"ElementaryTypeName","src":"32890:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32889:22:30"},"returnParameters":{"id":16931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16930,"mutability":"mutable","name":"data","nameLocation":"32949:4:30","nodeType":"VariableDeclaration","scope":16932,"src":"32935:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16929,"name":"string","nodeType":"ElementaryTypeName","src":"32935:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32934:20:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16940,"nodeType":"FunctionDefinition","src":"33053:88:30","nodes":[],"documentation":{"id":16933,"nodeType":"StructuredDocumentation","src":"32961:87:30","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"33062:14:30","parameters":{"id":16936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16935,"mutability":"mutable","name":"path","nameLocation":"33093:4:30","nodeType":"VariableDeclaration","scope":16940,"src":"33077:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16934,"name":"string","nodeType":"ElementaryTypeName","src":"33077:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33076:22:30"},"returnParameters":{"id":16939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16938,"mutability":"mutable","name":"data","nameLocation":"33135:4:30","nodeType":"VariableDeclaration","scope":16940,"src":"33122:17:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16937,"name":"bytes","nodeType":"ElementaryTypeName","src":"33122:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33121:19:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16948,"nodeType":"FunctionDefinition","src":"33190:83:30","nodes":[],"documentation":{"id":16941,"nodeType":"StructuredDocumentation","src":"33147:38:30","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"33199:8:30","parameters":{"id":16944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16943,"mutability":"mutable","name":"path","nameLocation":"33224:4:30","nodeType":"VariableDeclaration","scope":16948,"src":"33208:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16942,"name":"string","nodeType":"ElementaryTypeName","src":"33208:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33207:22:30"},"returnParameters":{"id":16947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16946,"mutability":"mutable","name":"line","nameLocation":"33267:4:30","nodeType":"VariableDeclaration","scope":16948,"src":"33253:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16945,"name":"string","nodeType":"ElementaryTypeName","src":"33253:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33252:20:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16956,"nodeType":"FunctionDefinition","src":"33532:93:30","nodes":[],"documentation":{"id":16949,"nodeType":"StructuredDocumentation","src":"33279:248:30","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"33541:8:30","parameters":{"id":16952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16951,"mutability":"mutable","name":"linkPath","nameLocation":"33566:8:30","nodeType":"VariableDeclaration","scope":16956,"src":"33550:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16950,"name":"string","nodeType":"ElementaryTypeName","src":"33550:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33549:26:30"},"returnParameters":{"id":16955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16954,"mutability":"mutable","name":"targetPath","nameLocation":"33613:10:30","nodeType":"VariableDeclaration","scope":16956,"src":"33599:24:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16953,"name":"string","nodeType":"ElementaryTypeName","src":"33599:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33598:26:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16964,"nodeType":"FunctionDefinition","src":"34015:66:30","nodes":[],"documentation":{"id":16957,"nodeType":"StructuredDocumentation","src":"33631:379:30","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"34024:9:30","parameters":{"id":16962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16959,"mutability":"mutable","name":"path","nameLocation":"34050:4:30","nodeType":"VariableDeclaration","scope":16964,"src":"34034:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16958,"name":"string","nodeType":"ElementaryTypeName","src":"34034:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16961,"mutability":"mutable","name":"recursive","nameLocation":"34061:9:30","nodeType":"VariableDeclaration","scope":16964,"src":"34056:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16960,"name":"bool","nodeType":"ElementaryTypeName","src":"34056:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34033:38:30"},"returnParameters":{"id":16963,"nodeType":"ParameterList","parameters":[],"src":"34080:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16970,"nodeType":"FunctionDefinition","src":"34414:51:30","nodes":[],"documentation":{"id":16965,"nodeType":"StructuredDocumentation","src":"34087:322:30","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"34423:10:30","parameters":{"id":16968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16967,"mutability":"mutable","name":"path","nameLocation":"34450:4:30","nodeType":"VariableDeclaration","scope":16970,"src":"34434:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16966,"name":"string","nodeType":"ElementaryTypeName","src":"34434:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34433:22:30"},"returnParameters":{"id":16969,"nodeType":"ParameterList","parameters":[],"src":"34464:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16980,"nodeType":"FunctionDefinition","src":"34572:91:30","nodes":[],"documentation":{"id":16971,"nodeType":"StructuredDocumentation","src":"34471:96:30","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"34581:6:30","parameters":{"id":16975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16974,"mutability":"mutable","name":"commandInput","nameLocation":"34606:12:30","nodeType":"VariableDeclaration","scope":16980,"src":"34588:30:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16972,"name":"string","nodeType":"ElementaryTypeName","src":"34588:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16973,"nodeType":"ArrayTypeName","src":"34588:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"34587:32:30"},"returnParameters":{"id":16979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16978,"mutability":"mutable","name":"result","nameLocation":"34655:6:30","nodeType":"VariableDeclaration","scope":16980,"src":"34638:23:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$15948_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":16977,"nodeType":"UserDefinedTypeName","pathNode":{"id":16976,"name":"FfiResult","nameLocations":["34638:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":15948,"src":"34638:9:30"},"referencedDeclaration":15948,"src":"34638:9:30","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$15948_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"34637:25:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16986,"nodeType":"FunctionDefinition","src":"34728:60:30","nodes":[],"documentation":{"id":16981,"nodeType":"StructuredDocumentation","src":"34669:54:30","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"34737:8:30","parameters":{"id":16982,"nodeType":"ParameterList","parameters":[],"src":"34745:2:30"},"returnParameters":{"id":16985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16984,"mutability":"mutable","name":"milliseconds","nameLocation":"34774:12:30","nodeType":"VariableDeclaration","scope":16986,"src":"34766:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16983,"name":"uint256","nodeType":"ElementaryTypeName","src":"34766:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34765:22:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16994,"nodeType":"FunctionDefinition","src":"34957:72:30","nodes":[],"documentation":{"id":16987,"nodeType":"StructuredDocumentation","src":"34794:158:30","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"34966:9:30","parameters":{"id":16992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16989,"mutability":"mutable","name":"path","nameLocation":"34992:4:30","nodeType":"VariableDeclaration","scope":16994,"src":"34976:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16988,"name":"string","nodeType":"ElementaryTypeName","src":"34976:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16991,"mutability":"mutable","name":"data","nameLocation":"35014:4:30","nodeType":"VariableDeclaration","scope":16994,"src":"34998:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16990,"name":"string","nodeType":"ElementaryTypeName","src":"34998:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34975:44:30"},"returnParameters":{"id":16993,"nodeType":"ParameterList","parameters":[],"src":"35028:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17002,"nodeType":"FunctionDefinition","src":"35207:77:30","nodes":[],"documentation":{"id":16995,"nodeType":"StructuredDocumentation","src":"35035:167:30","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"35216:15:30","parameters":{"id":17000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16997,"mutability":"mutable","name":"path","nameLocation":"35248:4:30","nodeType":"VariableDeclaration","scope":17002,"src":"35232:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16996,"name":"string","nodeType":"ElementaryTypeName","src":"35232:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16999,"mutability":"mutable","name":"data","nameLocation":"35269:4:30","nodeType":"VariableDeclaration","scope":17002,"src":"35254:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16998,"name":"bytes","nodeType":"ElementaryTypeName","src":"35254:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35231:43:30"},"returnParameters":{"id":17001,"nodeType":"ParameterList","parameters":[],"src":"35283:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17010,"nodeType":"FunctionDefinition","src":"35405:72:30","nodes":[],"documentation":{"id":17003,"nodeType":"StructuredDocumentation","src":"35290:110:30","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"35414:9:30","parameters":{"id":17008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17005,"mutability":"mutable","name":"path","nameLocation":"35440:4:30","nodeType":"VariableDeclaration","scope":17010,"src":"35424:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17004,"name":"string","nodeType":"ElementaryTypeName","src":"35424:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17007,"mutability":"mutable","name":"data","nameLocation":"35462:4:30","nodeType":"VariableDeclaration","scope":17010,"src":"35446:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17006,"name":"string","nodeType":"ElementaryTypeName","src":"35446:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35423:44:30"},"returnParameters":{"id":17009,"nodeType":"ParameterList","parameters":[],"src":"35476:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17020,"nodeType":"FunctionDefinition","src":"35670:91:30","nodes":[],"documentation":{"id":17011,"nodeType":"StructuredDocumentation","src":"35514:151:30","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"35679:9:30","parameters":{"id":17016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17013,"mutability":"mutable","name":"json","nameLocation":"35705:4:30","nodeType":"VariableDeclaration","scope":17020,"src":"35689:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17012,"name":"string","nodeType":"ElementaryTypeName","src":"35689:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17015,"mutability":"mutable","name":"key","nameLocation":"35727:3:30","nodeType":"VariableDeclaration","scope":17020,"src":"35711:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17014,"name":"string","nodeType":"ElementaryTypeName","src":"35711:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35688:43:30"},"returnParameters":{"id":17019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17020,"src":"35755:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17017,"name":"bool","nodeType":"ElementaryTypeName","src":"35755:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"35754:6:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17030,"nodeType":"FunctionDefinition","src":"35816:95:30","nodes":[],"documentation":{"id":17021,"nodeType":"StructuredDocumentation","src":"35767:44:30","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"35825:13:30","parameters":{"id":17026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17023,"mutability":"mutable","name":"json","nameLocation":"35855:4:30","nodeType":"VariableDeclaration","scope":17030,"src":"35839:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17022,"name":"string","nodeType":"ElementaryTypeName","src":"35839:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17025,"mutability":"mutable","name":"key","nameLocation":"35877:3:30","nodeType":"VariableDeclaration","scope":17030,"src":"35861:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17024,"name":"string","nodeType":"ElementaryTypeName","src":"35861:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35838:43:30"},"returnParameters":{"id":17029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17030,"src":"35905:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17027,"name":"bool","nodeType":"ElementaryTypeName","src":"35905:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"35904:6:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17040,"nodeType":"FunctionDefinition","src":"35992:101:30","nodes":[],"documentation":{"id":17031,"nodeType":"StructuredDocumentation","src":"35917:70:30","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"36001:16:30","parameters":{"id":17036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17033,"mutability":"mutable","name":"json","nameLocation":"36034:4:30","nodeType":"VariableDeclaration","scope":17040,"src":"36018:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17032,"name":"string","nodeType":"ElementaryTypeName","src":"36018:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17035,"mutability":"mutable","name":"key","nameLocation":"36056:3:30","nodeType":"VariableDeclaration","scope":17040,"src":"36040:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17034,"name":"string","nodeType":"ElementaryTypeName","src":"36040:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36017:43:30"},"returnParameters":{"id":17039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17040,"src":"36084:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17037,"name":"address","nodeType":"ElementaryTypeName","src":"36084:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"36083:9:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17051,"nodeType":"FunctionDefinition","src":"36176:139:30","nodes":[],"documentation":{"id":17041,"nodeType":"StructuredDocumentation","src":"36099:72:30","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"36185:21:30","parameters":{"id":17046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17043,"mutability":"mutable","name":"json","nameLocation":"36223:4:30","nodeType":"VariableDeclaration","scope":17051,"src":"36207:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17042,"name":"string","nodeType":"ElementaryTypeName","src":"36207:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17045,"mutability":"mutable","name":"key","nameLocation":"36245:3:30","nodeType":"VariableDeclaration","scope":17051,"src":"36229:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17044,"name":"string","nodeType":"ElementaryTypeName","src":"36229:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36206:43:30"},"returnParameters":{"id":17050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17051,"src":"36297:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17047,"name":"address","nodeType":"ElementaryTypeName","src":"36297:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17048,"nodeType":"ArrayTypeName","src":"36297:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"36296:18:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17061,"nodeType":"FunctionDefinition","src":"36393:95:30","nodes":[],"documentation":{"id":17052,"nodeType":"StructuredDocumentation","src":"36321:67:30","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"36402:13:30","parameters":{"id":17057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17054,"mutability":"mutable","name":"json","nameLocation":"36432:4:30","nodeType":"VariableDeclaration","scope":17061,"src":"36416:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17053,"name":"string","nodeType":"ElementaryTypeName","src":"36416:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17056,"mutability":"mutable","name":"key","nameLocation":"36454:3:30","nodeType":"VariableDeclaration","scope":17061,"src":"36438:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17055,"name":"string","nodeType":"ElementaryTypeName","src":"36438:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36415:43:30"},"returnParameters":{"id":17060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17061,"src":"36482:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17058,"name":"bool","nodeType":"ElementaryTypeName","src":"36482:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"36481:6:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17072,"nodeType":"FunctionDefinition","src":"36568:109:30","nodes":[],"documentation":{"id":17062,"nodeType":"StructuredDocumentation","src":"36494:69:30","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"36577:18:30","parameters":{"id":17067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17064,"mutability":"mutable","name":"json","nameLocation":"36612:4:30","nodeType":"VariableDeclaration","scope":17072,"src":"36596:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17063,"name":"string","nodeType":"ElementaryTypeName","src":"36596:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17066,"mutability":"mutable","name":"key","nameLocation":"36634:3:30","nodeType":"VariableDeclaration","scope":17072,"src":"36618:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17065,"name":"string","nodeType":"ElementaryTypeName","src":"36618:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36595:43:30"},"returnParameters":{"id":17071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17072,"src":"36662:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17068,"name":"bool","nodeType":"ElementaryTypeName","src":"36662:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17069,"nodeType":"ArrayTypeName","src":"36662:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"36661:15:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17082,"nodeType":"FunctionDefinition","src":"36756:104:30","nodes":[],"documentation":{"id":17073,"nodeType":"StructuredDocumentation","src":"36683:68:30","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"36765:14:30","parameters":{"id":17078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17075,"mutability":"mutable","name":"json","nameLocation":"36796:4:30","nodeType":"VariableDeclaration","scope":17082,"src":"36780:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17074,"name":"string","nodeType":"ElementaryTypeName","src":"36780:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17077,"mutability":"mutable","name":"key","nameLocation":"36818:3:30","nodeType":"VariableDeclaration","scope":17082,"src":"36802:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17076,"name":"string","nodeType":"ElementaryTypeName","src":"36802:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36779:43:30"},"returnParameters":{"id":17081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17082,"src":"36846:12:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17079,"name":"bytes","nodeType":"ElementaryTypeName","src":"36846:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"36845:14:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17092,"nodeType":"FunctionDefinition","src":"36941:101:30","nodes":[],"documentation":{"id":17083,"nodeType":"StructuredDocumentation","src":"36866:70:30","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"36950:16:30","parameters":{"id":17088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17085,"mutability":"mutable","name":"json","nameLocation":"36983:4:30","nodeType":"VariableDeclaration","scope":17092,"src":"36967:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17084,"name":"string","nodeType":"ElementaryTypeName","src":"36967:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17087,"mutability":"mutable","name":"key","nameLocation":"37005:3:30","nodeType":"VariableDeclaration","scope":17092,"src":"36989:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17086,"name":"string","nodeType":"ElementaryTypeName","src":"36989:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36966:43:30"},"returnParameters":{"id":17091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17092,"src":"37033:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"37033:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"37032:9:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17103,"nodeType":"FunctionDefinition","src":"37125:139:30","nodes":[],"documentation":{"id":17093,"nodeType":"StructuredDocumentation","src":"37048:72:30","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"37134:21:30","parameters":{"id":17098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17095,"mutability":"mutable","name":"json","nameLocation":"37172:4:30","nodeType":"VariableDeclaration","scope":17103,"src":"37156:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17094,"name":"string","nodeType":"ElementaryTypeName","src":"37156:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17097,"mutability":"mutable","name":"key","nameLocation":"37194:3:30","nodeType":"VariableDeclaration","scope":17103,"src":"37178:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17096,"name":"string","nodeType":"ElementaryTypeName","src":"37178:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37155:43:30"},"returnParameters":{"id":17102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17103,"src":"37246:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"37246:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17100,"nodeType":"ArrayTypeName","src":"37246:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"37245:18:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17114,"nodeType":"FunctionDefinition","src":"37345:111:30","nodes":[],"documentation":{"id":17104,"nodeType":"StructuredDocumentation","src":"37270:70:30","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"37354:19:30","parameters":{"id":17109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17106,"mutability":"mutable","name":"json","nameLocation":"37390:4:30","nodeType":"VariableDeclaration","scope":17114,"src":"37374:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17105,"name":"string","nodeType":"ElementaryTypeName","src":"37374:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17108,"mutability":"mutable","name":"key","nameLocation":"37412:3:30","nodeType":"VariableDeclaration","scope":17114,"src":"37396:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17107,"name":"string","nodeType":"ElementaryTypeName","src":"37396:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37373:43:30"},"returnParameters":{"id":17113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17114,"src":"37440:14:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17110,"name":"bytes","nodeType":"ElementaryTypeName","src":"37440:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17111,"nodeType":"ArrayTypeName","src":"37440:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"37439:16:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17124,"nodeType":"FunctionDefinition","src":"37536:96:30","nodes":[],"documentation":{"id":17115,"nodeType":"StructuredDocumentation","src":"37462:69:30","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"37545:12:30","parameters":{"id":17120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17117,"mutability":"mutable","name":"json","nameLocation":"37574:4:30","nodeType":"VariableDeclaration","scope":17124,"src":"37558:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17116,"name":"string","nodeType":"ElementaryTypeName","src":"37558:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17119,"mutability":"mutable","name":"key","nameLocation":"37596:3:30","nodeType":"VariableDeclaration","scope":17124,"src":"37580:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17118,"name":"string","nodeType":"ElementaryTypeName","src":"37580:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37557:43:30"},"returnParameters":{"id":17123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17124,"src":"37624:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17121,"name":"int256","nodeType":"ElementaryTypeName","src":"37624:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"37623:8:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17135,"nodeType":"FunctionDefinition","src":"37714:110:30","nodes":[],"documentation":{"id":17125,"nodeType":"StructuredDocumentation","src":"37638:71:30","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"37723:17:30","parameters":{"id":17130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17127,"mutability":"mutable","name":"json","nameLocation":"37757:4:30","nodeType":"VariableDeclaration","scope":17135,"src":"37741:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17126,"name":"string","nodeType":"ElementaryTypeName","src":"37741:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17129,"mutability":"mutable","name":"key","nameLocation":"37779:3:30","nodeType":"VariableDeclaration","scope":17135,"src":"37763:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17128,"name":"string","nodeType":"ElementaryTypeName","src":"37763:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37740:43:30"},"returnParameters":{"id":17134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17135,"src":"37807:15:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17131,"name":"int256","nodeType":"ElementaryTypeName","src":"37807:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17132,"nodeType":"ArrayTypeName","src":"37807:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"37806:17:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17146,"nodeType":"FunctionDefinition","src":"37889:111:30","nodes":[],"documentation":{"id":17136,"nodeType":"StructuredDocumentation","src":"37830:54:30","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"37898:13:30","parameters":{"id":17141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17138,"mutability":"mutable","name":"json","nameLocation":"37928:4:30","nodeType":"VariableDeclaration","scope":17146,"src":"37912:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17137,"name":"string","nodeType":"ElementaryTypeName","src":"37912:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17140,"mutability":"mutable","name":"key","nameLocation":"37950:3:30","nodeType":"VariableDeclaration","scope":17146,"src":"37934:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17139,"name":"string","nodeType":"ElementaryTypeName","src":"37934:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37911:43:30"},"returnParameters":{"id":17145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17144,"mutability":"mutable","name":"keys","nameLocation":"37994:4:30","nodeType":"VariableDeclaration","scope":17146,"src":"37978:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17142,"name":"string","nodeType":"ElementaryTypeName","src":"37978:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17143,"nodeType":"ArrayTypeName","src":"37978:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"37977:22:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17156,"nodeType":"FunctionDefinition","src":"38080:106:30","nodes":[],"documentation":{"id":17147,"nodeType":"StructuredDocumentation","src":"38006:69:30","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"38089:15:30","parameters":{"id":17152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17149,"mutability":"mutable","name":"json","nameLocation":"38121:4:30","nodeType":"VariableDeclaration","scope":17156,"src":"38105:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17148,"name":"string","nodeType":"ElementaryTypeName","src":"38105:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17151,"mutability":"mutable","name":"key","nameLocation":"38143:3:30","nodeType":"VariableDeclaration","scope":17156,"src":"38127:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17150,"name":"string","nodeType":"ElementaryTypeName","src":"38127:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38104:43:30"},"returnParameters":{"id":17155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17156,"src":"38171:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17153,"name":"string","nodeType":"ElementaryTypeName","src":"38171:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38170:15:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17167,"nodeType":"FunctionDefinition","src":"38268:113:30","nodes":[],"documentation":{"id":17157,"nodeType":"StructuredDocumentation","src":"38192:71:30","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"38277:20:30","parameters":{"id":17162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17159,"mutability":"mutable","name":"json","nameLocation":"38314:4:30","nodeType":"VariableDeclaration","scope":17167,"src":"38298:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17158,"name":"string","nodeType":"ElementaryTypeName","src":"38298:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17161,"mutability":"mutable","name":"key","nameLocation":"38336:3:30","nodeType":"VariableDeclaration","scope":17167,"src":"38320:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17160,"name":"string","nodeType":"ElementaryTypeName","src":"38320:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38297:43:30"},"returnParameters":{"id":17166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17167,"src":"38364:15:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17163,"name":"string","nodeType":"ElementaryTypeName","src":"38364:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17164,"nodeType":"ArrayTypeName","src":"38364:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"38363:17:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17179,"nodeType":"FunctionDefinition","src":"38498:165:30","nodes":[],"documentation":{"id":17168,"nodeType":"StructuredDocumentation","src":"38387:106:30","text":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"0175d535","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonTypeArray","nameLocation":"38507:18:30","parameters":{"id":17175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17170,"mutability":"mutable","name":"json","nameLocation":"38542:4:30","nodeType":"VariableDeclaration","scope":17179,"src":"38526:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17169,"name":"string","nodeType":"ElementaryTypeName","src":"38526:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17172,"mutability":"mutable","name":"key","nameLocation":"38564:3:30","nodeType":"VariableDeclaration","scope":17179,"src":"38548:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17171,"name":"string","nodeType":"ElementaryTypeName","src":"38548:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17174,"mutability":"mutable","name":"typeDescription","nameLocation":"38585:15:30","nodeType":"VariableDeclaration","scope":17179,"src":"38569:31:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17173,"name":"string","nodeType":"ElementaryTypeName","src":"38569:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38525:76:30"},"returnParameters":{"id":17178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17179,"src":"38649:12:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17176,"name":"bytes","nodeType":"ElementaryTypeName","src":"38649:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38648:14:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17189,"nodeType":"FunctionDefinition","src":"38765:139:30","nodes":[],"documentation":{"id":17180,"nodeType":"StructuredDocumentation","src":"38669:91:30","text":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"a9da313b","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"38774:13:30","parameters":{"id":17185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17182,"mutability":"mutable","name":"json","nameLocation":"38804:4:30","nodeType":"VariableDeclaration","scope":17189,"src":"38788:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17181,"name":"string","nodeType":"ElementaryTypeName","src":"38788:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17184,"mutability":"mutable","name":"typeDescription","nameLocation":"38826:15:30","nodeType":"VariableDeclaration","scope":17189,"src":"38810:31:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17183,"name":"string","nodeType":"ElementaryTypeName","src":"38810:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38787:55:30"},"returnParameters":{"id":17188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17189,"src":"38890:12:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17186,"name":"bytes","nodeType":"ElementaryTypeName","src":"38890:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38889:14:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17201,"nodeType":"FunctionDefinition","src":"39015:160:30","nodes":[],"documentation":{"id":17190,"nodeType":"StructuredDocumentation","src":"38910:100:30","text":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"e3f5ae33","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"39024:13:30","parameters":{"id":17197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17192,"mutability":"mutable","name":"json","nameLocation":"39054:4:30","nodeType":"VariableDeclaration","scope":17201,"src":"39038:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17191,"name":"string","nodeType":"ElementaryTypeName","src":"39038:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17194,"mutability":"mutable","name":"key","nameLocation":"39076:3:30","nodeType":"VariableDeclaration","scope":17201,"src":"39060:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17193,"name":"string","nodeType":"ElementaryTypeName","src":"39060:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17196,"mutability":"mutable","name":"typeDescription","nameLocation":"39097:15:30","nodeType":"VariableDeclaration","scope":17201,"src":"39081:31:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17195,"name":"string","nodeType":"ElementaryTypeName","src":"39081:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39037:76:30"},"returnParameters":{"id":17200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17201,"src":"39161:12:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17198,"name":"bytes","nodeType":"ElementaryTypeName","src":"39161:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39160:14:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17211,"nodeType":"FunctionDefinition","src":"39256:98:30","nodes":[],"documentation":{"id":17202,"nodeType":"StructuredDocumentation","src":"39181:70:30","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"39265:13:30","parameters":{"id":17207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17204,"mutability":"mutable","name":"json","nameLocation":"39295:4:30","nodeType":"VariableDeclaration","scope":17211,"src":"39279:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17203,"name":"string","nodeType":"ElementaryTypeName","src":"39279:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17206,"mutability":"mutable","name":"key","nameLocation":"39317:3:30","nodeType":"VariableDeclaration","scope":17211,"src":"39301:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17205,"name":"string","nodeType":"ElementaryTypeName","src":"39301:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39278:43:30"},"returnParameters":{"id":17210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17211,"src":"39345:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17208,"name":"uint256","nodeType":"ElementaryTypeName","src":"39345:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39344:9:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17222,"nodeType":"FunctionDefinition","src":"39437:112:30","nodes":[],"documentation":{"id":17212,"nodeType":"StructuredDocumentation","src":"39360:72:30","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"39446:18:30","parameters":{"id":17217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17214,"mutability":"mutable","name":"json","nameLocation":"39481:4:30","nodeType":"VariableDeclaration","scope":17222,"src":"39465:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17213,"name":"string","nodeType":"ElementaryTypeName","src":"39465:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17216,"mutability":"mutable","name":"key","nameLocation":"39503:3:30","nodeType":"VariableDeclaration","scope":17222,"src":"39487:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17215,"name":"string","nodeType":"ElementaryTypeName","src":"39487:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39464:43:30"},"returnParameters":{"id":17221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17222,"src":"39531:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17218,"name":"uint256","nodeType":"ElementaryTypeName","src":"39531:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17219,"nodeType":"ArrayTypeName","src":"39531:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"39530:18:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17230,"nodeType":"FunctionDefinition","src":"39590:93:30","nodes":[],"documentation":{"id":17223,"nodeType":"StructuredDocumentation","src":"39555:30:30","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"39599:9:30","parameters":{"id":17226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17225,"mutability":"mutable","name":"json","nameLocation":"39625:4:30","nodeType":"VariableDeclaration","scope":17230,"src":"39609:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17224,"name":"string","nodeType":"ElementaryTypeName","src":"39609:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39608:22:30"},"returnParameters":{"id":17229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17228,"mutability":"mutable","name":"abiEncodedData","nameLocation":"39667:14:30","nodeType":"VariableDeclaration","scope":17230,"src":"39654:27:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17227,"name":"bytes","nodeType":"ElementaryTypeName","src":"39654:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39653:29:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17240,"nodeType":"FunctionDefinition","src":"39733:114:30","nodes":[],"documentation":{"id":17231,"nodeType":"StructuredDocumentation","src":"39689:39:30","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"39742:9:30","parameters":{"id":17236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17233,"mutability":"mutable","name":"json","nameLocation":"39768:4:30","nodeType":"VariableDeclaration","scope":17240,"src":"39752:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17232,"name":"string","nodeType":"ElementaryTypeName","src":"39752:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17235,"mutability":"mutable","name":"key","nameLocation":"39790:3:30","nodeType":"VariableDeclaration","scope":17240,"src":"39774:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17234,"name":"string","nodeType":"ElementaryTypeName","src":"39774:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39751:43:30"},"returnParameters":{"id":17239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17238,"mutability":"mutable","name":"abiEncodedData","nameLocation":"39831:14:30","nodeType":"VariableDeclaration","scope":17240,"src":"39818:27:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17237,"name":"bytes","nodeType":"ElementaryTypeName","src":"39818:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39817:29:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17252,"nodeType":"FunctionDefinition","src":"39882:148:30","nodes":[],"documentation":{"id":17241,"nodeType":"StructuredDocumentation","src":"39853:24:30","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"39891:16:30","parameters":{"id":17248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17243,"mutability":"mutable","name":"objectKey","nameLocation":"39924:9:30","nodeType":"VariableDeclaration","scope":17252,"src":"39908:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17242,"name":"string","nodeType":"ElementaryTypeName","src":"39908:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17245,"mutability":"mutable","name":"valueKey","nameLocation":"39951:8:30","nodeType":"VariableDeclaration","scope":17252,"src":"39935:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17244,"name":"string","nodeType":"ElementaryTypeName","src":"39935:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17247,"mutability":"mutable","name":"value","nameLocation":"39969:5:30","nodeType":"VariableDeclaration","scope":17252,"src":"39961:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17246,"name":"address","nodeType":"ElementaryTypeName","src":"39961:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"39907:68:30"},"returnParameters":{"id":17251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17250,"mutability":"mutable","name":"json","nameLocation":"40024:4:30","nodeType":"VariableDeclaration","scope":17252,"src":"40010:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17249,"name":"string","nodeType":"ElementaryTypeName","src":"40010:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40009:20:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17265,"nodeType":"FunctionDefinition","src":"40065:160:30","nodes":[],"documentation":{"id":17253,"nodeType":"StructuredDocumentation","src":"40036:24:30","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"40074:16:30","parameters":{"id":17261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17255,"mutability":"mutable","name":"objectKey","nameLocation":"40107:9:30","nodeType":"VariableDeclaration","scope":17265,"src":"40091:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17254,"name":"string","nodeType":"ElementaryTypeName","src":"40091:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17257,"mutability":"mutable","name":"valueKey","nameLocation":"40134:8:30","nodeType":"VariableDeclaration","scope":17265,"src":"40118:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17256,"name":"string","nodeType":"ElementaryTypeName","src":"40118:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17260,"mutability":"mutable","name":"values","nameLocation":"40163:6:30","nodeType":"VariableDeclaration","scope":17265,"src":"40144:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17258,"name":"address","nodeType":"ElementaryTypeName","src":"40144:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17259,"nodeType":"ArrayTypeName","src":"40144:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"40090:80:30"},"returnParameters":{"id":17264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17263,"mutability":"mutable","name":"json","nameLocation":"40219:4:30","nodeType":"VariableDeclaration","scope":17265,"src":"40205:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17262,"name":"string","nodeType":"ElementaryTypeName","src":"40205:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40204:20:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17277,"nodeType":"FunctionDefinition","src":"40260:142:30","nodes":[],"documentation":{"id":17266,"nodeType":"StructuredDocumentation","src":"40231:24:30","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"40269:13:30","parameters":{"id":17273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17268,"mutability":"mutable","name":"objectKey","nameLocation":"40299:9:30","nodeType":"VariableDeclaration","scope":17277,"src":"40283:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17267,"name":"string","nodeType":"ElementaryTypeName","src":"40283:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17270,"mutability":"mutable","name":"valueKey","nameLocation":"40326:8:30","nodeType":"VariableDeclaration","scope":17277,"src":"40310:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17269,"name":"string","nodeType":"ElementaryTypeName","src":"40310:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17272,"mutability":"mutable","name":"value","nameLocation":"40341:5:30","nodeType":"VariableDeclaration","scope":17277,"src":"40336:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17271,"name":"bool","nodeType":"ElementaryTypeName","src":"40336:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"40282:65:30"},"returnParameters":{"id":17276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17275,"mutability":"mutable","name":"json","nameLocation":"40396:4:30","nodeType":"VariableDeclaration","scope":17277,"src":"40382:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17274,"name":"string","nodeType":"ElementaryTypeName","src":"40382:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40381:20:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17290,"nodeType":"FunctionDefinition","src":"40437:154:30","nodes":[],"documentation":{"id":17278,"nodeType":"StructuredDocumentation","src":"40408:24:30","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"40446:13:30","parameters":{"id":17286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17280,"mutability":"mutable","name":"objectKey","nameLocation":"40476:9:30","nodeType":"VariableDeclaration","scope":17290,"src":"40460:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17279,"name":"string","nodeType":"ElementaryTypeName","src":"40460:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17282,"mutability":"mutable","name":"valueKey","nameLocation":"40503:8:30","nodeType":"VariableDeclaration","scope":17290,"src":"40487:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17281,"name":"string","nodeType":"ElementaryTypeName","src":"40487:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17285,"mutability":"mutable","name":"values","nameLocation":"40529:6:30","nodeType":"VariableDeclaration","scope":17290,"src":"40513:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17283,"name":"bool","nodeType":"ElementaryTypeName","src":"40513:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17284,"nodeType":"ArrayTypeName","src":"40513:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"40459:77:30"},"returnParameters":{"id":17289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17288,"mutability":"mutable","name":"json","nameLocation":"40585:4:30","nodeType":"VariableDeclaration","scope":17290,"src":"40571:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17287,"name":"string","nodeType":"ElementaryTypeName","src":"40571:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40570:20:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17302,"nodeType":"FunctionDefinition","src":"40626:148:30","nodes":[],"documentation":{"id":17291,"nodeType":"StructuredDocumentation","src":"40597:24:30","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"40635:16:30","parameters":{"id":17298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17293,"mutability":"mutable","name":"objectKey","nameLocation":"40668:9:30","nodeType":"VariableDeclaration","scope":17302,"src":"40652:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17292,"name":"string","nodeType":"ElementaryTypeName","src":"40652:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17295,"mutability":"mutable","name":"valueKey","nameLocation":"40695:8:30","nodeType":"VariableDeclaration","scope":17302,"src":"40679:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17294,"name":"string","nodeType":"ElementaryTypeName","src":"40679:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17297,"mutability":"mutable","name":"value","nameLocation":"40713:5:30","nodeType":"VariableDeclaration","scope":17302,"src":"40705:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"40705:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"40651:68:30"},"returnParameters":{"id":17301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17300,"mutability":"mutable","name":"json","nameLocation":"40768:4:30","nodeType":"VariableDeclaration","scope":17302,"src":"40754:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17299,"name":"string","nodeType":"ElementaryTypeName","src":"40754:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40753:20:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17315,"nodeType":"FunctionDefinition","src":"40809:160:30","nodes":[],"documentation":{"id":17303,"nodeType":"StructuredDocumentation","src":"40780:24:30","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"40818:16:30","parameters":{"id":17311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17305,"mutability":"mutable","name":"objectKey","nameLocation":"40851:9:30","nodeType":"VariableDeclaration","scope":17315,"src":"40835:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17304,"name":"string","nodeType":"ElementaryTypeName","src":"40835:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17307,"mutability":"mutable","name":"valueKey","nameLocation":"40878:8:30","nodeType":"VariableDeclaration","scope":17315,"src":"40862:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17306,"name":"string","nodeType":"ElementaryTypeName","src":"40862:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17310,"mutability":"mutable","name":"values","nameLocation":"40907:6:30","nodeType":"VariableDeclaration","scope":17315,"src":"40888:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"40888:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17309,"nodeType":"ArrayTypeName","src":"40888:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"40834:80:30"},"returnParameters":{"id":17314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17313,"mutability":"mutable","name":"json","nameLocation":"40963:4:30","nodeType":"VariableDeclaration","scope":17315,"src":"40949:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17312,"name":"string","nodeType":"ElementaryTypeName","src":"40949:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40948:20:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17327,"nodeType":"FunctionDefinition","src":"41004:153:30","nodes":[],"documentation":{"id":17316,"nodeType":"StructuredDocumentation","src":"40975:24:30","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"41013:14:30","parameters":{"id":17323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17318,"mutability":"mutable","name":"objectKey","nameLocation":"41044:9:30","nodeType":"VariableDeclaration","scope":17327,"src":"41028:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17317,"name":"string","nodeType":"ElementaryTypeName","src":"41028:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17320,"mutability":"mutable","name":"valueKey","nameLocation":"41071:8:30","nodeType":"VariableDeclaration","scope":17327,"src":"41055:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17319,"name":"string","nodeType":"ElementaryTypeName","src":"41055:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17322,"mutability":"mutable","name":"value","nameLocation":"41096:5:30","nodeType":"VariableDeclaration","scope":17327,"src":"41081:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17321,"name":"bytes","nodeType":"ElementaryTypeName","src":"41081:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"41027:75:30"},"returnParameters":{"id":17326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17325,"mutability":"mutable","name":"json","nameLocation":"41151:4:30","nodeType":"VariableDeclaration","scope":17327,"src":"41137:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17324,"name":"string","nodeType":"ElementaryTypeName","src":"41137:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41136:20:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17340,"nodeType":"FunctionDefinition","src":"41192:156:30","nodes":[],"documentation":{"id":17328,"nodeType":"StructuredDocumentation","src":"41163:24:30","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"41201:14:30","parameters":{"id":17336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17330,"mutability":"mutable","name":"objectKey","nameLocation":"41232:9:30","nodeType":"VariableDeclaration","scope":17340,"src":"41216:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17329,"name":"string","nodeType":"ElementaryTypeName","src":"41216:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17332,"mutability":"mutable","name":"valueKey","nameLocation":"41259:8:30","nodeType":"VariableDeclaration","scope":17340,"src":"41243:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17331,"name":"string","nodeType":"ElementaryTypeName","src":"41243:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17335,"mutability":"mutable","name":"values","nameLocation":"41286:6:30","nodeType":"VariableDeclaration","scope":17340,"src":"41269:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17333,"name":"bytes","nodeType":"ElementaryTypeName","src":"41269:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17334,"nodeType":"ArrayTypeName","src":"41269:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"41215:78:30"},"returnParameters":{"id":17339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17338,"mutability":"mutable","name":"json","nameLocation":"41342:4:30","nodeType":"VariableDeclaration","scope":17340,"src":"41328:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17337,"name":"string","nodeType":"ElementaryTypeName","src":"41328:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41327:20:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17352,"nodeType":"FunctionDefinition","src":"41383:143:30","nodes":[],"documentation":{"id":17341,"nodeType":"StructuredDocumentation","src":"41354:24:30","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"41392:12:30","parameters":{"id":17348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17343,"mutability":"mutable","name":"objectKey","nameLocation":"41421:9:30","nodeType":"VariableDeclaration","scope":17352,"src":"41405:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17342,"name":"string","nodeType":"ElementaryTypeName","src":"41405:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17345,"mutability":"mutable","name":"valueKey","nameLocation":"41448:8:30","nodeType":"VariableDeclaration","scope":17352,"src":"41432:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17344,"name":"string","nodeType":"ElementaryTypeName","src":"41432:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17347,"mutability":"mutable","name":"value","nameLocation":"41465:5:30","nodeType":"VariableDeclaration","scope":17352,"src":"41458:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17346,"name":"int256","nodeType":"ElementaryTypeName","src":"41458:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"41404:67:30"},"returnParameters":{"id":17351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17350,"mutability":"mutable","name":"json","nameLocation":"41520:4:30","nodeType":"VariableDeclaration","scope":17352,"src":"41506:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17349,"name":"string","nodeType":"ElementaryTypeName","src":"41506:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41505:20:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17365,"nodeType":"FunctionDefinition","src":"41561:155:30","nodes":[],"documentation":{"id":17353,"nodeType":"StructuredDocumentation","src":"41532:24:30","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"41570:12:30","parameters":{"id":17361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17355,"mutability":"mutable","name":"objectKey","nameLocation":"41599:9:30","nodeType":"VariableDeclaration","scope":17365,"src":"41583:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17354,"name":"string","nodeType":"ElementaryTypeName","src":"41583:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17357,"mutability":"mutable","name":"valueKey","nameLocation":"41626:8:30","nodeType":"VariableDeclaration","scope":17365,"src":"41610:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17356,"name":"string","nodeType":"ElementaryTypeName","src":"41610:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17360,"mutability":"mutable","name":"values","nameLocation":"41654:6:30","nodeType":"VariableDeclaration","scope":17365,"src":"41636:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17358,"name":"int256","nodeType":"ElementaryTypeName","src":"41636:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17359,"nodeType":"ArrayTypeName","src":"41636:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"41582:79:30"},"returnParameters":{"id":17364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17363,"mutability":"mutable","name":"json","nameLocation":"41710:4:30","nodeType":"VariableDeclaration","scope":17365,"src":"41696:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17362,"name":"string","nodeType":"ElementaryTypeName","src":"41696:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41695:20:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17375,"nodeType":"FunctionDefinition","src":"41913:111:30","nodes":[],"documentation":{"id":17366,"nodeType":"StructuredDocumentation","src":"41722:186:30","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"41922:13:30","parameters":{"id":17371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17368,"mutability":"mutable","name":"objectKey","nameLocation":"41952:9:30","nodeType":"VariableDeclaration","scope":17375,"src":"41936:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17367,"name":"string","nodeType":"ElementaryTypeName","src":"41936:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17370,"mutability":"mutable","name":"value","nameLocation":"41979:5:30","nodeType":"VariableDeclaration","scope":17375,"src":"41963:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17369,"name":"string","nodeType":"ElementaryTypeName","src":"41963:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41935:50:30"},"returnParameters":{"id":17374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17373,"mutability":"mutable","name":"json","nameLocation":"42018:4:30","nodeType":"VariableDeclaration","scope":17375,"src":"42004:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17372,"name":"string","nodeType":"ElementaryTypeName","src":"42004:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42003:20:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17385,"nodeType":"FunctionDefinition","src":"42059:149:30","nodes":[],"documentation":{"id":17376,"nodeType":"StructuredDocumentation","src":"42030:24:30","text":"See `serializeJson`."},"functionSelector":"6d4f96a6","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"42068:17:30","parameters":{"id":17381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17378,"mutability":"mutable","name":"typeDescription","nameLocation":"42102:15:30","nodeType":"VariableDeclaration","scope":17385,"src":"42086:31:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17377,"name":"string","nodeType":"ElementaryTypeName","src":"42086:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17380,"mutability":"mutable","name":"value","nameLocation":"42134:5:30","nodeType":"VariableDeclaration","scope":17385,"src":"42119:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17379,"name":"bytes","nodeType":"ElementaryTypeName","src":"42119:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"42085:55:30"},"returnParameters":{"id":17384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17383,"mutability":"mutable","name":"json","nameLocation":"42202:4:30","nodeType":"VariableDeclaration","scope":17385,"src":"42188:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17382,"name":"string","nodeType":"ElementaryTypeName","src":"42188:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42187:20:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17399,"nodeType":"FunctionDefinition","src":"42243:211:30","nodes":[],"documentation":{"id":17386,"nodeType":"StructuredDocumentation","src":"42214:24:30","text":"See `serializeJson`."},"functionSelector":"6f93bccb","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"42252:17:30","parameters":{"id":17395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17388,"mutability":"mutable","name":"objectKey","nameLocation":"42295:9:30","nodeType":"VariableDeclaration","scope":17399,"src":"42279:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17387,"name":"string","nodeType":"ElementaryTypeName","src":"42279:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17390,"mutability":"mutable","name":"valueKey","nameLocation":"42330:8:30","nodeType":"VariableDeclaration","scope":17399,"src":"42314:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17389,"name":"string","nodeType":"ElementaryTypeName","src":"42314:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17392,"mutability":"mutable","name":"typeDescription","nameLocation":"42364:15:30","nodeType":"VariableDeclaration","scope":17399,"src":"42348:31:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17391,"name":"string","nodeType":"ElementaryTypeName","src":"42348:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17394,"mutability":"mutable","name":"value","nameLocation":"42404:5:30","nodeType":"VariableDeclaration","scope":17399,"src":"42389:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17393,"name":"bytes","nodeType":"ElementaryTypeName","src":"42389:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"42269:146:30"},"returnParameters":{"id":17398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17397,"mutability":"mutable","name":"json","nameLocation":"42448:4:30","nodeType":"VariableDeclaration","scope":17399,"src":"42434:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17396,"name":"string","nodeType":"ElementaryTypeName","src":"42434:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42433:20:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17411,"nodeType":"FunctionDefinition","src":"42489:155:30","nodes":[],"documentation":{"id":17400,"nodeType":"StructuredDocumentation","src":"42460:24:30","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"42498:15:30","parameters":{"id":17407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17402,"mutability":"mutable","name":"objectKey","nameLocation":"42530:9:30","nodeType":"VariableDeclaration","scope":17411,"src":"42514:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17401,"name":"string","nodeType":"ElementaryTypeName","src":"42514:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17404,"mutability":"mutable","name":"valueKey","nameLocation":"42557:8:30","nodeType":"VariableDeclaration","scope":17411,"src":"42541:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17403,"name":"string","nodeType":"ElementaryTypeName","src":"42541:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17406,"mutability":"mutable","name":"value","nameLocation":"42583:5:30","nodeType":"VariableDeclaration","scope":17411,"src":"42567:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17405,"name":"string","nodeType":"ElementaryTypeName","src":"42567:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42513:76:30"},"returnParameters":{"id":17410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17409,"mutability":"mutable","name":"json","nameLocation":"42638:4:30","nodeType":"VariableDeclaration","scope":17411,"src":"42624:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17408,"name":"string","nodeType":"ElementaryTypeName","src":"42624:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42623:20:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17424,"nodeType":"FunctionDefinition","src":"42679:158:30","nodes":[],"documentation":{"id":17412,"nodeType":"StructuredDocumentation","src":"42650:24:30","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"42688:15:30","parameters":{"id":17420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17414,"mutability":"mutable","name":"objectKey","nameLocation":"42720:9:30","nodeType":"VariableDeclaration","scope":17424,"src":"42704:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17413,"name":"string","nodeType":"ElementaryTypeName","src":"42704:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17416,"mutability":"mutable","name":"valueKey","nameLocation":"42747:8:30","nodeType":"VariableDeclaration","scope":17424,"src":"42731:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17415,"name":"string","nodeType":"ElementaryTypeName","src":"42731:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17419,"mutability":"mutable","name":"values","nameLocation":"42775:6:30","nodeType":"VariableDeclaration","scope":17424,"src":"42757:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17417,"name":"string","nodeType":"ElementaryTypeName","src":"42757:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17418,"nodeType":"ArrayTypeName","src":"42757:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"42703:79:30"},"returnParameters":{"id":17423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17422,"mutability":"mutable","name":"json","nameLocation":"42831:4:30","nodeType":"VariableDeclaration","scope":17424,"src":"42817:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17421,"name":"string","nodeType":"ElementaryTypeName","src":"42817:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42816:20:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17436,"nodeType":"FunctionDefinition","src":"42872:150:30","nodes":[],"documentation":{"id":17425,"nodeType":"StructuredDocumentation","src":"42843:24:30","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"42881:18:30","parameters":{"id":17432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17427,"mutability":"mutable","name":"objectKey","nameLocation":"42916:9:30","nodeType":"VariableDeclaration","scope":17436,"src":"42900:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17426,"name":"string","nodeType":"ElementaryTypeName","src":"42900:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17429,"mutability":"mutable","name":"valueKey","nameLocation":"42943:8:30","nodeType":"VariableDeclaration","scope":17436,"src":"42927:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17428,"name":"string","nodeType":"ElementaryTypeName","src":"42927:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17431,"mutability":"mutable","name":"value","nameLocation":"42961:5:30","nodeType":"VariableDeclaration","scope":17436,"src":"42953:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17430,"name":"uint256","nodeType":"ElementaryTypeName","src":"42953:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42899:68:30"},"returnParameters":{"id":17435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17434,"mutability":"mutable","name":"json","nameLocation":"43016:4:30","nodeType":"VariableDeclaration","scope":17436,"src":"43002:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17433,"name":"string","nodeType":"ElementaryTypeName","src":"43002:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43001:20:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17448,"nodeType":"FunctionDefinition","src":"43057:145:30","nodes":[],"documentation":{"id":17437,"nodeType":"StructuredDocumentation","src":"43028:24:30","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"43066:13:30","parameters":{"id":17444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17439,"mutability":"mutable","name":"objectKey","nameLocation":"43096:9:30","nodeType":"VariableDeclaration","scope":17448,"src":"43080:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17438,"name":"string","nodeType":"ElementaryTypeName","src":"43080:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17441,"mutability":"mutable","name":"valueKey","nameLocation":"43123:8:30","nodeType":"VariableDeclaration","scope":17448,"src":"43107:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17440,"name":"string","nodeType":"ElementaryTypeName","src":"43107:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17443,"mutability":"mutable","name":"value","nameLocation":"43141:5:30","nodeType":"VariableDeclaration","scope":17448,"src":"43133:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17442,"name":"uint256","nodeType":"ElementaryTypeName","src":"43133:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43079:68:30"},"returnParameters":{"id":17447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17446,"mutability":"mutable","name":"json","nameLocation":"43196:4:30","nodeType":"VariableDeclaration","scope":17448,"src":"43182:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17445,"name":"string","nodeType":"ElementaryTypeName","src":"43182:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43181:20:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17461,"nodeType":"FunctionDefinition","src":"43237:157:30","nodes":[],"documentation":{"id":17449,"nodeType":"StructuredDocumentation","src":"43208:24:30","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"43246:13:30","parameters":{"id":17457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17451,"mutability":"mutable","name":"objectKey","nameLocation":"43276:9:30","nodeType":"VariableDeclaration","scope":17461,"src":"43260:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17450,"name":"string","nodeType":"ElementaryTypeName","src":"43260:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17453,"mutability":"mutable","name":"valueKey","nameLocation":"43303:8:30","nodeType":"VariableDeclaration","scope":17461,"src":"43287:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17452,"name":"string","nodeType":"ElementaryTypeName","src":"43287:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17456,"mutability":"mutable","name":"values","nameLocation":"43332:6:30","nodeType":"VariableDeclaration","scope":17461,"src":"43313:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17454,"name":"uint256","nodeType":"ElementaryTypeName","src":"43313:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17455,"nodeType":"ArrayTypeName","src":"43313:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"43259:80:30"},"returnParameters":{"id":17460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17459,"mutability":"mutable","name":"json","nameLocation":"43388:4:30","nodeType":"VariableDeclaration","scope":17461,"src":"43374:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17458,"name":"string","nodeType":"ElementaryTypeName","src":"43374:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43373:20:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17469,"nodeType":"FunctionDefinition","src":"43494:72:30","nodes":[],"documentation":{"id":17462,"nodeType":"StructuredDocumentation","src":"43400:89:30","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"43503:9:30","parameters":{"id":17467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17464,"mutability":"mutable","name":"json","nameLocation":"43529:4:30","nodeType":"VariableDeclaration","scope":17469,"src":"43513:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17463,"name":"string","nodeType":"ElementaryTypeName","src":"43513:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17466,"mutability":"mutable","name":"path","nameLocation":"43551:4:30","nodeType":"VariableDeclaration","scope":17469,"src":"43535:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17465,"name":"string","nodeType":"ElementaryTypeName","src":"43535:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43512:44:30"},"returnParameters":{"id":17468,"nodeType":"ParameterList","parameters":[],"src":"43565:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17479,"nodeType":"FunctionDefinition","src":"43792:98:30","nodes":[],"documentation":{"id":17470,"nodeType":"StructuredDocumentation","src":"43572:215:30","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"43801:9:30","parameters":{"id":17477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17472,"mutability":"mutable","name":"json","nameLocation":"43827:4:30","nodeType":"VariableDeclaration","scope":17479,"src":"43811:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17471,"name":"string","nodeType":"ElementaryTypeName","src":"43811:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17474,"mutability":"mutable","name":"path","nameLocation":"43849:4:30","nodeType":"VariableDeclaration","scope":17479,"src":"43833:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17473,"name":"string","nodeType":"ElementaryTypeName","src":"43833:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17476,"mutability":"mutable","name":"valueKey","nameLocation":"43871:8:30","nodeType":"VariableDeclaration","scope":17479,"src":"43855:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17475,"name":"string","nodeType":"ElementaryTypeName","src":"43855:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43810:70:30"},"returnParameters":{"id":17478,"nodeType":"ParameterList","parameters":[],"src":"43889:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17485,"nodeType":"FunctionDefinition","src":"44001:63:30","nodes":[],"documentation":{"id":17480,"nodeType":"StructuredDocumentation","src":"43932:64:30","text":"Takes a signed transaction and broadcasts it to the network."},"functionSelector":"8c0c72e0","implemented":false,"kind":"function","modifiers":[],"name":"broadcastRawTransaction","nameLocation":"44010:23:30","parameters":{"id":17483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17482,"mutability":"mutable","name":"data","nameLocation":"44049:4:30","nodeType":"VariableDeclaration","scope":17485,"src":"44034:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17481,"name":"bytes","nodeType":"ElementaryTypeName","src":"44034:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"44033:21:30"},"returnParameters":{"id":17484,"nodeType":"ParameterList","parameters":[],"src":"44063:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17489,"nodeType":"FunctionDefinition","src":"44567:30:30","nodes":[],"documentation":{"id":17486,"nodeType":"StructuredDocumentation","src":"44070:492:30","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"44576:9:30","parameters":{"id":17487,"nodeType":"ParameterList","parameters":[],"src":"44585:2:30"},"returnParameters":{"id":17488,"nodeType":"ParameterList","parameters":[],"src":"44596:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17495,"nodeType":"FunctionDefinition","src":"44767:44:30","nodes":[],"documentation":{"id":17490,"nodeType":"StructuredDocumentation","src":"44603:159:30","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"44776:9:30","parameters":{"id":17493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17492,"mutability":"mutable","name":"signer","nameLocation":"44794:6:30","nodeType":"VariableDeclaration","scope":17495,"src":"44786:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17491,"name":"address","nodeType":"ElementaryTypeName","src":"44786:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"44785:16:30"},"returnParameters":{"id":17494,"nodeType":"ParameterList","parameters":[],"src":"44810:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17501,"nodeType":"FunctionDefinition","src":"44985:48:30","nodes":[],"documentation":{"id":17496,"nodeType":"StructuredDocumentation","src":"44817:163:30","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"44994:9:30","parameters":{"id":17499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17498,"mutability":"mutable","name":"privateKey","nameLocation":"45012:10:30","nodeType":"VariableDeclaration","scope":17501,"src":"45004:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17497,"name":"uint256","nodeType":"ElementaryTypeName","src":"45004:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45003:20:30"},"returnParameters":{"id":17500,"nodeType":"ParameterList","parameters":[],"src":"45032:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17505,"nodeType":"FunctionDefinition","src":"45543:35:30","nodes":[],"documentation":{"id":17502,"nodeType":"StructuredDocumentation","src":"45039:499:30","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"45552:14:30","parameters":{"id":17503,"nodeType":"ParameterList","parameters":[],"src":"45566:2:30"},"returnParameters":{"id":17504,"nodeType":"ParameterList","parameters":[],"src":"45577:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17511,"nodeType":"FunctionDefinition","src":"45740:49:30","nodes":[],"documentation":{"id":17506,"nodeType":"StructuredDocumentation","src":"45584:151:30","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"45749:14:30","parameters":{"id":17509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17508,"mutability":"mutable","name":"signer","nameLocation":"45772:6:30","nodeType":"VariableDeclaration","scope":17511,"src":"45764:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17507,"name":"address","nodeType":"ElementaryTypeName","src":"45764:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"45763:16:30"},"returnParameters":{"id":17510,"nodeType":"ParameterList","parameters":[],"src":"45788:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17517,"nodeType":"FunctionDefinition","src":"45955:53:30","nodes":[],"documentation":{"id":17512,"nodeType":"StructuredDocumentation","src":"45795:155:30","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"45964:14:30","parameters":{"id":17515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17514,"mutability":"mutable","name":"privateKey","nameLocation":"45987:10:30","nodeType":"VariableDeclaration","scope":17517,"src":"45979:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17513,"name":"uint256","nodeType":"ElementaryTypeName","src":"45979:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45978:20:30"},"returnParameters":{"id":17516,"nodeType":"ParameterList","parameters":[],"src":"46007:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17521,"nodeType":"FunctionDefinition","src":"46061:34:30","nodes":[],"documentation":{"id":17518,"nodeType":"StructuredDocumentation","src":"46014:42:30","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"46070:13:30","parameters":{"id":17519,"nodeType":"ParameterList","parameters":[],"src":"46083:2:30"},"returnParameters":{"id":17520,"nodeType":"ParameterList","parameters":[],"src":"46094:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17531,"nodeType":"FunctionDefinition","src":"46344:93:30","nodes":[],"documentation":{"id":17522,"nodeType":"StructuredDocumentation","src":"46134:205:30","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"46353:7:30","parameters":{"id":17527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17524,"mutability":"mutable","name":"input","nameLocation":"46377:5:30","nodeType":"VariableDeclaration","scope":17531,"src":"46361:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17523,"name":"string","nodeType":"ElementaryTypeName","src":"46361:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17526,"mutability":"mutable","name":"key","nameLocation":"46400:3:30","nodeType":"VariableDeclaration","scope":17531,"src":"46384:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17525,"name":"string","nodeType":"ElementaryTypeName","src":"46384:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46360:44:30"},"returnParameters":{"id":17530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17531,"src":"46428:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17528,"name":"uint256","nodeType":"ElementaryTypeName","src":"46428:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46427:9:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17539,"nodeType":"FunctionDefinition","src":"46496:100:30","nodes":[],"documentation":{"id":17532,"nodeType":"StructuredDocumentation","src":"46443:48:30","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"46505:12:30","parameters":{"id":17535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17534,"mutability":"mutable","name":"stringifiedValue","nameLocation":"46534:16:30","nodeType":"VariableDeclaration","scope":17539,"src":"46518:32:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17533,"name":"string","nodeType":"ElementaryTypeName","src":"46518:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46517:34:30"},"returnParameters":{"id":17538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17537,"mutability":"mutable","name":"parsedValue","nameLocation":"46583:11:30","nodeType":"VariableDeclaration","scope":17539,"src":"46575:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17536,"name":"address","nodeType":"ElementaryTypeName","src":"46575:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"46574:21:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17547,"nodeType":"FunctionDefinition","src":"46651:94:30","nodes":[],"documentation":{"id":17540,"nodeType":"StructuredDocumentation","src":"46602:44:30","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"46660:9:30","parameters":{"id":17543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17542,"mutability":"mutable","name":"stringifiedValue","nameLocation":"46686:16:30","nodeType":"VariableDeclaration","scope":17547,"src":"46670:32:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17541,"name":"string","nodeType":"ElementaryTypeName","src":"46670:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46669:34:30"},"returnParameters":{"id":17546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17545,"mutability":"mutable","name":"parsedValue","nameLocation":"46732:11:30","nodeType":"VariableDeclaration","scope":17547,"src":"46727:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17544,"name":"bool","nodeType":"ElementaryTypeName","src":"46727:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"46726:18:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17555,"nodeType":"FunctionDefinition","src":"46799:103:30","nodes":[],"documentation":{"id":17548,"nodeType":"StructuredDocumentation","src":"46751:43:30","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"46808:10:30","parameters":{"id":17551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17550,"mutability":"mutable","name":"stringifiedValue","nameLocation":"46835:16:30","nodeType":"VariableDeclaration","scope":17555,"src":"46819:32:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17549,"name":"string","nodeType":"ElementaryTypeName","src":"46819:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46818:34:30"},"returnParameters":{"id":17554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17553,"mutability":"mutable","name":"parsedValue","nameLocation":"46889:11:30","nodeType":"VariableDeclaration","scope":17555,"src":"46876:24:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17552,"name":"bytes","nodeType":"ElementaryTypeName","src":"46876:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"46875:26:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17563,"nodeType":"FunctionDefinition","src":"46960:100:30","nodes":[],"documentation":{"id":17556,"nodeType":"StructuredDocumentation","src":"46908:47:30","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"46969:12:30","parameters":{"id":17559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17558,"mutability":"mutable","name":"stringifiedValue","nameLocation":"46998:16:30","nodeType":"VariableDeclaration","scope":17563,"src":"46982:32:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17557,"name":"string","nodeType":"ElementaryTypeName","src":"46982:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46981:34:30"},"returnParameters":{"id":17562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17561,"mutability":"mutable","name":"parsedValue","nameLocation":"47047:11:30","nodeType":"VariableDeclaration","scope":17563,"src":"47039:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"47039:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"47038:21:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17571,"nodeType":"FunctionDefinition","src":"47117:95:30","nodes":[],"documentation":{"id":17564,"nodeType":"StructuredDocumentation","src":"47066:46:30","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"47126:8:30","parameters":{"id":17567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17566,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47151:16:30","nodeType":"VariableDeclaration","scope":17571,"src":"47135:32:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17565,"name":"string","nodeType":"ElementaryTypeName","src":"47135:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47134:34:30"},"returnParameters":{"id":17570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17569,"mutability":"mutable","name":"parsedValue","nameLocation":"47199:11:30","nodeType":"VariableDeclaration","scope":17571,"src":"47192:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17568,"name":"int256","nodeType":"ElementaryTypeName","src":"47192:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"47191:20:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17579,"nodeType":"FunctionDefinition","src":"47270:97:30","nodes":[],"documentation":{"id":17572,"nodeType":"StructuredDocumentation","src":"47218:47:30","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"47279:9:30","parameters":{"id":17575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17574,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47305:16:30","nodeType":"VariableDeclaration","scope":17579,"src":"47289:32:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17573,"name":"string","nodeType":"ElementaryTypeName","src":"47289:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47288:34:30"},"returnParameters":{"id":17578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17577,"mutability":"mutable","name":"parsedValue","nameLocation":"47354:11:30","nodeType":"VariableDeclaration","scope":17579,"src":"47346:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17576,"name":"uint256","nodeType":"ElementaryTypeName","src":"47346:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47345:21:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17591,"nodeType":"FunctionDefinition","src":"47445:151:30","nodes":[],"documentation":{"id":17580,"nodeType":"StructuredDocumentation","src":"47373:67:30","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"47454:7:30","parameters":{"id":17587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17582,"mutability":"mutable","name":"input","nameLocation":"47478:5:30","nodeType":"VariableDeclaration","scope":17591,"src":"47462:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17581,"name":"string","nodeType":"ElementaryTypeName","src":"47462:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17584,"mutability":"mutable","name":"from","nameLocation":"47501:4:30","nodeType":"VariableDeclaration","scope":17591,"src":"47485:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17583,"name":"string","nodeType":"ElementaryTypeName","src":"47485:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17586,"mutability":"mutable","name":"to","nameLocation":"47523:2:30","nodeType":"VariableDeclaration","scope":17591,"src":"47507:18:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17585,"name":"string","nodeType":"ElementaryTypeName","src":"47507:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47461:65:30"},"returnParameters":{"id":17590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17589,"mutability":"mutable","name":"output","nameLocation":"47588:6:30","nodeType":"VariableDeclaration","scope":17591,"src":"47574:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17588,"name":"string","nodeType":"ElementaryTypeName","src":"47574:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47573:22:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17602,"nodeType":"FunctionDefinition","src":"47689:113:30","nodes":[],"documentation":{"id":17592,"nodeType":"StructuredDocumentation","src":"47602:82:30","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"47698:5:30","parameters":{"id":17597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17594,"mutability":"mutable","name":"input","nameLocation":"47720:5:30","nodeType":"VariableDeclaration","scope":17602,"src":"47704:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17593,"name":"string","nodeType":"ElementaryTypeName","src":"47704:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17596,"mutability":"mutable","name":"delimiter","nameLocation":"47743:9:30","nodeType":"VariableDeclaration","scope":17602,"src":"47727:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17595,"name":"string","nodeType":"ElementaryTypeName","src":"47727:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47703:50:30"},"returnParameters":{"id":17601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17600,"mutability":"mutable","name":"outputs","nameLocation":"47793:7:30","nodeType":"VariableDeclaration","scope":17602,"src":"47777:23:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17598,"name":"string","nodeType":"ElementaryTypeName","src":"47777:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17599,"nodeType":"ArrayTypeName","src":"47777:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"47776:25:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17610,"nodeType":"FunctionDefinition","src":"47864:89:30","nodes":[],"documentation":{"id":17603,"nodeType":"StructuredDocumentation","src":"47808:51:30","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"47873:11:30","parameters":{"id":17606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17605,"mutability":"mutable","name":"input","nameLocation":"47901:5:30","nodeType":"VariableDeclaration","scope":17610,"src":"47885:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17604,"name":"string","nodeType":"ElementaryTypeName","src":"47885:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47884:23:30"},"returnParameters":{"id":17609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17608,"mutability":"mutable","name":"output","nameLocation":"47945:6:30","nodeType":"VariableDeclaration","scope":17610,"src":"47931:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17607,"name":"string","nodeType":"ElementaryTypeName","src":"47931:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47930:22:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17618,"nodeType":"FunctionDefinition","src":"48007:88:30","nodes":[],"documentation":{"id":17611,"nodeType":"StructuredDocumentation","src":"47959:43:30","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48016:8:30","parameters":{"id":17614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17613,"mutability":"mutable","name":"value","nameLocation":"48033:5:30","nodeType":"VariableDeclaration","scope":17618,"src":"48025:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17612,"name":"address","nodeType":"ElementaryTypeName","src":"48025:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"48024:15:30"},"returnParameters":{"id":17617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17616,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48077:16:30","nodeType":"VariableDeclaration","scope":17618,"src":"48063:30:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17615,"name":"string","nodeType":"ElementaryTypeName","src":"48063:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48062:32:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17626,"nodeType":"FunctionDefinition","src":"48149:95:30","nodes":[],"documentation":{"id":17619,"nodeType":"StructuredDocumentation","src":"48101:43:30","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48158:8:30","parameters":{"id":17622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17621,"mutability":"mutable","name":"value","nameLocation":"48182:5:30","nodeType":"VariableDeclaration","scope":17626,"src":"48167:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17620,"name":"bytes","nodeType":"ElementaryTypeName","src":"48167:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"48166:22:30"},"returnParameters":{"id":17625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17624,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48226:16:30","nodeType":"VariableDeclaration","scope":17626,"src":"48212:30:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17623,"name":"string","nodeType":"ElementaryTypeName","src":"48212:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48211:32:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17634,"nodeType":"FunctionDefinition","src":"48298:88:30","nodes":[],"documentation":{"id":17627,"nodeType":"StructuredDocumentation","src":"48250:43:30","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48307:8:30","parameters":{"id":17630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17629,"mutability":"mutable","name":"value","nameLocation":"48324:5:30","nodeType":"VariableDeclaration","scope":17634,"src":"48316:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48316:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"48315:15:30"},"returnParameters":{"id":17633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17632,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48368:16:30","nodeType":"VariableDeclaration","scope":17634,"src":"48354:30:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17631,"name":"string","nodeType":"ElementaryTypeName","src":"48354:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48353:32:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17642,"nodeType":"FunctionDefinition","src":"48440:85:30","nodes":[],"documentation":{"id":17635,"nodeType":"StructuredDocumentation","src":"48392:43:30","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48449:8:30","parameters":{"id":17638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17637,"mutability":"mutable","name":"value","nameLocation":"48463:5:30","nodeType":"VariableDeclaration","scope":17642,"src":"48458:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17636,"name":"bool","nodeType":"ElementaryTypeName","src":"48458:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"48457:12:30"},"returnParameters":{"id":17641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17640,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48507:16:30","nodeType":"VariableDeclaration","scope":17642,"src":"48493:30:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17639,"name":"string","nodeType":"ElementaryTypeName","src":"48493:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48492:32:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17650,"nodeType":"FunctionDefinition","src":"48579:88:30","nodes":[],"documentation":{"id":17643,"nodeType":"StructuredDocumentation","src":"48531:43:30","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48588:8:30","parameters":{"id":17646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17645,"mutability":"mutable","name":"value","nameLocation":"48605:5:30","nodeType":"VariableDeclaration","scope":17650,"src":"48597:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17644,"name":"uint256","nodeType":"ElementaryTypeName","src":"48597:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48596:15:30"},"returnParameters":{"id":17649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17648,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48649:16:30","nodeType":"VariableDeclaration","scope":17650,"src":"48635:30:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17647,"name":"string","nodeType":"ElementaryTypeName","src":"48635:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48634:32:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17658,"nodeType":"FunctionDefinition","src":"48721:87:30","nodes":[],"documentation":{"id":17651,"nodeType":"StructuredDocumentation","src":"48673:43:30","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48730:8:30","parameters":{"id":17654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17653,"mutability":"mutable","name":"value","nameLocation":"48746:5:30","nodeType":"VariableDeclaration","scope":17658,"src":"48739:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17652,"name":"int256","nodeType":"ElementaryTypeName","src":"48739:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"48738:14:30"},"returnParameters":{"id":17657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17656,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48790:16:30","nodeType":"VariableDeclaration","scope":17658,"src":"48776:30:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17655,"name":"string","nodeType":"ElementaryTypeName","src":"48776:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48775:32:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17666,"nodeType":"FunctionDefinition","src":"48870:89:30","nodes":[],"documentation":{"id":17659,"nodeType":"StructuredDocumentation","src":"48814:51:30","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"48879:11:30","parameters":{"id":17662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17661,"mutability":"mutable","name":"input","nameLocation":"48907:5:30","nodeType":"VariableDeclaration","scope":17666,"src":"48891:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17660,"name":"string","nodeType":"ElementaryTypeName","src":"48891:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48890:23:30"},"returnParameters":{"id":17665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17664,"mutability":"mutable","name":"output","nameLocation":"48951:6:30","nodeType":"VariableDeclaration","scope":17666,"src":"48937:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17663,"name":"string","nodeType":"ElementaryTypeName","src":"48937:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48936:22:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17674,"nodeType":"FunctionDefinition","src":"49042:82:30","nodes":[],"documentation":{"id":17667,"nodeType":"StructuredDocumentation","src":"48965:72:30","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"49051:4:30","parameters":{"id":17670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17669,"mutability":"mutable","name":"input","nameLocation":"49072:5:30","nodeType":"VariableDeclaration","scope":17674,"src":"49056:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17668,"name":"string","nodeType":"ElementaryTypeName","src":"49056:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49055:23:30"},"returnParameters":{"id":17673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17672,"mutability":"mutable","name":"output","nameLocation":"49116:6:30","nodeType":"VariableDeclaration","scope":17674,"src":"49102:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17671,"name":"string","nodeType":"ElementaryTypeName","src":"49102:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49101:22:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17686,"nodeType":"FunctionDefinition","src":"49319:113:30","nodes":[],"documentation":{"id":17675,"nodeType":"StructuredDocumentation","src":"49164:150:30","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"49328:24:30","parameters":{"id":17684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17677,"mutability":"mutable","name":"left","nameLocation":"49361:4:30","nodeType":"VariableDeclaration","scope":17686,"src":"49353:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17676,"name":"uint256","nodeType":"ElementaryTypeName","src":"49353:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17679,"mutability":"mutable","name":"right","nameLocation":"49375:5:30","nodeType":"VariableDeclaration","scope":17686,"src":"49367:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17678,"name":"uint256","nodeType":"ElementaryTypeName","src":"49367:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17681,"mutability":"mutable","name":"maxDelta","nameLocation":"49390:8:30","nodeType":"VariableDeclaration","scope":17686,"src":"49382:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17680,"name":"uint256","nodeType":"ElementaryTypeName","src":"49382:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17683,"mutability":"mutable","name":"decimals","nameLocation":"49408:8:30","nodeType":"VariableDeclaration","scope":17686,"src":"49400:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17682,"name":"uint256","nodeType":"ElementaryTypeName","src":"49400:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49352:65:30"},"returnParameters":{"id":17685,"nodeType":"ParameterList","parameters":[],"src":"49431:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17700,"nodeType":"FunctionDefinition","src":"49647:182:30","nodes":[],"documentation":{"id":17687,"nodeType":"StructuredDocumentation","src":"49438:204:30","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"49656:24:30","parameters":{"id":17698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17689,"mutability":"mutable","name":"left","nameLocation":"49698:4:30","nodeType":"VariableDeclaration","scope":17700,"src":"49690:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17688,"name":"uint256","nodeType":"ElementaryTypeName","src":"49690:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17691,"mutability":"mutable","name":"right","nameLocation":"49720:5:30","nodeType":"VariableDeclaration","scope":17700,"src":"49712:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17690,"name":"uint256","nodeType":"ElementaryTypeName","src":"49712:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17693,"mutability":"mutable","name":"maxDelta","nameLocation":"49743:8:30","nodeType":"VariableDeclaration","scope":17700,"src":"49735:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17692,"name":"uint256","nodeType":"ElementaryTypeName","src":"49735:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17695,"mutability":"mutable","name":"decimals","nameLocation":"49769:8:30","nodeType":"VariableDeclaration","scope":17700,"src":"49761:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17694,"name":"uint256","nodeType":"ElementaryTypeName","src":"49761:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17697,"mutability":"mutable","name":"error","nameLocation":"49803:5:30","nodeType":"VariableDeclaration","scope":17700,"src":"49787:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17696,"name":"string","nodeType":"ElementaryTypeName","src":"49787:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49680:134:30"},"returnParameters":{"id":17699,"nodeType":"ParameterList","parameters":[],"src":"49828:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17712,"nodeType":"FunctionDefinition","src":"49989:111:30","nodes":[],"documentation":{"id":17701,"nodeType":"StructuredDocumentation","src":"49835:149:30","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"49998:24:30","parameters":{"id":17710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17703,"mutability":"mutable","name":"left","nameLocation":"50030:4:30","nodeType":"VariableDeclaration","scope":17712,"src":"50023:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17702,"name":"int256","nodeType":"ElementaryTypeName","src":"50023:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17705,"mutability":"mutable","name":"right","nameLocation":"50043:5:30","nodeType":"VariableDeclaration","scope":17712,"src":"50036:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17704,"name":"int256","nodeType":"ElementaryTypeName","src":"50036:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17707,"mutability":"mutable","name":"maxDelta","nameLocation":"50058:8:30","nodeType":"VariableDeclaration","scope":17712,"src":"50050:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17706,"name":"uint256","nodeType":"ElementaryTypeName","src":"50050:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17709,"mutability":"mutable","name":"decimals","nameLocation":"50076:8:30","nodeType":"VariableDeclaration","scope":17712,"src":"50068:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17708,"name":"uint256","nodeType":"ElementaryTypeName","src":"50068:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50022:63:30"},"returnParameters":{"id":17711,"nodeType":"ParameterList","parameters":[],"src":"50099:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17726,"nodeType":"FunctionDefinition","src":"50314:180:30","nodes":[],"documentation":{"id":17713,"nodeType":"StructuredDocumentation","src":"50106:203:30","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"50323:24:30","parameters":{"id":17724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17715,"mutability":"mutable","name":"left","nameLocation":"50364:4:30","nodeType":"VariableDeclaration","scope":17726,"src":"50357:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17714,"name":"int256","nodeType":"ElementaryTypeName","src":"50357:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17717,"mutability":"mutable","name":"right","nameLocation":"50385:5:30","nodeType":"VariableDeclaration","scope":17726,"src":"50378:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17716,"name":"int256","nodeType":"ElementaryTypeName","src":"50378:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17719,"mutability":"mutable","name":"maxDelta","nameLocation":"50408:8:30","nodeType":"VariableDeclaration","scope":17726,"src":"50400:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17718,"name":"uint256","nodeType":"ElementaryTypeName","src":"50400:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17721,"mutability":"mutable","name":"decimals","nameLocation":"50434:8:30","nodeType":"VariableDeclaration","scope":17726,"src":"50426:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17720,"name":"uint256","nodeType":"ElementaryTypeName","src":"50426:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17723,"mutability":"mutable","name":"error","nameLocation":"50468:5:30","nodeType":"VariableDeclaration","scope":17726,"src":"50452:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17722,"name":"string","nodeType":"ElementaryTypeName","src":"50452:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50347:132:30"},"returnParameters":{"id":17725,"nodeType":"ParameterList","parameters":[],"src":"50493:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17736,"nodeType":"FunctionDefinition","src":"50598:88:30","nodes":[],"documentation":{"id":17727,"nodeType":"StructuredDocumentation","src":"50500:93:30","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"50607:17:30","parameters":{"id":17734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17729,"mutability":"mutable","name":"left","nameLocation":"50633:4:30","nodeType":"VariableDeclaration","scope":17736,"src":"50625:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17728,"name":"uint256","nodeType":"ElementaryTypeName","src":"50625:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17731,"mutability":"mutable","name":"right","nameLocation":"50647:5:30","nodeType":"VariableDeclaration","scope":17736,"src":"50639:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17730,"name":"uint256","nodeType":"ElementaryTypeName","src":"50639:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17733,"mutability":"mutable","name":"maxDelta","nameLocation":"50662:8:30","nodeType":"VariableDeclaration","scope":17736,"src":"50654:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17732,"name":"uint256","nodeType":"ElementaryTypeName","src":"50654:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50624:47:30"},"returnParameters":{"id":17735,"nodeType":"ParameterList","parameters":[],"src":"50685:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17748,"nodeType":"FunctionDefinition","src":"50852:111:30","nodes":[],"documentation":{"id":17737,"nodeType":"StructuredDocumentation","src":"50692:155:30","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"50861:17:30","parameters":{"id":17746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17739,"mutability":"mutable","name":"left","nameLocation":"50887:4:30","nodeType":"VariableDeclaration","scope":17748,"src":"50879:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17738,"name":"uint256","nodeType":"ElementaryTypeName","src":"50879:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17741,"mutability":"mutable","name":"right","nameLocation":"50901:5:30","nodeType":"VariableDeclaration","scope":17748,"src":"50893:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17740,"name":"uint256","nodeType":"ElementaryTypeName","src":"50893:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17743,"mutability":"mutable","name":"maxDelta","nameLocation":"50916:8:30","nodeType":"VariableDeclaration","scope":17748,"src":"50908:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17742,"name":"uint256","nodeType":"ElementaryTypeName","src":"50908:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17745,"mutability":"mutable","name":"error","nameLocation":"50942:5:30","nodeType":"VariableDeclaration","scope":17748,"src":"50926:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17744,"name":"string","nodeType":"ElementaryTypeName","src":"50926:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50878:70:30"},"returnParameters":{"id":17747,"nodeType":"ParameterList","parameters":[],"src":"50962:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17758,"nodeType":"FunctionDefinition","src":"51066:86:30","nodes":[],"documentation":{"id":17749,"nodeType":"StructuredDocumentation","src":"50969:92:30","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"51075:17:30","parameters":{"id":17756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17751,"mutability":"mutable","name":"left","nameLocation":"51100:4:30","nodeType":"VariableDeclaration","scope":17758,"src":"51093:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17750,"name":"int256","nodeType":"ElementaryTypeName","src":"51093:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17753,"mutability":"mutable","name":"right","nameLocation":"51113:5:30","nodeType":"VariableDeclaration","scope":17758,"src":"51106:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17752,"name":"int256","nodeType":"ElementaryTypeName","src":"51106:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17755,"mutability":"mutable","name":"maxDelta","nameLocation":"51128:8:30","nodeType":"VariableDeclaration","scope":17758,"src":"51120:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17754,"name":"uint256","nodeType":"ElementaryTypeName","src":"51120:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"51092:45:30"},"returnParameters":{"id":17757,"nodeType":"ParameterList","parameters":[],"src":"51151:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17770,"nodeType":"FunctionDefinition","src":"51317:109:30","nodes":[],"documentation":{"id":17759,"nodeType":"StructuredDocumentation","src":"51158:154:30","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"51326:17:30","parameters":{"id":17768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17761,"mutability":"mutable","name":"left","nameLocation":"51351:4:30","nodeType":"VariableDeclaration","scope":17770,"src":"51344:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17760,"name":"int256","nodeType":"ElementaryTypeName","src":"51344:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17763,"mutability":"mutable","name":"right","nameLocation":"51364:5:30","nodeType":"VariableDeclaration","scope":17770,"src":"51357:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17762,"name":"int256","nodeType":"ElementaryTypeName","src":"51357:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17765,"mutability":"mutable","name":"maxDelta","nameLocation":"51379:8:30","nodeType":"VariableDeclaration","scope":17770,"src":"51371:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17764,"name":"uint256","nodeType":"ElementaryTypeName","src":"51371:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17767,"mutability":"mutable","name":"error","nameLocation":"51405:5:30","nodeType":"VariableDeclaration","scope":17770,"src":"51389:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17766,"name":"string","nodeType":"ElementaryTypeName","src":"51389:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51343:68:30"},"returnParameters":{"id":17769,"nodeType":"ParameterList","parameters":[],"src":"51425:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17782,"nodeType":"FunctionDefinition","src":"51697:136:30","nodes":[],"documentation":{"id":17771,"nodeType":"StructuredDocumentation","src":"51432:260:30","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"51706:24:30","parameters":{"id":17780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17773,"mutability":"mutable","name":"left","nameLocation":"51739:4:30","nodeType":"VariableDeclaration","scope":17782,"src":"51731:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17772,"name":"uint256","nodeType":"ElementaryTypeName","src":"51731:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17775,"mutability":"mutable","name":"right","nameLocation":"51753:5:30","nodeType":"VariableDeclaration","scope":17782,"src":"51745:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17774,"name":"uint256","nodeType":"ElementaryTypeName","src":"51745:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17777,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"51768:15:30","nodeType":"VariableDeclaration","scope":17782,"src":"51760:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17776,"name":"uint256","nodeType":"ElementaryTypeName","src":"51760:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17779,"mutability":"mutable","name":"decimals","nameLocation":"51793:8:30","nodeType":"VariableDeclaration","scope":17782,"src":"51785:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17778,"name":"uint256","nodeType":"ElementaryTypeName","src":"51785:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"51730:72:30"},"returnParameters":{"id":17781,"nodeType":"ParameterList","parameters":[],"src":"51832:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17796,"nodeType":"FunctionDefinition","src":"52158:189:30","nodes":[],"documentation":{"id":17783,"nodeType":"StructuredDocumentation","src":"51839:314:30","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"52167:24:30","parameters":{"id":17794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17785,"mutability":"mutable","name":"left","nameLocation":"52209:4:30","nodeType":"VariableDeclaration","scope":17796,"src":"52201:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17784,"name":"uint256","nodeType":"ElementaryTypeName","src":"52201:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17787,"mutability":"mutable","name":"right","nameLocation":"52231:5:30","nodeType":"VariableDeclaration","scope":17796,"src":"52223:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17786,"name":"uint256","nodeType":"ElementaryTypeName","src":"52223:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17789,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"52254:15:30","nodeType":"VariableDeclaration","scope":17796,"src":"52246:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17788,"name":"uint256","nodeType":"ElementaryTypeName","src":"52246:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17791,"mutability":"mutable","name":"decimals","nameLocation":"52287:8:30","nodeType":"VariableDeclaration","scope":17796,"src":"52279:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17790,"name":"uint256","nodeType":"ElementaryTypeName","src":"52279:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17793,"mutability":"mutable","name":"error","nameLocation":"52321:5:30","nodeType":"VariableDeclaration","scope":17796,"src":"52305:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17792,"name":"string","nodeType":"ElementaryTypeName","src":"52305:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52191:141:30"},"returnParameters":{"id":17795,"nodeType":"ParameterList","parameters":[],"src":"52346:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17808,"nodeType":"FunctionDefinition","src":"52617:134:30","nodes":[],"documentation":{"id":17797,"nodeType":"StructuredDocumentation","src":"52353:259:30","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"52626:24:30","parameters":{"id":17806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17799,"mutability":"mutable","name":"left","nameLocation":"52658:4:30","nodeType":"VariableDeclaration","scope":17808,"src":"52651:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17798,"name":"int256","nodeType":"ElementaryTypeName","src":"52651:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17801,"mutability":"mutable","name":"right","nameLocation":"52671:5:30","nodeType":"VariableDeclaration","scope":17808,"src":"52664:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17800,"name":"int256","nodeType":"ElementaryTypeName","src":"52664:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17803,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"52686:15:30","nodeType":"VariableDeclaration","scope":17808,"src":"52678:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17802,"name":"uint256","nodeType":"ElementaryTypeName","src":"52678:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17805,"mutability":"mutable","name":"decimals","nameLocation":"52711:8:30","nodeType":"VariableDeclaration","scope":17808,"src":"52703:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17804,"name":"uint256","nodeType":"ElementaryTypeName","src":"52703:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52650:70:30"},"returnParameters":{"id":17807,"nodeType":"ParameterList","parameters":[],"src":"52750:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17822,"nodeType":"FunctionDefinition","src":"53075:187:30","nodes":[],"documentation":{"id":17809,"nodeType":"StructuredDocumentation","src":"52757:313:30","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"53084:24:30","parameters":{"id":17820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17811,"mutability":"mutable","name":"left","nameLocation":"53125:4:30","nodeType":"VariableDeclaration","scope":17822,"src":"53118:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17810,"name":"int256","nodeType":"ElementaryTypeName","src":"53118:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17813,"mutability":"mutable","name":"right","nameLocation":"53146:5:30","nodeType":"VariableDeclaration","scope":17822,"src":"53139:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17812,"name":"int256","nodeType":"ElementaryTypeName","src":"53139:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17815,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"53169:15:30","nodeType":"VariableDeclaration","scope":17822,"src":"53161:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17814,"name":"uint256","nodeType":"ElementaryTypeName","src":"53161:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17817,"mutability":"mutable","name":"decimals","nameLocation":"53202:8:30","nodeType":"VariableDeclaration","scope":17822,"src":"53194:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17816,"name":"uint256","nodeType":"ElementaryTypeName","src":"53194:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17819,"mutability":"mutable","name":"error","nameLocation":"53236:5:30","nodeType":"VariableDeclaration","scope":17822,"src":"53220:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17818,"name":"string","nodeType":"ElementaryTypeName","src":"53220:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53108:139:30"},"returnParameters":{"id":17821,"nodeType":"ParameterList","parameters":[],"src":"53261:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17832,"nodeType":"FunctionDefinition","src":"53476:95:30","nodes":[],"documentation":{"id":17823,"nodeType":"StructuredDocumentation","src":"53268:203:30","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"53485:17:30","parameters":{"id":17830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17825,"mutability":"mutable","name":"left","nameLocation":"53511:4:30","nodeType":"VariableDeclaration","scope":17832,"src":"53503:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17824,"name":"uint256","nodeType":"ElementaryTypeName","src":"53503:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17827,"mutability":"mutable","name":"right","nameLocation":"53525:5:30","nodeType":"VariableDeclaration","scope":17832,"src":"53517:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17826,"name":"uint256","nodeType":"ElementaryTypeName","src":"53517:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17829,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"53540:15:30","nodeType":"VariableDeclaration","scope":17832,"src":"53532:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17828,"name":"uint256","nodeType":"ElementaryTypeName","src":"53532:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53502:54:30"},"returnParameters":{"id":17831,"nodeType":"ParameterList","parameters":[],"src":"53570:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17844,"nodeType":"FunctionDefinition","src":"53847:134:30","nodes":[],"documentation":{"id":17833,"nodeType":"StructuredDocumentation","src":"53577:265:30","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"53856:17:30","parameters":{"id":17842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17835,"mutability":"mutable","name":"left","nameLocation":"53882:4:30","nodeType":"VariableDeclaration","scope":17844,"src":"53874:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17834,"name":"uint256","nodeType":"ElementaryTypeName","src":"53874:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17837,"mutability":"mutable","name":"right","nameLocation":"53896:5:30","nodeType":"VariableDeclaration","scope":17844,"src":"53888:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17836,"name":"uint256","nodeType":"ElementaryTypeName","src":"53888:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17839,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"53911:15:30","nodeType":"VariableDeclaration","scope":17844,"src":"53903:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17838,"name":"uint256","nodeType":"ElementaryTypeName","src":"53903:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17841,"mutability":"mutable","name":"error","nameLocation":"53944:5:30","nodeType":"VariableDeclaration","scope":17844,"src":"53928:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17840,"name":"string","nodeType":"ElementaryTypeName","src":"53928:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53873:77:30"},"returnParameters":{"id":17843,"nodeType":"ParameterList","parameters":[],"src":"53980:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17854,"nodeType":"FunctionDefinition","src":"54194:93:30","nodes":[],"documentation":{"id":17845,"nodeType":"StructuredDocumentation","src":"53987:202:30","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"54203:17:30","parameters":{"id":17852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17847,"mutability":"mutable","name":"left","nameLocation":"54228:4:30","nodeType":"VariableDeclaration","scope":17854,"src":"54221:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17846,"name":"int256","nodeType":"ElementaryTypeName","src":"54221:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17849,"mutability":"mutable","name":"right","nameLocation":"54241:5:30","nodeType":"VariableDeclaration","scope":17854,"src":"54234:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17848,"name":"int256","nodeType":"ElementaryTypeName","src":"54234:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17851,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"54256:15:30","nodeType":"VariableDeclaration","scope":17854,"src":"54248:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17850,"name":"uint256","nodeType":"ElementaryTypeName","src":"54248:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54220:52:30"},"returnParameters":{"id":17853,"nodeType":"ParameterList","parameters":[],"src":"54286:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17866,"nodeType":"FunctionDefinition","src":"54562:132:30","nodes":[],"documentation":{"id":17855,"nodeType":"StructuredDocumentation","src":"54293:264:30","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"54571:17:30","parameters":{"id":17864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17857,"mutability":"mutable","name":"left","nameLocation":"54596:4:30","nodeType":"VariableDeclaration","scope":17866,"src":"54589:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17856,"name":"int256","nodeType":"ElementaryTypeName","src":"54589:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17859,"mutability":"mutable","name":"right","nameLocation":"54609:5:30","nodeType":"VariableDeclaration","scope":17866,"src":"54602:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17858,"name":"int256","nodeType":"ElementaryTypeName","src":"54602:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17861,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"54624:15:30","nodeType":"VariableDeclaration","scope":17866,"src":"54616:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17860,"name":"uint256","nodeType":"ElementaryTypeName","src":"54616:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17863,"mutability":"mutable","name":"error","nameLocation":"54657:5:30","nodeType":"VariableDeclaration","scope":17866,"src":"54641:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17862,"name":"string","nodeType":"ElementaryTypeName","src":"54641:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54588:75:30"},"returnParameters":{"id":17865,"nodeType":"ParameterList","parameters":[],"src":"54693:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17876,"nodeType":"FunctionDefinition","src":"54803:86:30","nodes":[],"documentation":{"id":17867,"nodeType":"StructuredDocumentation","src":"54700:98:30","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"54812:15:30","parameters":{"id":17874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17869,"mutability":"mutable","name":"left","nameLocation":"54836:4:30","nodeType":"VariableDeclaration","scope":17876,"src":"54828:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17868,"name":"uint256","nodeType":"ElementaryTypeName","src":"54828:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17871,"mutability":"mutable","name":"right","nameLocation":"54850:5:30","nodeType":"VariableDeclaration","scope":17876,"src":"54842:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17870,"name":"uint256","nodeType":"ElementaryTypeName","src":"54842:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17873,"mutability":"mutable","name":"decimals","nameLocation":"54865:8:30","nodeType":"VariableDeclaration","scope":17876,"src":"54857:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17872,"name":"uint256","nodeType":"ElementaryTypeName","src":"54857:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54827:47:30"},"returnParameters":{"id":17875,"nodeType":"ParameterList","parameters":[],"src":"54888:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17888,"nodeType":"FunctionDefinition","src":"55060:109:30","nodes":[],"documentation":{"id":17877,"nodeType":"StructuredDocumentation","src":"54895:160:30","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"55069:15:30","parameters":{"id":17886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17879,"mutability":"mutable","name":"left","nameLocation":"55093:4:30","nodeType":"VariableDeclaration","scope":17888,"src":"55085:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17878,"name":"uint256","nodeType":"ElementaryTypeName","src":"55085:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17881,"mutability":"mutable","name":"right","nameLocation":"55107:5:30","nodeType":"VariableDeclaration","scope":17888,"src":"55099:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17880,"name":"uint256","nodeType":"ElementaryTypeName","src":"55099:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17883,"mutability":"mutable","name":"decimals","nameLocation":"55122:8:30","nodeType":"VariableDeclaration","scope":17888,"src":"55114:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17882,"name":"uint256","nodeType":"ElementaryTypeName","src":"55114:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17885,"mutability":"mutable","name":"error","nameLocation":"55148:5:30","nodeType":"VariableDeclaration","scope":17888,"src":"55132:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17884,"name":"string","nodeType":"ElementaryTypeName","src":"55132:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55084:70:30"},"returnParameters":{"id":17887,"nodeType":"ParameterList","parameters":[],"src":"55168:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17898,"nodeType":"FunctionDefinition","src":"55277:84:30","nodes":[],"documentation":{"id":17889,"nodeType":"StructuredDocumentation","src":"55175:97:30","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"55286:15:30","parameters":{"id":17896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17891,"mutability":"mutable","name":"left","nameLocation":"55309:4:30","nodeType":"VariableDeclaration","scope":17898,"src":"55302:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17890,"name":"int256","nodeType":"ElementaryTypeName","src":"55302:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17893,"mutability":"mutable","name":"right","nameLocation":"55322:5:30","nodeType":"VariableDeclaration","scope":17898,"src":"55315:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17892,"name":"int256","nodeType":"ElementaryTypeName","src":"55315:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17895,"mutability":"mutable","name":"decimals","nameLocation":"55337:8:30","nodeType":"VariableDeclaration","scope":17898,"src":"55329:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17894,"name":"uint256","nodeType":"ElementaryTypeName","src":"55329:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55301:45:30"},"returnParameters":{"id":17897,"nodeType":"ParameterList","parameters":[],"src":"55360:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17910,"nodeType":"FunctionDefinition","src":"55531:107:30","nodes":[],"documentation":{"id":17899,"nodeType":"StructuredDocumentation","src":"55367:159:30","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"55540:15:30","parameters":{"id":17908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17901,"mutability":"mutable","name":"left","nameLocation":"55563:4:30","nodeType":"VariableDeclaration","scope":17910,"src":"55556:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17900,"name":"int256","nodeType":"ElementaryTypeName","src":"55556:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17903,"mutability":"mutable","name":"right","nameLocation":"55576:5:30","nodeType":"VariableDeclaration","scope":17910,"src":"55569:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17902,"name":"int256","nodeType":"ElementaryTypeName","src":"55569:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17905,"mutability":"mutable","name":"decimals","nameLocation":"55591:8:30","nodeType":"VariableDeclaration","scope":17910,"src":"55583:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17904,"name":"uint256","nodeType":"ElementaryTypeName","src":"55583:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17907,"mutability":"mutable","name":"error","nameLocation":"55617:5:30","nodeType":"VariableDeclaration","scope":17910,"src":"55601:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17906,"name":"string","nodeType":"ElementaryTypeName","src":"55601:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55555:68:30"},"returnParameters":{"id":17909,"nodeType":"ParameterList","parameters":[],"src":"55637:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17918,"nodeType":"FunctionDefinition","src":"55694:55:30","nodes":[],"documentation":{"id":17911,"nodeType":"StructuredDocumentation","src":"55644:45:30","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55703:8:30","parameters":{"id":17916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17913,"mutability":"mutable","name":"left","nameLocation":"55717:4:30","nodeType":"VariableDeclaration","scope":17918,"src":"55712:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17912,"name":"bool","nodeType":"ElementaryTypeName","src":"55712:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17915,"mutability":"mutable","name":"right","nameLocation":"55728:5:30","nodeType":"VariableDeclaration","scope":17918,"src":"55723:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17914,"name":"bool","nodeType":"ElementaryTypeName","src":"55723:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"55711:23:30"},"returnParameters":{"id":17917,"nodeType":"ParameterList","parameters":[],"src":"55748:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17928,"nodeType":"FunctionDefinition","src":"55862:78:30","nodes":[],"documentation":{"id":17919,"nodeType":"StructuredDocumentation","src":"55755:102:30","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55871:8:30","parameters":{"id":17926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17921,"mutability":"mutable","name":"left","nameLocation":"55885:4:30","nodeType":"VariableDeclaration","scope":17928,"src":"55880:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17920,"name":"bool","nodeType":"ElementaryTypeName","src":"55880:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17923,"mutability":"mutable","name":"right","nameLocation":"55896:5:30","nodeType":"VariableDeclaration","scope":17928,"src":"55891:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17922,"name":"bool","nodeType":"ElementaryTypeName","src":"55891:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17925,"mutability":"mutable","name":"error","nameLocation":"55919:5:30","nodeType":"VariableDeclaration","scope":17928,"src":"55903:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17924,"name":"string","nodeType":"ElementaryTypeName","src":"55903:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55879:46:30"},"returnParameters":{"id":17927,"nodeType":"ParameterList","parameters":[],"src":"55939:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17936,"nodeType":"FunctionDefinition","src":"55998:77:30","nodes":[],"documentation":{"id":17929,"nodeType":"StructuredDocumentation","src":"55946:47:30","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56007:8:30","parameters":{"id":17934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17931,"mutability":"mutable","name":"left","nameLocation":"56032:4:30","nodeType":"VariableDeclaration","scope":17936,"src":"56016:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17930,"name":"string","nodeType":"ElementaryTypeName","src":"56016:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17933,"mutability":"mutable","name":"right","nameLocation":"56054:5:30","nodeType":"VariableDeclaration","scope":17936,"src":"56038:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17932,"name":"string","nodeType":"ElementaryTypeName","src":"56038:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56015:45:30"},"returnParameters":{"id":17935,"nodeType":"ParameterList","parameters":[],"src":"56074:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17946,"nodeType":"FunctionDefinition","src":"56190:100:30","nodes":[],"documentation":{"id":17937,"nodeType":"StructuredDocumentation","src":"56081:104:30","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56199:8:30","parameters":{"id":17944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17939,"mutability":"mutable","name":"left","nameLocation":"56224:4:30","nodeType":"VariableDeclaration","scope":17946,"src":"56208:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17938,"name":"string","nodeType":"ElementaryTypeName","src":"56208:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17941,"mutability":"mutable","name":"right","nameLocation":"56246:5:30","nodeType":"VariableDeclaration","scope":17946,"src":"56230:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17940,"name":"string","nodeType":"ElementaryTypeName","src":"56230:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17943,"mutability":"mutable","name":"error","nameLocation":"56269:5:30","nodeType":"VariableDeclaration","scope":17946,"src":"56253:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17942,"name":"string","nodeType":"ElementaryTypeName","src":"56253:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56207:68:30"},"returnParameters":{"id":17945,"nodeType":"ParameterList","parameters":[],"src":"56289:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17954,"nodeType":"FunctionDefinition","src":"56347:75:30","nodes":[],"documentation":{"id":17947,"nodeType":"StructuredDocumentation","src":"56296:46:30","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56356:8:30","parameters":{"id":17952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17949,"mutability":"mutable","name":"left","nameLocation":"56380:4:30","nodeType":"VariableDeclaration","scope":17954,"src":"56365:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17948,"name":"bytes","nodeType":"ElementaryTypeName","src":"56365:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17951,"mutability":"mutable","name":"right","nameLocation":"56401:5:30","nodeType":"VariableDeclaration","scope":17954,"src":"56386:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17950,"name":"bytes","nodeType":"ElementaryTypeName","src":"56386:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"56364:43:30"},"returnParameters":{"id":17953,"nodeType":"ParameterList","parameters":[],"src":"56421:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17964,"nodeType":"FunctionDefinition","src":"56536:98:30","nodes":[],"documentation":{"id":17955,"nodeType":"StructuredDocumentation","src":"56428:103:30","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56545:8:30","parameters":{"id":17962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17957,"mutability":"mutable","name":"left","nameLocation":"56569:4:30","nodeType":"VariableDeclaration","scope":17964,"src":"56554:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17956,"name":"bytes","nodeType":"ElementaryTypeName","src":"56554:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17959,"mutability":"mutable","name":"right","nameLocation":"56590:5:30","nodeType":"VariableDeclaration","scope":17964,"src":"56575:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17958,"name":"bytes","nodeType":"ElementaryTypeName","src":"56575:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17961,"mutability":"mutable","name":"error","nameLocation":"56613:5:30","nodeType":"VariableDeclaration","scope":17964,"src":"56597:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17960,"name":"string","nodeType":"ElementaryTypeName","src":"56597:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56553:66:30"},"returnParameters":{"id":17963,"nodeType":"ParameterList","parameters":[],"src":"56633:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17974,"nodeType":"FunctionDefinition","src":"56700:77:30","nodes":[],"documentation":{"id":17965,"nodeType":"StructuredDocumentation","src":"56640:55:30","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56709:8:30","parameters":{"id":17972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17968,"mutability":"mutable","name":"left","nameLocation":"56734:4:30","nodeType":"VariableDeclaration","scope":17974,"src":"56718:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17966,"name":"bool","nodeType":"ElementaryTypeName","src":"56718:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17967,"nodeType":"ArrayTypeName","src":"56718:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17971,"mutability":"mutable","name":"right","nameLocation":"56756:5:30","nodeType":"VariableDeclaration","scope":17974,"src":"56740:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17969,"name":"bool","nodeType":"ElementaryTypeName","src":"56740:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17970,"nodeType":"ArrayTypeName","src":"56740:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"56717:45:30"},"returnParameters":{"id":17973,"nodeType":"ParameterList","parameters":[],"src":"56776:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17986,"nodeType":"FunctionDefinition","src":"56900:100:30","nodes":[],"documentation":{"id":17975,"nodeType":"StructuredDocumentation","src":"56783:112:30","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56909:8:30","parameters":{"id":17984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17978,"mutability":"mutable","name":"left","nameLocation":"56934:4:30","nodeType":"VariableDeclaration","scope":17986,"src":"56918:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17976,"name":"bool","nodeType":"ElementaryTypeName","src":"56918:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17977,"nodeType":"ArrayTypeName","src":"56918:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17981,"mutability":"mutable","name":"right","nameLocation":"56956:5:30","nodeType":"VariableDeclaration","scope":17986,"src":"56940:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17979,"name":"bool","nodeType":"ElementaryTypeName","src":"56940:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17980,"nodeType":"ArrayTypeName","src":"56940:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17983,"mutability":"mutable","name":"error","nameLocation":"56979:5:30","nodeType":"VariableDeclaration","scope":17986,"src":"56963:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17982,"name":"string","nodeType":"ElementaryTypeName","src":"56963:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56917:68:30"},"returnParameters":{"id":17985,"nodeType":"ParameterList","parameters":[],"src":"56999:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17996,"nodeType":"FunctionDefinition","src":"57068:83:30","nodes":[],"documentation":{"id":17987,"nodeType":"StructuredDocumentation","src":"57006:57:30","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57077:8:30","parameters":{"id":17994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17990,"mutability":"mutable","name":"left","nameLocation":"57105:4:30","nodeType":"VariableDeclaration","scope":17996,"src":"57086:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17988,"name":"uint256","nodeType":"ElementaryTypeName","src":"57086:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17989,"nodeType":"ArrayTypeName","src":"57086:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":17993,"mutability":"mutable","name":"right","nameLocation":"57130:5:30","nodeType":"VariableDeclaration","scope":17996,"src":"57111:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17991,"name":"uint256","nodeType":"ElementaryTypeName","src":"57111:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17992,"nodeType":"ArrayTypeName","src":"57111:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"57085:51:30"},"returnParameters":{"id":17995,"nodeType":"ParameterList","parameters":[],"src":"57150:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18008,"nodeType":"FunctionDefinition","src":"57277:106:30","nodes":[],"documentation":{"id":17997,"nodeType":"StructuredDocumentation","src":"57157:115:30","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57286:8:30","parameters":{"id":18006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18000,"mutability":"mutable","name":"left","nameLocation":"57314:4:30","nodeType":"VariableDeclaration","scope":18008,"src":"57295:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17998,"name":"uint256","nodeType":"ElementaryTypeName","src":"57295:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17999,"nodeType":"ArrayTypeName","src":"57295:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18003,"mutability":"mutable","name":"right","nameLocation":"57339:5:30","nodeType":"VariableDeclaration","scope":18008,"src":"57320:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18001,"name":"uint256","nodeType":"ElementaryTypeName","src":"57320:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18002,"nodeType":"ArrayTypeName","src":"57320:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18005,"mutability":"mutable","name":"error","nameLocation":"57362:5:30","nodeType":"VariableDeclaration","scope":18008,"src":"57346:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18004,"name":"string","nodeType":"ElementaryTypeName","src":"57346:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57294:74:30"},"returnParameters":{"id":18007,"nodeType":"ParameterList","parameters":[],"src":"57382:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18018,"nodeType":"FunctionDefinition","src":"57451:81:30","nodes":[],"documentation":{"id":18009,"nodeType":"StructuredDocumentation","src":"57389:57:30","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57460:8:30","parameters":{"id":18016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18012,"mutability":"mutable","name":"left","nameLocation":"57487:4:30","nodeType":"VariableDeclaration","scope":18018,"src":"57469:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18010,"name":"int256","nodeType":"ElementaryTypeName","src":"57469:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18011,"nodeType":"ArrayTypeName","src":"57469:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18015,"mutability":"mutable","name":"right","nameLocation":"57511:5:30","nodeType":"VariableDeclaration","scope":18018,"src":"57493:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18013,"name":"int256","nodeType":"ElementaryTypeName","src":"57493:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18014,"nodeType":"ArrayTypeName","src":"57493:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"57468:49:30"},"returnParameters":{"id":18017,"nodeType":"ParameterList","parameters":[],"src":"57531:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18030,"nodeType":"FunctionDefinition","src":"57657:104:30","nodes":[],"documentation":{"id":18019,"nodeType":"StructuredDocumentation","src":"57538:114:30","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57666:8:30","parameters":{"id":18028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18022,"mutability":"mutable","name":"left","nameLocation":"57693:4:30","nodeType":"VariableDeclaration","scope":18030,"src":"57675:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18020,"name":"int256","nodeType":"ElementaryTypeName","src":"57675:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18021,"nodeType":"ArrayTypeName","src":"57675:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18025,"mutability":"mutable","name":"right","nameLocation":"57717:5:30","nodeType":"VariableDeclaration","scope":18030,"src":"57699:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18023,"name":"int256","nodeType":"ElementaryTypeName","src":"57699:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18024,"nodeType":"ArrayTypeName","src":"57699:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18027,"mutability":"mutable","name":"error","nameLocation":"57740:5:30","nodeType":"VariableDeclaration","scope":18030,"src":"57724:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18026,"name":"string","nodeType":"ElementaryTypeName","src":"57724:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57674:72:30"},"returnParameters":{"id":18029,"nodeType":"ParameterList","parameters":[],"src":"57760:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18038,"nodeType":"FunctionDefinition","src":"57820:61:30","nodes":[],"documentation":{"id":18031,"nodeType":"StructuredDocumentation","src":"57767:48:30","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57829:8:30","parameters":{"id":18036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18033,"mutability":"mutable","name":"left","nameLocation":"57846:4:30","nodeType":"VariableDeclaration","scope":18038,"src":"57838:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18032,"name":"uint256","nodeType":"ElementaryTypeName","src":"57838:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18035,"mutability":"mutable","name":"right","nameLocation":"57860:5:30","nodeType":"VariableDeclaration","scope":18038,"src":"57852:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18034,"name":"uint256","nodeType":"ElementaryTypeName","src":"57852:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57837:29:30"},"returnParameters":{"id":18037,"nodeType":"ParameterList","parameters":[],"src":"57880:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18048,"nodeType":"FunctionDefinition","src":"57950:83:30","nodes":[],"documentation":{"id":18039,"nodeType":"StructuredDocumentation","src":"57887:58:30","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57959:8:30","parameters":{"id":18046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18042,"mutability":"mutable","name":"left","nameLocation":"57987:4:30","nodeType":"VariableDeclaration","scope":18048,"src":"57968:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18040,"name":"address","nodeType":"ElementaryTypeName","src":"57968:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18041,"nodeType":"ArrayTypeName","src":"57968:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18045,"mutability":"mutable","name":"right","nameLocation":"58012:5:30","nodeType":"VariableDeclaration","scope":18048,"src":"57993:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18043,"name":"address","nodeType":"ElementaryTypeName","src":"57993:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18044,"nodeType":"ArrayTypeName","src":"57993:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"57967:51:30"},"returnParameters":{"id":18047,"nodeType":"ParameterList","parameters":[],"src":"58032:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18060,"nodeType":"FunctionDefinition","src":"58159:106:30","nodes":[],"documentation":{"id":18049,"nodeType":"StructuredDocumentation","src":"58039:115:30","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58168:8:30","parameters":{"id":18058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18052,"mutability":"mutable","name":"left","nameLocation":"58196:4:30","nodeType":"VariableDeclaration","scope":18060,"src":"58177:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18050,"name":"address","nodeType":"ElementaryTypeName","src":"58177:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18051,"nodeType":"ArrayTypeName","src":"58177:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18055,"mutability":"mutable","name":"right","nameLocation":"58221:5:30","nodeType":"VariableDeclaration","scope":18060,"src":"58202:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18053,"name":"address","nodeType":"ElementaryTypeName","src":"58202:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18054,"nodeType":"ArrayTypeName","src":"58202:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18057,"mutability":"mutable","name":"error","nameLocation":"58244:5:30","nodeType":"VariableDeclaration","scope":18060,"src":"58228:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18056,"name":"string","nodeType":"ElementaryTypeName","src":"58228:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58176:74:30"},"returnParameters":{"id":18059,"nodeType":"ParameterList","parameters":[],"src":"58264:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18070,"nodeType":"FunctionDefinition","src":"58334:83:30","nodes":[],"documentation":{"id":18061,"nodeType":"StructuredDocumentation","src":"58271:58:30","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58343:8:30","parameters":{"id":18068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18064,"mutability":"mutable","name":"left","nameLocation":"58371:4:30","nodeType":"VariableDeclaration","scope":18070,"src":"58352:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58352:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18063,"nodeType":"ArrayTypeName","src":"58352:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18067,"mutability":"mutable","name":"right","nameLocation":"58396:5:30","nodeType":"VariableDeclaration","scope":18070,"src":"58377:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58377:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18066,"nodeType":"ArrayTypeName","src":"58377:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"58351:51:30"},"returnParameters":{"id":18069,"nodeType":"ParameterList","parameters":[],"src":"58416:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18082,"nodeType":"FunctionDefinition","src":"58543:106:30","nodes":[],"documentation":{"id":18071,"nodeType":"StructuredDocumentation","src":"58423:115:30","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58552:8:30","parameters":{"id":18080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18074,"mutability":"mutable","name":"left","nameLocation":"58580:4:30","nodeType":"VariableDeclaration","scope":18082,"src":"58561:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58561:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18073,"nodeType":"ArrayTypeName","src":"58561:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18077,"mutability":"mutable","name":"right","nameLocation":"58605:5:30","nodeType":"VariableDeclaration","scope":18082,"src":"58586:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58586:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18076,"nodeType":"ArrayTypeName","src":"58586:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18079,"mutability":"mutable","name":"error","nameLocation":"58628:5:30","nodeType":"VariableDeclaration","scope":18082,"src":"58612:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18078,"name":"string","nodeType":"ElementaryTypeName","src":"58612:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58560:74:30"},"returnParameters":{"id":18081,"nodeType":"ParameterList","parameters":[],"src":"58648:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18092,"nodeType":"FunctionDefinition","src":"58717:81:30","nodes":[],"documentation":{"id":18083,"nodeType":"StructuredDocumentation","src":"58655:57:30","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58726:8:30","parameters":{"id":18090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18086,"mutability":"mutable","name":"left","nameLocation":"58753:4:30","nodeType":"VariableDeclaration","scope":18092,"src":"58735:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18084,"name":"string","nodeType":"ElementaryTypeName","src":"58735:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18085,"nodeType":"ArrayTypeName","src":"58735:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18089,"mutability":"mutable","name":"right","nameLocation":"58777:5:30","nodeType":"VariableDeclaration","scope":18092,"src":"58759:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18087,"name":"string","nodeType":"ElementaryTypeName","src":"58759:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18088,"nodeType":"ArrayTypeName","src":"58759:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"58734:49:30"},"returnParameters":{"id":18091,"nodeType":"ParameterList","parameters":[],"src":"58797:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18104,"nodeType":"FunctionDefinition","src":"58923:104:30","nodes":[],"documentation":{"id":18093,"nodeType":"StructuredDocumentation","src":"58804:114:30","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58932:8:30","parameters":{"id":18102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18096,"mutability":"mutable","name":"left","nameLocation":"58959:4:30","nodeType":"VariableDeclaration","scope":18104,"src":"58941:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18094,"name":"string","nodeType":"ElementaryTypeName","src":"58941:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18095,"nodeType":"ArrayTypeName","src":"58941:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18099,"mutability":"mutable","name":"right","nameLocation":"58983:5:30","nodeType":"VariableDeclaration","scope":18104,"src":"58965:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18097,"name":"string","nodeType":"ElementaryTypeName","src":"58965:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18098,"nodeType":"ArrayTypeName","src":"58965:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18101,"mutability":"mutable","name":"error","nameLocation":"59006:5:30","nodeType":"VariableDeclaration","scope":18104,"src":"58990:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18100,"name":"string","nodeType":"ElementaryTypeName","src":"58990:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58940:72:30"},"returnParameters":{"id":18103,"nodeType":"ParameterList","parameters":[],"src":"59026:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18114,"nodeType":"FunctionDefinition","src":"59094:79:30","nodes":[],"documentation":{"id":18105,"nodeType":"StructuredDocumentation","src":"59033:56:30","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59103:8:30","parameters":{"id":18112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18108,"mutability":"mutable","name":"left","nameLocation":"59129:4:30","nodeType":"VariableDeclaration","scope":18114,"src":"59112:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18106,"name":"bytes","nodeType":"ElementaryTypeName","src":"59112:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18107,"nodeType":"ArrayTypeName","src":"59112:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18111,"mutability":"mutable","name":"right","nameLocation":"59152:5:30","nodeType":"VariableDeclaration","scope":18114,"src":"59135:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18109,"name":"bytes","nodeType":"ElementaryTypeName","src":"59135:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18110,"nodeType":"ArrayTypeName","src":"59135:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"59111:47:30"},"returnParameters":{"id":18113,"nodeType":"ParameterList","parameters":[],"src":"59172:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18126,"nodeType":"FunctionDefinition","src":"59297:102:30","nodes":[],"documentation":{"id":18115,"nodeType":"StructuredDocumentation","src":"59179:113:30","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59306:8:30","parameters":{"id":18124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18118,"mutability":"mutable","name":"left","nameLocation":"59332:4:30","nodeType":"VariableDeclaration","scope":18126,"src":"59315:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18116,"name":"bytes","nodeType":"ElementaryTypeName","src":"59315:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18117,"nodeType":"ArrayTypeName","src":"59315:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18121,"mutability":"mutable","name":"right","nameLocation":"59355:5:30","nodeType":"VariableDeclaration","scope":18126,"src":"59338:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18119,"name":"bytes","nodeType":"ElementaryTypeName","src":"59338:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18120,"nodeType":"ArrayTypeName","src":"59338:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18123,"mutability":"mutable","name":"error","nameLocation":"59378:5:30","nodeType":"VariableDeclaration","scope":18126,"src":"59362:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18122,"name":"string","nodeType":"ElementaryTypeName","src":"59362:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59314:70:30"},"returnParameters":{"id":18125,"nodeType":"ParameterList","parameters":[],"src":"59398:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18136,"nodeType":"FunctionDefinition","src":"59515:84:30","nodes":[],"documentation":{"id":18127,"nodeType":"StructuredDocumentation","src":"59405:105:30","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59524:8:30","parameters":{"id":18134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18129,"mutability":"mutable","name":"left","nameLocation":"59541:4:30","nodeType":"VariableDeclaration","scope":18136,"src":"59533:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18128,"name":"uint256","nodeType":"ElementaryTypeName","src":"59533:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18131,"mutability":"mutable","name":"right","nameLocation":"59555:5:30","nodeType":"VariableDeclaration","scope":18136,"src":"59547:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18130,"name":"uint256","nodeType":"ElementaryTypeName","src":"59547:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18133,"mutability":"mutable","name":"error","nameLocation":"59578:5:30","nodeType":"VariableDeclaration","scope":18136,"src":"59562:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18132,"name":"string","nodeType":"ElementaryTypeName","src":"59562:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59532:52:30"},"returnParameters":{"id":18135,"nodeType":"ParameterList","parameters":[],"src":"59598:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18144,"nodeType":"FunctionDefinition","src":"59657:59:30","nodes":[],"documentation":{"id":18137,"nodeType":"StructuredDocumentation","src":"59605:47:30","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59666:8:30","parameters":{"id":18142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18139,"mutability":"mutable","name":"left","nameLocation":"59682:4:30","nodeType":"VariableDeclaration","scope":18144,"src":"59675:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18138,"name":"int256","nodeType":"ElementaryTypeName","src":"59675:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18141,"mutability":"mutable","name":"right","nameLocation":"59695:5:30","nodeType":"VariableDeclaration","scope":18144,"src":"59688:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18140,"name":"int256","nodeType":"ElementaryTypeName","src":"59688:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"59674:27:30"},"returnParameters":{"id":18143,"nodeType":"ParameterList","parameters":[],"src":"59715:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18154,"nodeType":"FunctionDefinition","src":"59831:82:30","nodes":[],"documentation":{"id":18145,"nodeType":"StructuredDocumentation","src":"59722:104:30","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59840:8:30","parameters":{"id":18152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18147,"mutability":"mutable","name":"left","nameLocation":"59856:4:30","nodeType":"VariableDeclaration","scope":18154,"src":"59849:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18146,"name":"int256","nodeType":"ElementaryTypeName","src":"59849:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18149,"mutability":"mutable","name":"right","nameLocation":"59869:5:30","nodeType":"VariableDeclaration","scope":18154,"src":"59862:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18148,"name":"int256","nodeType":"ElementaryTypeName","src":"59862:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18151,"mutability":"mutable","name":"error","nameLocation":"59892:5:30","nodeType":"VariableDeclaration","scope":18154,"src":"59876:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18150,"name":"string","nodeType":"ElementaryTypeName","src":"59876:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59848:50:30"},"returnParameters":{"id":18153,"nodeType":"ParameterList","parameters":[],"src":"59912:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18162,"nodeType":"FunctionDefinition","src":"59972:61:30","nodes":[],"documentation":{"id":18155,"nodeType":"StructuredDocumentation","src":"59919:48:30","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59981:8:30","parameters":{"id":18160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18157,"mutability":"mutable","name":"left","nameLocation":"59998:4:30","nodeType":"VariableDeclaration","scope":18162,"src":"59990:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18156,"name":"address","nodeType":"ElementaryTypeName","src":"59990:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18159,"mutability":"mutable","name":"right","nameLocation":"60012:5:30","nodeType":"VariableDeclaration","scope":18162,"src":"60004:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18158,"name":"address","nodeType":"ElementaryTypeName","src":"60004:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"59989:29:30"},"returnParameters":{"id":18161,"nodeType":"ParameterList","parameters":[],"src":"60032:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18172,"nodeType":"FunctionDefinition","src":"60149:84:30","nodes":[],"documentation":{"id":18163,"nodeType":"StructuredDocumentation","src":"60039:105:30","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60158:8:30","parameters":{"id":18170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18165,"mutability":"mutable","name":"left","nameLocation":"60175:4:30","nodeType":"VariableDeclaration","scope":18172,"src":"60167:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18164,"name":"address","nodeType":"ElementaryTypeName","src":"60167:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18167,"mutability":"mutable","name":"right","nameLocation":"60189:5:30","nodeType":"VariableDeclaration","scope":18172,"src":"60181:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18166,"name":"address","nodeType":"ElementaryTypeName","src":"60181:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18169,"mutability":"mutable","name":"error","nameLocation":"60212:5:30","nodeType":"VariableDeclaration","scope":18172,"src":"60196:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18168,"name":"string","nodeType":"ElementaryTypeName","src":"60196:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60166:52:30"},"returnParameters":{"id":18171,"nodeType":"ParameterList","parameters":[],"src":"60232:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18180,"nodeType":"FunctionDefinition","src":"60292:61:30","nodes":[],"documentation":{"id":18173,"nodeType":"StructuredDocumentation","src":"60239:48:30","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60301:8:30","parameters":{"id":18178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18175,"mutability":"mutable","name":"left","nameLocation":"60318:4:30","nodeType":"VariableDeclaration","scope":18180,"src":"60310:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60310:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18177,"mutability":"mutable","name":"right","nameLocation":"60332:5:30","nodeType":"VariableDeclaration","scope":18180,"src":"60324:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60324:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"60309:29:30"},"returnParameters":{"id":18179,"nodeType":"ParameterList","parameters":[],"src":"60352:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18190,"nodeType":"FunctionDefinition","src":"60469:84:30","nodes":[],"documentation":{"id":18181,"nodeType":"StructuredDocumentation","src":"60359:105:30","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60478:8:30","parameters":{"id":18188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18183,"mutability":"mutable","name":"left","nameLocation":"60495:4:30","nodeType":"VariableDeclaration","scope":18190,"src":"60487:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60487:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18185,"mutability":"mutable","name":"right","nameLocation":"60509:5:30","nodeType":"VariableDeclaration","scope":18190,"src":"60501:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60501:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18187,"mutability":"mutable","name":"error","nameLocation":"60532:5:30","nodeType":"VariableDeclaration","scope":18190,"src":"60516:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18186,"name":"string","nodeType":"ElementaryTypeName","src":"60516:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60486:52:30"},"returnParameters":{"id":18189,"nodeType":"ParameterList","parameters":[],"src":"60552:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18196,"nodeType":"FunctionDefinition","src":"60610:51:30","nodes":[],"documentation":{"id":18191,"nodeType":"StructuredDocumentation","src":"60559:46:30","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"60619:11:30","parameters":{"id":18194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18193,"mutability":"mutable","name":"condition","nameLocation":"60636:9:30","nodeType":"VariableDeclaration","scope":18196,"src":"60631:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18192,"name":"bool","nodeType":"ElementaryTypeName","src":"60631:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"60630:16:30"},"returnParameters":{"id":18195,"nodeType":"ParameterList","parameters":[],"src":"60660:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18204,"nodeType":"FunctionDefinition","src":"60775:74:30","nodes":[],"documentation":{"id":18197,"nodeType":"StructuredDocumentation","src":"60667:103:30","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"60784:11:30","parameters":{"id":18202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18199,"mutability":"mutable","name":"condition","nameLocation":"60801:9:30","nodeType":"VariableDeclaration","scope":18204,"src":"60796:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18198,"name":"bool","nodeType":"ElementaryTypeName","src":"60796:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18201,"mutability":"mutable","name":"error","nameLocation":"60828:5:30","nodeType":"VariableDeclaration","scope":18204,"src":"60812:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18200,"name":"string","nodeType":"ElementaryTypeName","src":"60812:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60795:39:30"},"returnParameters":{"id":18203,"nodeType":"ParameterList","parameters":[],"src":"60848:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18214,"nodeType":"FunctionDefinition","src":"61010:86:30","nodes":[],"documentation":{"id":18205,"nodeType":"StructuredDocumentation","src":"60855:150:30","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"61019:15:30","parameters":{"id":18212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18207,"mutability":"mutable","name":"left","nameLocation":"61043:4:30","nodeType":"VariableDeclaration","scope":18214,"src":"61035:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18206,"name":"uint256","nodeType":"ElementaryTypeName","src":"61035:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18209,"mutability":"mutable","name":"right","nameLocation":"61057:5:30","nodeType":"VariableDeclaration","scope":18214,"src":"61049:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18208,"name":"uint256","nodeType":"ElementaryTypeName","src":"61049:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18211,"mutability":"mutable","name":"decimals","nameLocation":"61072:8:30","nodeType":"VariableDeclaration","scope":18214,"src":"61064:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18210,"name":"uint256","nodeType":"ElementaryTypeName","src":"61064:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61034:47:30"},"returnParameters":{"id":18213,"nodeType":"ParameterList","parameters":[],"src":"61095:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18226,"nodeType":"FunctionDefinition","src":"61311:109:30","nodes":[],"documentation":{"id":18215,"nodeType":"StructuredDocumentation","src":"61102:204:30","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"61320:15:30","parameters":{"id":18224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18217,"mutability":"mutable","name":"left","nameLocation":"61344:4:30","nodeType":"VariableDeclaration","scope":18226,"src":"61336:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18216,"name":"uint256","nodeType":"ElementaryTypeName","src":"61336:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18219,"mutability":"mutable","name":"right","nameLocation":"61358:5:30","nodeType":"VariableDeclaration","scope":18226,"src":"61350:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18218,"name":"uint256","nodeType":"ElementaryTypeName","src":"61350:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18221,"mutability":"mutable","name":"decimals","nameLocation":"61373:8:30","nodeType":"VariableDeclaration","scope":18226,"src":"61365:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18220,"name":"uint256","nodeType":"ElementaryTypeName","src":"61365:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18223,"mutability":"mutable","name":"error","nameLocation":"61399:5:30","nodeType":"VariableDeclaration","scope":18226,"src":"61383:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18222,"name":"string","nodeType":"ElementaryTypeName","src":"61383:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61335:70:30"},"returnParameters":{"id":18225,"nodeType":"ParameterList","parameters":[],"src":"61419:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18236,"nodeType":"FunctionDefinition","src":"61580:84:30","nodes":[],"documentation":{"id":18227,"nodeType":"StructuredDocumentation","src":"61426:149:30","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"61589:15:30","parameters":{"id":18234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18229,"mutability":"mutable","name":"left","nameLocation":"61612:4:30","nodeType":"VariableDeclaration","scope":18236,"src":"61605:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18228,"name":"int256","nodeType":"ElementaryTypeName","src":"61605:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18231,"mutability":"mutable","name":"right","nameLocation":"61625:5:30","nodeType":"VariableDeclaration","scope":18236,"src":"61618:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18230,"name":"int256","nodeType":"ElementaryTypeName","src":"61618:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18233,"mutability":"mutable","name":"decimals","nameLocation":"61640:8:30","nodeType":"VariableDeclaration","scope":18236,"src":"61632:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18232,"name":"uint256","nodeType":"ElementaryTypeName","src":"61632:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61604:45:30"},"returnParameters":{"id":18235,"nodeType":"ParameterList","parameters":[],"src":"61663:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18248,"nodeType":"FunctionDefinition","src":"61878:107:30","nodes":[],"documentation":{"id":18237,"nodeType":"StructuredDocumentation","src":"61670:203:30","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"61887:15:30","parameters":{"id":18246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18239,"mutability":"mutable","name":"left","nameLocation":"61910:4:30","nodeType":"VariableDeclaration","scope":18248,"src":"61903:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18238,"name":"int256","nodeType":"ElementaryTypeName","src":"61903:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18241,"mutability":"mutable","name":"right","nameLocation":"61923:5:30","nodeType":"VariableDeclaration","scope":18248,"src":"61916:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18240,"name":"int256","nodeType":"ElementaryTypeName","src":"61916:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18243,"mutability":"mutable","name":"decimals","nameLocation":"61938:8:30","nodeType":"VariableDeclaration","scope":18248,"src":"61930:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18242,"name":"uint256","nodeType":"ElementaryTypeName","src":"61930:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18245,"mutability":"mutable","name":"error","nameLocation":"61964:5:30","nodeType":"VariableDeclaration","scope":18248,"src":"61948:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18244,"name":"string","nodeType":"ElementaryTypeName","src":"61948:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61902:68:30"},"returnParameters":{"id":18247,"nodeType":"ParameterList","parameters":[],"src":"61984:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18256,"nodeType":"FunctionDefinition","src":"62089:61:30","nodes":[],"documentation":{"id":18249,"nodeType":"StructuredDocumentation","src":"61991:93:30","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"62098:8:30","parameters":{"id":18254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18251,"mutability":"mutable","name":"left","nameLocation":"62115:4:30","nodeType":"VariableDeclaration","scope":18256,"src":"62107:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18250,"name":"uint256","nodeType":"ElementaryTypeName","src":"62107:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18253,"mutability":"mutable","name":"right","nameLocation":"62129:5:30","nodeType":"VariableDeclaration","scope":18256,"src":"62121:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18252,"name":"uint256","nodeType":"ElementaryTypeName","src":"62121:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62106:29:30"},"returnParameters":{"id":18255,"nodeType":"ParameterList","parameters":[],"src":"62149:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18266,"nodeType":"FunctionDefinition","src":"62316:84:30","nodes":[],"documentation":{"id":18257,"nodeType":"StructuredDocumentation","src":"62156:155:30","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"62325:8:30","parameters":{"id":18264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18259,"mutability":"mutable","name":"left","nameLocation":"62342:4:30","nodeType":"VariableDeclaration","scope":18266,"src":"62334:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18258,"name":"uint256","nodeType":"ElementaryTypeName","src":"62334:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18261,"mutability":"mutable","name":"right","nameLocation":"62356:5:30","nodeType":"VariableDeclaration","scope":18266,"src":"62348:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18260,"name":"uint256","nodeType":"ElementaryTypeName","src":"62348:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18263,"mutability":"mutable","name":"error","nameLocation":"62379:5:30","nodeType":"VariableDeclaration","scope":18266,"src":"62363:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18262,"name":"string","nodeType":"ElementaryTypeName","src":"62363:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62333:52:30"},"returnParameters":{"id":18265,"nodeType":"ParameterList","parameters":[],"src":"62399:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18274,"nodeType":"FunctionDefinition","src":"62503:59:30","nodes":[],"documentation":{"id":18267,"nodeType":"StructuredDocumentation","src":"62406:92:30","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"62512:8:30","parameters":{"id":18272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18269,"mutability":"mutable","name":"left","nameLocation":"62528:4:30","nodeType":"VariableDeclaration","scope":18274,"src":"62521:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18268,"name":"int256","nodeType":"ElementaryTypeName","src":"62521:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18271,"mutability":"mutable","name":"right","nameLocation":"62541:5:30","nodeType":"VariableDeclaration","scope":18274,"src":"62534:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18270,"name":"int256","nodeType":"ElementaryTypeName","src":"62534:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"62520:27:30"},"returnParameters":{"id":18273,"nodeType":"ParameterList","parameters":[],"src":"62561:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18284,"nodeType":"FunctionDefinition","src":"62727:82:30","nodes":[],"documentation":{"id":18275,"nodeType":"StructuredDocumentation","src":"62568:154:30","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"62736:8:30","parameters":{"id":18282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18277,"mutability":"mutable","name":"left","nameLocation":"62752:4:30","nodeType":"VariableDeclaration","scope":18284,"src":"62745:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18276,"name":"int256","nodeType":"ElementaryTypeName","src":"62745:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18279,"mutability":"mutable","name":"right","nameLocation":"62765:5:30","nodeType":"VariableDeclaration","scope":18284,"src":"62758:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18278,"name":"int256","nodeType":"ElementaryTypeName","src":"62758:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18281,"mutability":"mutable","name":"error","nameLocation":"62788:5:30","nodeType":"VariableDeclaration","scope":18284,"src":"62772:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18280,"name":"string","nodeType":"ElementaryTypeName","src":"62772:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62744:50:30"},"returnParameters":{"id":18283,"nodeType":"ParameterList","parameters":[],"src":"62808:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18294,"nodeType":"FunctionDefinition","src":"62958:86:30","nodes":[],"documentation":{"id":18285,"nodeType":"StructuredDocumentation","src":"62815:138:30","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"62967:15:30","parameters":{"id":18292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18287,"mutability":"mutable","name":"left","nameLocation":"62991:4:30","nodeType":"VariableDeclaration","scope":18294,"src":"62983:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18286,"name":"uint256","nodeType":"ElementaryTypeName","src":"62983:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18289,"mutability":"mutable","name":"right","nameLocation":"63005:5:30","nodeType":"VariableDeclaration","scope":18294,"src":"62997:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18288,"name":"uint256","nodeType":"ElementaryTypeName","src":"62997:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18291,"mutability":"mutable","name":"decimals","nameLocation":"63020:8:30","nodeType":"VariableDeclaration","scope":18294,"src":"63012:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18290,"name":"uint256","nodeType":"ElementaryTypeName","src":"63012:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62982:47:30"},"returnParameters":{"id":18293,"nodeType":"ParameterList","parameters":[],"src":"63043:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18306,"nodeType":"FunctionDefinition","src":"63247:109:30","nodes":[],"documentation":{"id":18295,"nodeType":"StructuredDocumentation","src":"63050:192:30","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"63256:15:30","parameters":{"id":18304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18297,"mutability":"mutable","name":"left","nameLocation":"63280:4:30","nodeType":"VariableDeclaration","scope":18306,"src":"63272:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18296,"name":"uint256","nodeType":"ElementaryTypeName","src":"63272:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18299,"mutability":"mutable","name":"right","nameLocation":"63294:5:30","nodeType":"VariableDeclaration","scope":18306,"src":"63286:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18298,"name":"uint256","nodeType":"ElementaryTypeName","src":"63286:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18301,"mutability":"mutable","name":"decimals","nameLocation":"63309:8:30","nodeType":"VariableDeclaration","scope":18306,"src":"63301:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18300,"name":"uint256","nodeType":"ElementaryTypeName","src":"63301:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18303,"mutability":"mutable","name":"error","nameLocation":"63335:5:30","nodeType":"VariableDeclaration","scope":18306,"src":"63319:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18302,"name":"string","nodeType":"ElementaryTypeName","src":"63319:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63271:70:30"},"returnParameters":{"id":18305,"nodeType":"ParameterList","parameters":[],"src":"63355:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18316,"nodeType":"FunctionDefinition","src":"63504:84:30","nodes":[],"documentation":{"id":18307,"nodeType":"StructuredDocumentation","src":"63362:137:30","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"63513:15:30","parameters":{"id":18314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18309,"mutability":"mutable","name":"left","nameLocation":"63536:4:30","nodeType":"VariableDeclaration","scope":18316,"src":"63529:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18308,"name":"int256","nodeType":"ElementaryTypeName","src":"63529:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18311,"mutability":"mutable","name":"right","nameLocation":"63549:5:30","nodeType":"VariableDeclaration","scope":18316,"src":"63542:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18310,"name":"int256","nodeType":"ElementaryTypeName","src":"63542:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18313,"mutability":"mutable","name":"decimals","nameLocation":"63564:8:30","nodeType":"VariableDeclaration","scope":18316,"src":"63556:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18312,"name":"uint256","nodeType":"ElementaryTypeName","src":"63556:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63528:45:30"},"returnParameters":{"id":18315,"nodeType":"ParameterList","parameters":[],"src":"63587:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18328,"nodeType":"FunctionDefinition","src":"63790:107:30","nodes":[],"documentation":{"id":18317,"nodeType":"StructuredDocumentation","src":"63594:191:30","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"63799:15:30","parameters":{"id":18326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18319,"mutability":"mutable","name":"left","nameLocation":"63822:4:30","nodeType":"VariableDeclaration","scope":18328,"src":"63815:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18318,"name":"int256","nodeType":"ElementaryTypeName","src":"63815:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18321,"mutability":"mutable","name":"right","nameLocation":"63835:5:30","nodeType":"VariableDeclaration","scope":18328,"src":"63828:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18320,"name":"int256","nodeType":"ElementaryTypeName","src":"63828:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18323,"mutability":"mutable","name":"decimals","nameLocation":"63850:8:30","nodeType":"VariableDeclaration","scope":18328,"src":"63842:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18322,"name":"uint256","nodeType":"ElementaryTypeName","src":"63842:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18325,"mutability":"mutable","name":"error","nameLocation":"63876:5:30","nodeType":"VariableDeclaration","scope":18328,"src":"63860:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18324,"name":"string","nodeType":"ElementaryTypeName","src":"63860:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63814:68:30"},"returnParameters":{"id":18327,"nodeType":"ParameterList","parameters":[],"src":"63896:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18336,"nodeType":"FunctionDefinition","src":"63989:61:30","nodes":[],"documentation":{"id":18329,"nodeType":"StructuredDocumentation","src":"63903:81:30","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"63998:8:30","parameters":{"id":18334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18331,"mutability":"mutable","name":"left","nameLocation":"64015:4:30","nodeType":"VariableDeclaration","scope":18336,"src":"64007:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18330,"name":"uint256","nodeType":"ElementaryTypeName","src":"64007:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18333,"mutability":"mutable","name":"right","nameLocation":"64029:5:30","nodeType":"VariableDeclaration","scope":18336,"src":"64021:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18332,"name":"uint256","nodeType":"ElementaryTypeName","src":"64021:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64006:29:30"},"returnParameters":{"id":18335,"nodeType":"ParameterList","parameters":[],"src":"64049:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18346,"nodeType":"FunctionDefinition","src":"64204:84:30","nodes":[],"documentation":{"id":18337,"nodeType":"StructuredDocumentation","src":"64056:143:30","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"64213:8:30","parameters":{"id":18344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18339,"mutability":"mutable","name":"left","nameLocation":"64230:4:30","nodeType":"VariableDeclaration","scope":18346,"src":"64222:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18338,"name":"uint256","nodeType":"ElementaryTypeName","src":"64222:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18341,"mutability":"mutable","name":"right","nameLocation":"64244:5:30","nodeType":"VariableDeclaration","scope":18346,"src":"64236:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18340,"name":"uint256","nodeType":"ElementaryTypeName","src":"64236:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18343,"mutability":"mutable","name":"error","nameLocation":"64267:5:30","nodeType":"VariableDeclaration","scope":18346,"src":"64251:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18342,"name":"string","nodeType":"ElementaryTypeName","src":"64251:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64221:52:30"},"returnParameters":{"id":18345,"nodeType":"ParameterList","parameters":[],"src":"64287:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18354,"nodeType":"FunctionDefinition","src":"64379:59:30","nodes":[],"documentation":{"id":18347,"nodeType":"StructuredDocumentation","src":"64294:80:30","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"64388:8:30","parameters":{"id":18352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18349,"mutability":"mutable","name":"left","nameLocation":"64404:4:30","nodeType":"VariableDeclaration","scope":18354,"src":"64397:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18348,"name":"int256","nodeType":"ElementaryTypeName","src":"64397:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18351,"mutability":"mutable","name":"right","nameLocation":"64417:5:30","nodeType":"VariableDeclaration","scope":18354,"src":"64410:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18350,"name":"int256","nodeType":"ElementaryTypeName","src":"64410:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"64396:27:30"},"returnParameters":{"id":18353,"nodeType":"ParameterList","parameters":[],"src":"64437:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18364,"nodeType":"FunctionDefinition","src":"64591:82:30","nodes":[],"documentation":{"id":18355,"nodeType":"StructuredDocumentation","src":"64444:142:30","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"64600:8:30","parameters":{"id":18362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18357,"mutability":"mutable","name":"left","nameLocation":"64616:4:30","nodeType":"VariableDeclaration","scope":18364,"src":"64609:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18356,"name":"int256","nodeType":"ElementaryTypeName","src":"64609:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18359,"mutability":"mutable","name":"right","nameLocation":"64629:5:30","nodeType":"VariableDeclaration","scope":18364,"src":"64622:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18358,"name":"int256","nodeType":"ElementaryTypeName","src":"64622:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18361,"mutability":"mutable","name":"error","nameLocation":"64652:5:30","nodeType":"VariableDeclaration","scope":18364,"src":"64636:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18360,"name":"string","nodeType":"ElementaryTypeName","src":"64636:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64608:50:30"},"returnParameters":{"id":18363,"nodeType":"ParameterList","parameters":[],"src":"64672:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18374,"nodeType":"FunctionDefinition","src":"64831:86:30","nodes":[],"documentation":{"id":18365,"nodeType":"StructuredDocumentation","src":"64679:147:30","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"64840:15:30","parameters":{"id":18372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18367,"mutability":"mutable","name":"left","nameLocation":"64864:4:30","nodeType":"VariableDeclaration","scope":18374,"src":"64856:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18366,"name":"uint256","nodeType":"ElementaryTypeName","src":"64856:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18369,"mutability":"mutable","name":"right","nameLocation":"64878:5:30","nodeType":"VariableDeclaration","scope":18374,"src":"64870:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18368,"name":"uint256","nodeType":"ElementaryTypeName","src":"64870:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18371,"mutability":"mutable","name":"decimals","nameLocation":"64893:8:30","nodeType":"VariableDeclaration","scope":18374,"src":"64885:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18370,"name":"uint256","nodeType":"ElementaryTypeName","src":"64885:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64855:47:30"},"returnParameters":{"id":18373,"nodeType":"ParameterList","parameters":[],"src":"64916:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18386,"nodeType":"FunctionDefinition","src":"65129:109:30","nodes":[],"documentation":{"id":18375,"nodeType":"StructuredDocumentation","src":"64923:201:30","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"65138:15:30","parameters":{"id":18384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18377,"mutability":"mutable","name":"left","nameLocation":"65162:4:30","nodeType":"VariableDeclaration","scope":18386,"src":"65154:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18376,"name":"uint256","nodeType":"ElementaryTypeName","src":"65154:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18379,"mutability":"mutable","name":"right","nameLocation":"65176:5:30","nodeType":"VariableDeclaration","scope":18386,"src":"65168:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18378,"name":"uint256","nodeType":"ElementaryTypeName","src":"65168:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18381,"mutability":"mutable","name":"decimals","nameLocation":"65191:8:30","nodeType":"VariableDeclaration","scope":18386,"src":"65183:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18380,"name":"uint256","nodeType":"ElementaryTypeName","src":"65183:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18383,"mutability":"mutable","name":"error","nameLocation":"65217:5:30","nodeType":"VariableDeclaration","scope":18386,"src":"65201:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18382,"name":"string","nodeType":"ElementaryTypeName","src":"65201:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65153:70:30"},"returnParameters":{"id":18385,"nodeType":"ParameterList","parameters":[],"src":"65237:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18396,"nodeType":"FunctionDefinition","src":"65395:84:30","nodes":[],"documentation":{"id":18387,"nodeType":"StructuredDocumentation","src":"65244:146:30","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"65404:15:30","parameters":{"id":18394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18389,"mutability":"mutable","name":"left","nameLocation":"65427:4:30","nodeType":"VariableDeclaration","scope":18396,"src":"65420:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18388,"name":"int256","nodeType":"ElementaryTypeName","src":"65420:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18391,"mutability":"mutable","name":"right","nameLocation":"65440:5:30","nodeType":"VariableDeclaration","scope":18396,"src":"65433:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18390,"name":"int256","nodeType":"ElementaryTypeName","src":"65433:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18393,"mutability":"mutable","name":"decimals","nameLocation":"65455:8:30","nodeType":"VariableDeclaration","scope":18396,"src":"65447:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18392,"name":"uint256","nodeType":"ElementaryTypeName","src":"65447:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65419:45:30"},"returnParameters":{"id":18395,"nodeType":"ParameterList","parameters":[],"src":"65478:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18408,"nodeType":"FunctionDefinition","src":"65690:107:30","nodes":[],"documentation":{"id":18397,"nodeType":"StructuredDocumentation","src":"65485:200:30","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"65699:15:30","parameters":{"id":18406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18399,"mutability":"mutable","name":"left","nameLocation":"65722:4:30","nodeType":"VariableDeclaration","scope":18408,"src":"65715:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18398,"name":"int256","nodeType":"ElementaryTypeName","src":"65715:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18401,"mutability":"mutable","name":"right","nameLocation":"65735:5:30","nodeType":"VariableDeclaration","scope":18408,"src":"65728:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18400,"name":"int256","nodeType":"ElementaryTypeName","src":"65728:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18403,"mutability":"mutable","name":"decimals","nameLocation":"65750:8:30","nodeType":"VariableDeclaration","scope":18408,"src":"65742:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18402,"name":"uint256","nodeType":"ElementaryTypeName","src":"65742:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18405,"mutability":"mutable","name":"error","nameLocation":"65776:5:30","nodeType":"VariableDeclaration","scope":18408,"src":"65760:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18404,"name":"string","nodeType":"ElementaryTypeName","src":"65760:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65714:68:30"},"returnParameters":{"id":18407,"nodeType":"ParameterList","parameters":[],"src":"65796:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18416,"nodeType":"FunctionDefinition","src":"65898:61:30","nodes":[],"documentation":{"id":18409,"nodeType":"StructuredDocumentation","src":"65803:90:30","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"65907:8:30","parameters":{"id":18414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18411,"mutability":"mutable","name":"left","nameLocation":"65924:4:30","nodeType":"VariableDeclaration","scope":18416,"src":"65916:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18410,"name":"uint256","nodeType":"ElementaryTypeName","src":"65916:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18413,"mutability":"mutable","name":"right","nameLocation":"65938:5:30","nodeType":"VariableDeclaration","scope":18416,"src":"65930:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18412,"name":"uint256","nodeType":"ElementaryTypeName","src":"65930:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65915:29:30"},"returnParameters":{"id":18415,"nodeType":"ParameterList","parameters":[],"src":"65958:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18426,"nodeType":"FunctionDefinition","src":"66122:84:30","nodes":[],"documentation":{"id":18417,"nodeType":"StructuredDocumentation","src":"65965:152:30","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"66131:8:30","parameters":{"id":18424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18419,"mutability":"mutable","name":"left","nameLocation":"66148:4:30","nodeType":"VariableDeclaration","scope":18426,"src":"66140:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18418,"name":"uint256","nodeType":"ElementaryTypeName","src":"66140:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18421,"mutability":"mutable","name":"right","nameLocation":"66162:5:30","nodeType":"VariableDeclaration","scope":18426,"src":"66154:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18420,"name":"uint256","nodeType":"ElementaryTypeName","src":"66154:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18423,"mutability":"mutable","name":"error","nameLocation":"66185:5:30","nodeType":"VariableDeclaration","scope":18426,"src":"66169:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18422,"name":"string","nodeType":"ElementaryTypeName","src":"66169:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66139:52:30"},"returnParameters":{"id":18425,"nodeType":"ParameterList","parameters":[],"src":"66205:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18434,"nodeType":"FunctionDefinition","src":"66306:59:30","nodes":[],"documentation":{"id":18427,"nodeType":"StructuredDocumentation","src":"66212:89:30","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"66315:8:30","parameters":{"id":18432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18429,"mutability":"mutable","name":"left","nameLocation":"66331:4:30","nodeType":"VariableDeclaration","scope":18434,"src":"66324:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18428,"name":"int256","nodeType":"ElementaryTypeName","src":"66324:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18431,"mutability":"mutable","name":"right","nameLocation":"66344:5:30","nodeType":"VariableDeclaration","scope":18434,"src":"66337:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18430,"name":"int256","nodeType":"ElementaryTypeName","src":"66337:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"66323:27:30"},"returnParameters":{"id":18433,"nodeType":"ParameterList","parameters":[],"src":"66364:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18444,"nodeType":"FunctionDefinition","src":"66527:82:30","nodes":[],"documentation":{"id":18435,"nodeType":"StructuredDocumentation","src":"66371:151:30","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"66536:8:30","parameters":{"id":18442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18437,"mutability":"mutable","name":"left","nameLocation":"66552:4:30","nodeType":"VariableDeclaration","scope":18444,"src":"66545:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18436,"name":"int256","nodeType":"ElementaryTypeName","src":"66545:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18439,"mutability":"mutable","name":"right","nameLocation":"66565:5:30","nodeType":"VariableDeclaration","scope":18444,"src":"66558:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18438,"name":"int256","nodeType":"ElementaryTypeName","src":"66558:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18441,"mutability":"mutable","name":"error","nameLocation":"66588:5:30","nodeType":"VariableDeclaration","scope":18444,"src":"66572:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18440,"name":"string","nodeType":"ElementaryTypeName","src":"66572:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66544:50:30"},"returnParameters":{"id":18443,"nodeType":"ParameterList","parameters":[],"src":"66608:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18454,"nodeType":"FunctionDefinition","src":"66755:86:30","nodes":[],"documentation":{"id":18445,"nodeType":"StructuredDocumentation","src":"66615:135:30","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"66764:15:30","parameters":{"id":18452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18447,"mutability":"mutable","name":"left","nameLocation":"66788:4:30","nodeType":"VariableDeclaration","scope":18454,"src":"66780:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18446,"name":"uint256","nodeType":"ElementaryTypeName","src":"66780:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18449,"mutability":"mutable","name":"right","nameLocation":"66802:5:30","nodeType":"VariableDeclaration","scope":18454,"src":"66794:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18448,"name":"uint256","nodeType":"ElementaryTypeName","src":"66794:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18451,"mutability":"mutable","name":"decimals","nameLocation":"66817:8:30","nodeType":"VariableDeclaration","scope":18454,"src":"66809:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18450,"name":"uint256","nodeType":"ElementaryTypeName","src":"66809:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66779:47:30"},"returnParameters":{"id":18453,"nodeType":"ParameterList","parameters":[],"src":"66840:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18466,"nodeType":"FunctionDefinition","src":"67041:109:30","nodes":[],"documentation":{"id":18455,"nodeType":"StructuredDocumentation","src":"66847:189:30","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"67050:15:30","parameters":{"id":18464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18457,"mutability":"mutable","name":"left","nameLocation":"67074:4:30","nodeType":"VariableDeclaration","scope":18466,"src":"67066:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18456,"name":"uint256","nodeType":"ElementaryTypeName","src":"67066:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18459,"mutability":"mutable","name":"right","nameLocation":"67088:5:30","nodeType":"VariableDeclaration","scope":18466,"src":"67080:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18458,"name":"uint256","nodeType":"ElementaryTypeName","src":"67080:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18461,"mutability":"mutable","name":"decimals","nameLocation":"67103:8:30","nodeType":"VariableDeclaration","scope":18466,"src":"67095:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18460,"name":"uint256","nodeType":"ElementaryTypeName","src":"67095:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18463,"mutability":"mutable","name":"error","nameLocation":"67129:5:30","nodeType":"VariableDeclaration","scope":18466,"src":"67113:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18462,"name":"string","nodeType":"ElementaryTypeName","src":"67113:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67065:70:30"},"returnParameters":{"id":18465,"nodeType":"ParameterList","parameters":[],"src":"67149:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18476,"nodeType":"FunctionDefinition","src":"67295:84:30","nodes":[],"documentation":{"id":18467,"nodeType":"StructuredDocumentation","src":"67156:134:30","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"67304:15:30","parameters":{"id":18474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18469,"mutability":"mutable","name":"left","nameLocation":"67327:4:30","nodeType":"VariableDeclaration","scope":18476,"src":"67320:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18468,"name":"int256","nodeType":"ElementaryTypeName","src":"67320:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18471,"mutability":"mutable","name":"right","nameLocation":"67340:5:30","nodeType":"VariableDeclaration","scope":18476,"src":"67333:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18470,"name":"int256","nodeType":"ElementaryTypeName","src":"67333:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18473,"mutability":"mutable","name":"decimals","nameLocation":"67355:8:30","nodeType":"VariableDeclaration","scope":18476,"src":"67347:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18472,"name":"uint256","nodeType":"ElementaryTypeName","src":"67347:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67319:45:30"},"returnParameters":{"id":18475,"nodeType":"ParameterList","parameters":[],"src":"67378:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18488,"nodeType":"FunctionDefinition","src":"67578:107:30","nodes":[],"documentation":{"id":18477,"nodeType":"StructuredDocumentation","src":"67385:188:30","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"67587:15:30","parameters":{"id":18486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18479,"mutability":"mutable","name":"left","nameLocation":"67610:4:30","nodeType":"VariableDeclaration","scope":18488,"src":"67603:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18478,"name":"int256","nodeType":"ElementaryTypeName","src":"67603:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18481,"mutability":"mutable","name":"right","nameLocation":"67623:5:30","nodeType":"VariableDeclaration","scope":18488,"src":"67616:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18480,"name":"int256","nodeType":"ElementaryTypeName","src":"67616:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18483,"mutability":"mutable","name":"decimals","nameLocation":"67638:8:30","nodeType":"VariableDeclaration","scope":18488,"src":"67630:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18482,"name":"uint256","nodeType":"ElementaryTypeName","src":"67630:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18485,"mutability":"mutable","name":"error","nameLocation":"67664:5:30","nodeType":"VariableDeclaration","scope":18488,"src":"67648:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18484,"name":"string","nodeType":"ElementaryTypeName","src":"67648:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67602:68:30"},"returnParameters":{"id":18487,"nodeType":"ParameterList","parameters":[],"src":"67684:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18496,"nodeType":"FunctionDefinition","src":"67774:61:30","nodes":[],"documentation":{"id":18489,"nodeType":"StructuredDocumentation","src":"67691:78:30","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"67783:8:30","parameters":{"id":18494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18491,"mutability":"mutable","name":"left","nameLocation":"67800:4:30","nodeType":"VariableDeclaration","scope":18496,"src":"67792:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18490,"name":"uint256","nodeType":"ElementaryTypeName","src":"67792:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18493,"mutability":"mutable","name":"right","nameLocation":"67814:5:30","nodeType":"VariableDeclaration","scope":18496,"src":"67806:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18492,"name":"uint256","nodeType":"ElementaryTypeName","src":"67806:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67791:29:30"},"returnParameters":{"id":18495,"nodeType":"ParameterList","parameters":[],"src":"67834:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18506,"nodeType":"FunctionDefinition","src":"67986:84:30","nodes":[],"documentation":{"id":18497,"nodeType":"StructuredDocumentation","src":"67841:140:30","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"67995:8:30","parameters":{"id":18504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18499,"mutability":"mutable","name":"left","nameLocation":"68012:4:30","nodeType":"VariableDeclaration","scope":18506,"src":"68004:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18498,"name":"uint256","nodeType":"ElementaryTypeName","src":"68004:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18501,"mutability":"mutable","name":"right","nameLocation":"68026:5:30","nodeType":"VariableDeclaration","scope":18506,"src":"68018:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18500,"name":"uint256","nodeType":"ElementaryTypeName","src":"68018:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18503,"mutability":"mutable","name":"error","nameLocation":"68049:5:30","nodeType":"VariableDeclaration","scope":18506,"src":"68033:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18502,"name":"string","nodeType":"ElementaryTypeName","src":"68033:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68003:52:30"},"returnParameters":{"id":18505,"nodeType":"ParameterList","parameters":[],"src":"68069:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18514,"nodeType":"FunctionDefinition","src":"68158:59:30","nodes":[],"documentation":{"id":18507,"nodeType":"StructuredDocumentation","src":"68076:77:30","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"68167:8:30","parameters":{"id":18512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18509,"mutability":"mutable","name":"left","nameLocation":"68183:4:30","nodeType":"VariableDeclaration","scope":18514,"src":"68176:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18508,"name":"int256","nodeType":"ElementaryTypeName","src":"68176:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18511,"mutability":"mutable","name":"right","nameLocation":"68196:5:30","nodeType":"VariableDeclaration","scope":18514,"src":"68189:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18510,"name":"int256","nodeType":"ElementaryTypeName","src":"68189:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"68175:27:30"},"returnParameters":{"id":18513,"nodeType":"ParameterList","parameters":[],"src":"68216:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18524,"nodeType":"FunctionDefinition","src":"68367:82:30","nodes":[],"documentation":{"id":18515,"nodeType":"StructuredDocumentation","src":"68223:139:30","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"68376:8:30","parameters":{"id":18522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18517,"mutability":"mutable","name":"left","nameLocation":"68392:4:30","nodeType":"VariableDeclaration","scope":18524,"src":"68385:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18516,"name":"int256","nodeType":"ElementaryTypeName","src":"68385:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18519,"mutability":"mutable","name":"right","nameLocation":"68405:5:30","nodeType":"VariableDeclaration","scope":18524,"src":"68398:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18518,"name":"int256","nodeType":"ElementaryTypeName","src":"68398:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18521,"mutability":"mutable","name":"error","nameLocation":"68428:5:30","nodeType":"VariableDeclaration","scope":18524,"src":"68412:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18520,"name":"string","nodeType":"ElementaryTypeName","src":"68412:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68384:50:30"},"returnParameters":{"id":18523,"nodeType":"ParameterList","parameters":[],"src":"68448:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18534,"nodeType":"FunctionDefinition","src":"68562:89:30","nodes":[],"documentation":{"id":18525,"nodeType":"StructuredDocumentation","src":"68455:102:30","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"68571:18:30","parameters":{"id":18532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18527,"mutability":"mutable","name":"left","nameLocation":"68598:4:30","nodeType":"VariableDeclaration","scope":18534,"src":"68590:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18526,"name":"uint256","nodeType":"ElementaryTypeName","src":"68590:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18529,"mutability":"mutable","name":"right","nameLocation":"68612:5:30","nodeType":"VariableDeclaration","scope":18534,"src":"68604:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18528,"name":"uint256","nodeType":"ElementaryTypeName","src":"68604:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18531,"mutability":"mutable","name":"decimals","nameLocation":"68627:8:30","nodeType":"VariableDeclaration","scope":18534,"src":"68619:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18530,"name":"uint256","nodeType":"ElementaryTypeName","src":"68619:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68589:47:30"},"returnParameters":{"id":18533,"nodeType":"ParameterList","parameters":[],"src":"68650:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18546,"nodeType":"FunctionDefinition","src":"68826:112:30","nodes":[],"documentation":{"id":18535,"nodeType":"StructuredDocumentation","src":"68657:164:30","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"68835:18:30","parameters":{"id":18544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18537,"mutability":"mutable","name":"left","nameLocation":"68862:4:30","nodeType":"VariableDeclaration","scope":18546,"src":"68854:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18536,"name":"uint256","nodeType":"ElementaryTypeName","src":"68854:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18539,"mutability":"mutable","name":"right","nameLocation":"68876:5:30","nodeType":"VariableDeclaration","scope":18546,"src":"68868:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18538,"name":"uint256","nodeType":"ElementaryTypeName","src":"68868:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18541,"mutability":"mutable","name":"decimals","nameLocation":"68891:8:30","nodeType":"VariableDeclaration","scope":18546,"src":"68883:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18540,"name":"uint256","nodeType":"ElementaryTypeName","src":"68883:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18543,"mutability":"mutable","name":"error","nameLocation":"68917:5:30","nodeType":"VariableDeclaration","scope":18546,"src":"68901:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18542,"name":"string","nodeType":"ElementaryTypeName","src":"68901:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68853:70:30"},"returnParameters":{"id":18545,"nodeType":"ParameterList","parameters":[],"src":"68937:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18556,"nodeType":"FunctionDefinition","src":"69050:87:30","nodes":[],"documentation":{"id":18547,"nodeType":"StructuredDocumentation","src":"68944:101:30","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"69059:18:30","parameters":{"id":18554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18549,"mutability":"mutable","name":"left","nameLocation":"69085:4:30","nodeType":"VariableDeclaration","scope":18556,"src":"69078:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18548,"name":"int256","nodeType":"ElementaryTypeName","src":"69078:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18551,"mutability":"mutable","name":"right","nameLocation":"69098:5:30","nodeType":"VariableDeclaration","scope":18556,"src":"69091:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18550,"name":"int256","nodeType":"ElementaryTypeName","src":"69091:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18553,"mutability":"mutable","name":"decimals","nameLocation":"69113:8:30","nodeType":"VariableDeclaration","scope":18556,"src":"69105:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18552,"name":"uint256","nodeType":"ElementaryTypeName","src":"69105:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69077:45:30"},"returnParameters":{"id":18555,"nodeType":"ParameterList","parameters":[],"src":"69136:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18568,"nodeType":"FunctionDefinition","src":"69311:110:30","nodes":[],"documentation":{"id":18557,"nodeType":"StructuredDocumentation","src":"69143:163:30","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"69320:18:30","parameters":{"id":18566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18559,"mutability":"mutable","name":"left","nameLocation":"69346:4:30","nodeType":"VariableDeclaration","scope":18568,"src":"69339:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18558,"name":"int256","nodeType":"ElementaryTypeName","src":"69339:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18561,"mutability":"mutable","name":"right","nameLocation":"69359:5:30","nodeType":"VariableDeclaration","scope":18568,"src":"69352:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18560,"name":"int256","nodeType":"ElementaryTypeName","src":"69352:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18563,"mutability":"mutable","name":"decimals","nameLocation":"69374:8:30","nodeType":"VariableDeclaration","scope":18568,"src":"69366:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18562,"name":"uint256","nodeType":"ElementaryTypeName","src":"69366:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18565,"mutability":"mutable","name":"error","nameLocation":"69400:5:30","nodeType":"VariableDeclaration","scope":18568,"src":"69384:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18564,"name":"string","nodeType":"ElementaryTypeName","src":"69384:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69338:68:30"},"returnParameters":{"id":18567,"nodeType":"ParameterList","parameters":[],"src":"69420:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18576,"nodeType":"FunctionDefinition","src":"69481:58:30","nodes":[],"documentation":{"id":18569,"nodeType":"StructuredDocumentation","src":"69427:49:30","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69490:11:30","parameters":{"id":18574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18571,"mutability":"mutable","name":"left","nameLocation":"69507:4:30","nodeType":"VariableDeclaration","scope":18576,"src":"69502:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18570,"name":"bool","nodeType":"ElementaryTypeName","src":"69502:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18573,"mutability":"mutable","name":"right","nameLocation":"69518:5:30","nodeType":"VariableDeclaration","scope":18576,"src":"69513:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18572,"name":"bool","nodeType":"ElementaryTypeName","src":"69513:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"69501:23:30"},"returnParameters":{"id":18575,"nodeType":"ParameterList","parameters":[],"src":"69538:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18586,"nodeType":"FunctionDefinition","src":"69656:81:30","nodes":[],"documentation":{"id":18577,"nodeType":"StructuredDocumentation","src":"69545:106:30","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69665:11:30","parameters":{"id":18584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18579,"mutability":"mutable","name":"left","nameLocation":"69682:4:30","nodeType":"VariableDeclaration","scope":18586,"src":"69677:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18578,"name":"bool","nodeType":"ElementaryTypeName","src":"69677:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18581,"mutability":"mutable","name":"right","nameLocation":"69693:5:30","nodeType":"VariableDeclaration","scope":18586,"src":"69688:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18580,"name":"bool","nodeType":"ElementaryTypeName","src":"69688:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18583,"mutability":"mutable","name":"error","nameLocation":"69716:5:30","nodeType":"VariableDeclaration","scope":18586,"src":"69700:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18582,"name":"string","nodeType":"ElementaryTypeName","src":"69700:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69676:46:30"},"returnParameters":{"id":18585,"nodeType":"ParameterList","parameters":[],"src":"69736:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18594,"nodeType":"FunctionDefinition","src":"69799:80:30","nodes":[],"documentation":{"id":18587,"nodeType":"StructuredDocumentation","src":"69743:51:30","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69808:11:30","parameters":{"id":18592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18589,"mutability":"mutable","name":"left","nameLocation":"69836:4:30","nodeType":"VariableDeclaration","scope":18594,"src":"69820:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18588,"name":"string","nodeType":"ElementaryTypeName","src":"69820:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18591,"mutability":"mutable","name":"right","nameLocation":"69858:5:30","nodeType":"VariableDeclaration","scope":18594,"src":"69842:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18590,"name":"string","nodeType":"ElementaryTypeName","src":"69842:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69819:45:30"},"returnParameters":{"id":18593,"nodeType":"ParameterList","parameters":[],"src":"69878:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18604,"nodeType":"FunctionDefinition","src":"69998:103:30","nodes":[],"documentation":{"id":18595,"nodeType":"StructuredDocumentation","src":"69885:108:30","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70007:11:30","parameters":{"id":18602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18597,"mutability":"mutable","name":"left","nameLocation":"70035:4:30","nodeType":"VariableDeclaration","scope":18604,"src":"70019:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18596,"name":"string","nodeType":"ElementaryTypeName","src":"70019:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18599,"mutability":"mutable","name":"right","nameLocation":"70057:5:30","nodeType":"VariableDeclaration","scope":18604,"src":"70041:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18598,"name":"string","nodeType":"ElementaryTypeName","src":"70041:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18601,"mutability":"mutable","name":"error","nameLocation":"70080:5:30","nodeType":"VariableDeclaration","scope":18604,"src":"70064:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18600,"name":"string","nodeType":"ElementaryTypeName","src":"70064:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70018:68:30"},"returnParameters":{"id":18603,"nodeType":"ParameterList","parameters":[],"src":"70100:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18612,"nodeType":"FunctionDefinition","src":"70162:78:30","nodes":[],"documentation":{"id":18605,"nodeType":"StructuredDocumentation","src":"70107:50:30","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70171:11:30","parameters":{"id":18610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18607,"mutability":"mutable","name":"left","nameLocation":"70198:4:30","nodeType":"VariableDeclaration","scope":18612,"src":"70183:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18606,"name":"bytes","nodeType":"ElementaryTypeName","src":"70183:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18609,"mutability":"mutable","name":"right","nameLocation":"70219:5:30","nodeType":"VariableDeclaration","scope":18612,"src":"70204:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18608,"name":"bytes","nodeType":"ElementaryTypeName","src":"70204:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"70182:43:30"},"returnParameters":{"id":18611,"nodeType":"ParameterList","parameters":[],"src":"70239:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18622,"nodeType":"FunctionDefinition","src":"70358:101:30","nodes":[],"documentation":{"id":18613,"nodeType":"StructuredDocumentation","src":"70246:107:30","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70367:11:30","parameters":{"id":18620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18615,"mutability":"mutable","name":"left","nameLocation":"70394:4:30","nodeType":"VariableDeclaration","scope":18622,"src":"70379:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18614,"name":"bytes","nodeType":"ElementaryTypeName","src":"70379:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18617,"mutability":"mutable","name":"right","nameLocation":"70415:5:30","nodeType":"VariableDeclaration","scope":18622,"src":"70400:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18616,"name":"bytes","nodeType":"ElementaryTypeName","src":"70400:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18619,"mutability":"mutable","name":"error","nameLocation":"70438:5:30","nodeType":"VariableDeclaration","scope":18622,"src":"70422:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18618,"name":"string","nodeType":"ElementaryTypeName","src":"70422:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70378:66:30"},"returnParameters":{"id":18621,"nodeType":"ParameterList","parameters":[],"src":"70458:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18632,"nodeType":"FunctionDefinition","src":"70529:80:30","nodes":[],"documentation":{"id":18623,"nodeType":"StructuredDocumentation","src":"70465:59:30","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70538:11:30","parameters":{"id":18630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18626,"mutability":"mutable","name":"left","nameLocation":"70566:4:30","nodeType":"VariableDeclaration","scope":18632,"src":"70550:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18624,"name":"bool","nodeType":"ElementaryTypeName","src":"70550:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18625,"nodeType":"ArrayTypeName","src":"70550:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":18629,"mutability":"mutable","name":"right","nameLocation":"70588:5:30","nodeType":"VariableDeclaration","scope":18632,"src":"70572:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18627,"name":"bool","nodeType":"ElementaryTypeName","src":"70572:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18628,"nodeType":"ArrayTypeName","src":"70572:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"70549:45:30"},"returnParameters":{"id":18631,"nodeType":"ParameterList","parameters":[],"src":"70608:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18644,"nodeType":"FunctionDefinition","src":"70736:103:30","nodes":[],"documentation":{"id":18633,"nodeType":"StructuredDocumentation","src":"70615:116:30","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70745:11:30","parameters":{"id":18642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18636,"mutability":"mutable","name":"left","nameLocation":"70773:4:30","nodeType":"VariableDeclaration","scope":18644,"src":"70757:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18634,"name":"bool","nodeType":"ElementaryTypeName","src":"70757:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18635,"nodeType":"ArrayTypeName","src":"70757:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":18639,"mutability":"mutable","name":"right","nameLocation":"70795:5:30","nodeType":"VariableDeclaration","scope":18644,"src":"70779:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18637,"name":"bool","nodeType":"ElementaryTypeName","src":"70779:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18638,"nodeType":"ArrayTypeName","src":"70779:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":18641,"mutability":"mutable","name":"error","nameLocation":"70818:5:30","nodeType":"VariableDeclaration","scope":18644,"src":"70802:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18640,"name":"string","nodeType":"ElementaryTypeName","src":"70802:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70756:68:30"},"returnParameters":{"id":18643,"nodeType":"ParameterList","parameters":[],"src":"70838:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18654,"nodeType":"FunctionDefinition","src":"70912:86:30","nodes":[],"documentation":{"id":18645,"nodeType":"StructuredDocumentation","src":"70845:62:30","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70921:11:30","parameters":{"id":18652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18648,"mutability":"mutable","name":"left","nameLocation":"70952:4:30","nodeType":"VariableDeclaration","scope":18654,"src":"70933:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18646,"name":"uint256","nodeType":"ElementaryTypeName","src":"70933:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18647,"nodeType":"ArrayTypeName","src":"70933:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18651,"mutability":"mutable","name":"right","nameLocation":"70977:5:30","nodeType":"VariableDeclaration","scope":18654,"src":"70958:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18649,"name":"uint256","nodeType":"ElementaryTypeName","src":"70958:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18650,"nodeType":"ArrayTypeName","src":"70958:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"70932:51:30"},"returnParameters":{"id":18653,"nodeType":"ParameterList","parameters":[],"src":"70997:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18666,"nodeType":"FunctionDefinition","src":"71128:109:30","nodes":[],"documentation":{"id":18655,"nodeType":"StructuredDocumentation","src":"71004:119:30","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71137:11:30","parameters":{"id":18664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18658,"mutability":"mutable","name":"left","nameLocation":"71168:4:30","nodeType":"VariableDeclaration","scope":18666,"src":"71149:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18656,"name":"uint256","nodeType":"ElementaryTypeName","src":"71149:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18657,"nodeType":"ArrayTypeName","src":"71149:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18661,"mutability":"mutable","name":"right","nameLocation":"71193:5:30","nodeType":"VariableDeclaration","scope":18666,"src":"71174:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18659,"name":"uint256","nodeType":"ElementaryTypeName","src":"71174:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18660,"nodeType":"ArrayTypeName","src":"71174:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18663,"mutability":"mutable","name":"error","nameLocation":"71216:5:30","nodeType":"VariableDeclaration","scope":18666,"src":"71200:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18662,"name":"string","nodeType":"ElementaryTypeName","src":"71200:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71148:74:30"},"returnParameters":{"id":18665,"nodeType":"ParameterList","parameters":[],"src":"71236:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18676,"nodeType":"FunctionDefinition","src":"71309:84:30","nodes":[],"documentation":{"id":18667,"nodeType":"StructuredDocumentation","src":"71243:61:30","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71318:11:30","parameters":{"id":18674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18670,"mutability":"mutable","name":"left","nameLocation":"71348:4:30","nodeType":"VariableDeclaration","scope":18676,"src":"71330:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18668,"name":"int256","nodeType":"ElementaryTypeName","src":"71330:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18669,"nodeType":"ArrayTypeName","src":"71330:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18673,"mutability":"mutable","name":"right","nameLocation":"71372:5:30","nodeType":"VariableDeclaration","scope":18676,"src":"71354:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18671,"name":"int256","nodeType":"ElementaryTypeName","src":"71354:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18672,"nodeType":"ArrayTypeName","src":"71354:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"71329:49:30"},"returnParameters":{"id":18675,"nodeType":"ParameterList","parameters":[],"src":"71392:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18688,"nodeType":"FunctionDefinition","src":"71522:107:30","nodes":[],"documentation":{"id":18677,"nodeType":"StructuredDocumentation","src":"71399:118:30","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71531:11:30","parameters":{"id":18686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18680,"mutability":"mutable","name":"left","nameLocation":"71561:4:30","nodeType":"VariableDeclaration","scope":18688,"src":"71543:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18678,"name":"int256","nodeType":"ElementaryTypeName","src":"71543:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18679,"nodeType":"ArrayTypeName","src":"71543:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18683,"mutability":"mutable","name":"right","nameLocation":"71585:5:30","nodeType":"VariableDeclaration","scope":18688,"src":"71567:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18681,"name":"int256","nodeType":"ElementaryTypeName","src":"71567:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18682,"nodeType":"ArrayTypeName","src":"71567:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18685,"mutability":"mutable","name":"error","nameLocation":"71608:5:30","nodeType":"VariableDeclaration","scope":18688,"src":"71592:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18684,"name":"string","nodeType":"ElementaryTypeName","src":"71592:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71542:72:30"},"returnParameters":{"id":18687,"nodeType":"ParameterList","parameters":[],"src":"71628:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18696,"nodeType":"FunctionDefinition","src":"71692:64:30","nodes":[],"documentation":{"id":18689,"nodeType":"StructuredDocumentation","src":"71635:52:30","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71701:11:30","parameters":{"id":18694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18691,"mutability":"mutable","name":"left","nameLocation":"71721:4:30","nodeType":"VariableDeclaration","scope":18696,"src":"71713:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18690,"name":"uint256","nodeType":"ElementaryTypeName","src":"71713:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18693,"mutability":"mutable","name":"right","nameLocation":"71735:5:30","nodeType":"VariableDeclaration","scope":18696,"src":"71727:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18692,"name":"uint256","nodeType":"ElementaryTypeName","src":"71727:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71712:29:30"},"returnParameters":{"id":18695,"nodeType":"ParameterList","parameters":[],"src":"71755:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18706,"nodeType":"FunctionDefinition","src":"71829:86:30","nodes":[],"documentation":{"id":18697,"nodeType":"StructuredDocumentation","src":"71762:62:30","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71838:11:30","parameters":{"id":18704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18700,"mutability":"mutable","name":"left","nameLocation":"71869:4:30","nodeType":"VariableDeclaration","scope":18706,"src":"71850:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18698,"name":"address","nodeType":"ElementaryTypeName","src":"71850:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18699,"nodeType":"ArrayTypeName","src":"71850:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18703,"mutability":"mutable","name":"right","nameLocation":"71894:5:30","nodeType":"VariableDeclaration","scope":18706,"src":"71875:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18701,"name":"address","nodeType":"ElementaryTypeName","src":"71875:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18702,"nodeType":"ArrayTypeName","src":"71875:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"71849:51:30"},"returnParameters":{"id":18705,"nodeType":"ParameterList","parameters":[],"src":"71914:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18718,"nodeType":"FunctionDefinition","src":"72045:109:30","nodes":[],"documentation":{"id":18707,"nodeType":"StructuredDocumentation","src":"71921:119:30","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72054:11:30","parameters":{"id":18716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18710,"mutability":"mutable","name":"left","nameLocation":"72085:4:30","nodeType":"VariableDeclaration","scope":18718,"src":"72066:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18708,"name":"address","nodeType":"ElementaryTypeName","src":"72066:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18709,"nodeType":"ArrayTypeName","src":"72066:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18713,"mutability":"mutable","name":"right","nameLocation":"72110:5:30","nodeType":"VariableDeclaration","scope":18718,"src":"72091:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18711,"name":"address","nodeType":"ElementaryTypeName","src":"72091:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18712,"nodeType":"ArrayTypeName","src":"72091:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18715,"mutability":"mutable","name":"error","nameLocation":"72133:5:30","nodeType":"VariableDeclaration","scope":18718,"src":"72117:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18714,"name":"string","nodeType":"ElementaryTypeName","src":"72117:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72065:74:30"},"returnParameters":{"id":18717,"nodeType":"ParameterList","parameters":[],"src":"72153:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18728,"nodeType":"FunctionDefinition","src":"72227:86:30","nodes":[],"documentation":{"id":18719,"nodeType":"StructuredDocumentation","src":"72160:62:30","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72236:11:30","parameters":{"id":18726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18722,"mutability":"mutable","name":"left","nameLocation":"72267:4:30","nodeType":"VariableDeclaration","scope":18728,"src":"72248:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72248:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18721,"nodeType":"ArrayTypeName","src":"72248:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18725,"mutability":"mutable","name":"right","nameLocation":"72292:5:30","nodeType":"VariableDeclaration","scope":18728,"src":"72273:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72273:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18724,"nodeType":"ArrayTypeName","src":"72273:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"72247:51:30"},"returnParameters":{"id":18727,"nodeType":"ParameterList","parameters":[],"src":"72312:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18740,"nodeType":"FunctionDefinition","src":"72443:109:30","nodes":[],"documentation":{"id":18729,"nodeType":"StructuredDocumentation","src":"72319:119:30","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72452:11:30","parameters":{"id":18738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18732,"mutability":"mutable","name":"left","nameLocation":"72483:4:30","nodeType":"VariableDeclaration","scope":18740,"src":"72464:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72464:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18731,"nodeType":"ArrayTypeName","src":"72464:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18735,"mutability":"mutable","name":"right","nameLocation":"72508:5:30","nodeType":"VariableDeclaration","scope":18740,"src":"72489:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72489:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18734,"nodeType":"ArrayTypeName","src":"72489:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18737,"mutability":"mutable","name":"error","nameLocation":"72531:5:30","nodeType":"VariableDeclaration","scope":18740,"src":"72515:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18736,"name":"string","nodeType":"ElementaryTypeName","src":"72515:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72463:74:30"},"returnParameters":{"id":18739,"nodeType":"ParameterList","parameters":[],"src":"72551:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18750,"nodeType":"FunctionDefinition","src":"72624:84:30","nodes":[],"documentation":{"id":18741,"nodeType":"StructuredDocumentation","src":"72558:61:30","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72633:11:30","parameters":{"id":18748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18744,"mutability":"mutable","name":"left","nameLocation":"72663:4:30","nodeType":"VariableDeclaration","scope":18750,"src":"72645:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18742,"name":"string","nodeType":"ElementaryTypeName","src":"72645:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18743,"nodeType":"ArrayTypeName","src":"72645:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18747,"mutability":"mutable","name":"right","nameLocation":"72687:5:30","nodeType":"VariableDeclaration","scope":18750,"src":"72669:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18745,"name":"string","nodeType":"ElementaryTypeName","src":"72669:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18746,"nodeType":"ArrayTypeName","src":"72669:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"72644:49:30"},"returnParameters":{"id":18749,"nodeType":"ParameterList","parameters":[],"src":"72707:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18762,"nodeType":"FunctionDefinition","src":"72837:107:30","nodes":[],"documentation":{"id":18751,"nodeType":"StructuredDocumentation","src":"72714:118:30","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72846:11:30","parameters":{"id":18760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18754,"mutability":"mutable","name":"left","nameLocation":"72876:4:30","nodeType":"VariableDeclaration","scope":18762,"src":"72858:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18752,"name":"string","nodeType":"ElementaryTypeName","src":"72858:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18753,"nodeType":"ArrayTypeName","src":"72858:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18757,"mutability":"mutable","name":"right","nameLocation":"72900:5:30","nodeType":"VariableDeclaration","scope":18762,"src":"72882:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18755,"name":"string","nodeType":"ElementaryTypeName","src":"72882:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18756,"nodeType":"ArrayTypeName","src":"72882:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18759,"mutability":"mutable","name":"error","nameLocation":"72923:5:30","nodeType":"VariableDeclaration","scope":18762,"src":"72907:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18758,"name":"string","nodeType":"ElementaryTypeName","src":"72907:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72857:72:30"},"returnParameters":{"id":18761,"nodeType":"ParameterList","parameters":[],"src":"72943:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18772,"nodeType":"FunctionDefinition","src":"73015:82:30","nodes":[],"documentation":{"id":18763,"nodeType":"StructuredDocumentation","src":"72950:60:30","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73024:11:30","parameters":{"id":18770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18766,"mutability":"mutable","name":"left","nameLocation":"73053:4:30","nodeType":"VariableDeclaration","scope":18772,"src":"73036:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18764,"name":"bytes","nodeType":"ElementaryTypeName","src":"73036:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18765,"nodeType":"ArrayTypeName","src":"73036:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18769,"mutability":"mutable","name":"right","nameLocation":"73076:5:30","nodeType":"VariableDeclaration","scope":18772,"src":"73059:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18767,"name":"bytes","nodeType":"ElementaryTypeName","src":"73059:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18768,"nodeType":"ArrayTypeName","src":"73059:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"73035:47:30"},"returnParameters":{"id":18771,"nodeType":"ParameterList","parameters":[],"src":"73096:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18784,"nodeType":"FunctionDefinition","src":"73225:105:30","nodes":[],"documentation":{"id":18773,"nodeType":"StructuredDocumentation","src":"73103:117:30","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73234:11:30","parameters":{"id":18782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18776,"mutability":"mutable","name":"left","nameLocation":"73263:4:30","nodeType":"VariableDeclaration","scope":18784,"src":"73246:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18774,"name":"bytes","nodeType":"ElementaryTypeName","src":"73246:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18775,"nodeType":"ArrayTypeName","src":"73246:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18779,"mutability":"mutable","name":"right","nameLocation":"73286:5:30","nodeType":"VariableDeclaration","scope":18784,"src":"73269:22:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18777,"name":"bytes","nodeType":"ElementaryTypeName","src":"73269:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18778,"nodeType":"ArrayTypeName","src":"73269:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18781,"mutability":"mutable","name":"error","nameLocation":"73309:5:30","nodeType":"VariableDeclaration","scope":18784,"src":"73293:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18780,"name":"string","nodeType":"ElementaryTypeName","src":"73293:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73245:70:30"},"returnParameters":{"id":18783,"nodeType":"ParameterList","parameters":[],"src":"73329:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18794,"nodeType":"FunctionDefinition","src":"73450:87:30","nodes":[],"documentation":{"id":18785,"nodeType":"StructuredDocumentation","src":"73336:109:30","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73459:11:30","parameters":{"id":18792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18787,"mutability":"mutable","name":"left","nameLocation":"73479:4:30","nodeType":"VariableDeclaration","scope":18794,"src":"73471:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18786,"name":"uint256","nodeType":"ElementaryTypeName","src":"73471:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18789,"mutability":"mutable","name":"right","nameLocation":"73493:5:30","nodeType":"VariableDeclaration","scope":18794,"src":"73485:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18788,"name":"uint256","nodeType":"ElementaryTypeName","src":"73485:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18791,"mutability":"mutable","name":"error","nameLocation":"73516:5:30","nodeType":"VariableDeclaration","scope":18794,"src":"73500:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18790,"name":"string","nodeType":"ElementaryTypeName","src":"73500:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73470:52:30"},"returnParameters":{"id":18793,"nodeType":"ParameterList","parameters":[],"src":"73536:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18802,"nodeType":"FunctionDefinition","src":"73599:62:30","nodes":[],"documentation":{"id":18795,"nodeType":"StructuredDocumentation","src":"73543:51:30","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73608:11:30","parameters":{"id":18800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18797,"mutability":"mutable","name":"left","nameLocation":"73627:4:30","nodeType":"VariableDeclaration","scope":18802,"src":"73620:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18796,"name":"int256","nodeType":"ElementaryTypeName","src":"73620:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18799,"mutability":"mutable","name":"right","nameLocation":"73640:5:30","nodeType":"VariableDeclaration","scope":18802,"src":"73633:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18798,"name":"int256","nodeType":"ElementaryTypeName","src":"73633:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"73619:27:30"},"returnParameters":{"id":18801,"nodeType":"ParameterList","parameters":[],"src":"73660:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18812,"nodeType":"FunctionDefinition","src":"73780:85:30","nodes":[],"documentation":{"id":18803,"nodeType":"StructuredDocumentation","src":"73667:108:30","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73789:11:30","parameters":{"id":18810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18805,"mutability":"mutable","name":"left","nameLocation":"73808:4:30","nodeType":"VariableDeclaration","scope":18812,"src":"73801:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18804,"name":"int256","nodeType":"ElementaryTypeName","src":"73801:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18807,"mutability":"mutable","name":"right","nameLocation":"73821:5:30","nodeType":"VariableDeclaration","scope":18812,"src":"73814:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18806,"name":"int256","nodeType":"ElementaryTypeName","src":"73814:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18809,"mutability":"mutable","name":"error","nameLocation":"73844:5:30","nodeType":"VariableDeclaration","scope":18812,"src":"73828:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18808,"name":"string","nodeType":"ElementaryTypeName","src":"73828:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73800:50:30"},"returnParameters":{"id":18811,"nodeType":"ParameterList","parameters":[],"src":"73864:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18820,"nodeType":"FunctionDefinition","src":"73928:64:30","nodes":[],"documentation":{"id":18813,"nodeType":"StructuredDocumentation","src":"73871:52:30","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73937:11:30","parameters":{"id":18818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18815,"mutability":"mutable","name":"left","nameLocation":"73957:4:30","nodeType":"VariableDeclaration","scope":18820,"src":"73949:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18814,"name":"address","nodeType":"ElementaryTypeName","src":"73949:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18817,"mutability":"mutable","name":"right","nameLocation":"73971:5:30","nodeType":"VariableDeclaration","scope":18820,"src":"73963:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18816,"name":"address","nodeType":"ElementaryTypeName","src":"73963:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"73948:29:30"},"returnParameters":{"id":18819,"nodeType":"ParameterList","parameters":[],"src":"73991:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18830,"nodeType":"FunctionDefinition","src":"74112:87:30","nodes":[],"documentation":{"id":18821,"nodeType":"StructuredDocumentation","src":"73998:109:30","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74121:11:30","parameters":{"id":18828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18823,"mutability":"mutable","name":"left","nameLocation":"74141:4:30","nodeType":"VariableDeclaration","scope":18830,"src":"74133:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18822,"name":"address","nodeType":"ElementaryTypeName","src":"74133:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18825,"mutability":"mutable","name":"right","nameLocation":"74155:5:30","nodeType":"VariableDeclaration","scope":18830,"src":"74147:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18824,"name":"address","nodeType":"ElementaryTypeName","src":"74147:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18827,"mutability":"mutable","name":"error","nameLocation":"74178:5:30","nodeType":"VariableDeclaration","scope":18830,"src":"74162:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18826,"name":"string","nodeType":"ElementaryTypeName","src":"74162:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74132:52:30"},"returnParameters":{"id":18829,"nodeType":"ParameterList","parameters":[],"src":"74198:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18838,"nodeType":"FunctionDefinition","src":"74262:64:30","nodes":[],"documentation":{"id":18831,"nodeType":"StructuredDocumentation","src":"74205:52:30","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74271:11:30","parameters":{"id":18836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18833,"mutability":"mutable","name":"left","nameLocation":"74291:4:30","nodeType":"VariableDeclaration","scope":18838,"src":"74283:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74283:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18835,"mutability":"mutable","name":"right","nameLocation":"74305:5:30","nodeType":"VariableDeclaration","scope":18838,"src":"74297:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74297:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"74282:29:30"},"returnParameters":{"id":18837,"nodeType":"ParameterList","parameters":[],"src":"74325:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18848,"nodeType":"FunctionDefinition","src":"74446:87:30","nodes":[],"documentation":{"id":18839,"nodeType":"StructuredDocumentation","src":"74332:109:30","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74455:11:30","parameters":{"id":18846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18841,"mutability":"mutable","name":"left","nameLocation":"74475:4:30","nodeType":"VariableDeclaration","scope":18848,"src":"74467:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74467:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18843,"mutability":"mutable","name":"right","nameLocation":"74489:5:30","nodeType":"VariableDeclaration","scope":18848,"src":"74481:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74481:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18845,"mutability":"mutable","name":"error","nameLocation":"74512:5:30","nodeType":"VariableDeclaration","scope":18848,"src":"74496:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18844,"name":"string","nodeType":"ElementaryTypeName","src":"74496:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74466:52:30"},"returnParameters":{"id":18847,"nodeType":"ParameterList","parameters":[],"src":"74532:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18854,"nodeType":"FunctionDefinition","src":"74589:50:30","nodes":[],"documentation":{"id":18849,"nodeType":"StructuredDocumentation","src":"74539:45:30","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"74598:10:30","parameters":{"id":18852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18851,"mutability":"mutable","name":"condition","nameLocation":"74614:9:30","nodeType":"VariableDeclaration","scope":18854,"src":"74609:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18850,"name":"bool","nodeType":"ElementaryTypeName","src":"74609:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"74608:16:30"},"returnParameters":{"id":18853,"nodeType":"ParameterList","parameters":[],"src":"74638:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18862,"nodeType":"FunctionDefinition","src":"74752:73:30","nodes":[],"documentation":{"id":18855,"nodeType":"StructuredDocumentation","src":"74645:102:30","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"74761:10:30","parameters":{"id":18860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18857,"mutability":"mutable","name":"condition","nameLocation":"74777:9:30","nodeType":"VariableDeclaration","scope":18862,"src":"74772:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18856,"name":"bool","nodeType":"ElementaryTypeName","src":"74772:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18859,"mutability":"mutable","name":"error","nameLocation":"74804:5:30","nodeType":"VariableDeclaration","scope":18862,"src":"74788:21:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18858,"name":"string","nodeType":"ElementaryTypeName","src":"74788:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74771:39:30"},"returnParameters":{"id":18861,"nodeType":"ParameterList","parameters":[],"src":"74824:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18868,"nodeType":"FunctionDefinition","src":"74920:46:30","nodes":[],"documentation":{"id":18863,"nodeType":"StructuredDocumentation","src":"74831:84:30","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"74929:6:30","parameters":{"id":18866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18865,"mutability":"mutable","name":"condition","nameLocation":"74941:9:30","nodeType":"VariableDeclaration","scope":18868,"src":"74936:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18864,"name":"bool","nodeType":"ElementaryTypeName","src":"74936:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"74935:16:30"},"returnParameters":{"id":18867,"nodeType":"ParameterList","parameters":[],"src":"74965:0:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18874,"nodeType":"FunctionDefinition","src":"75028:51:30","nodes":[],"documentation":{"id":18869,"nodeType":"StructuredDocumentation","src":"74972:51:30","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"75037:10:30","parameters":{"id":18872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18871,"mutability":"mutable","name":"char","nameLocation":"75064:4:30","nodeType":"VariableDeclaration","scope":18874,"src":"75048:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18870,"name":"string","nodeType":"ElementaryTypeName","src":"75048:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75047:22:30"},"returnParameters":{"id":18873,"nodeType":"ParameterList","parameters":[],"src":"75078:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18882,"nodeType":"FunctionDefinition","src":"75153:63:30","nodes":[],"documentation":{"id":18875,"nodeType":"StructuredDocumentation","src":"75085:63:30","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"75162:10:30","parameters":{"id":18880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18877,"mutability":"mutable","name":"char","nameLocation":"75189:4:30","nodeType":"VariableDeclaration","scope":18882,"src":"75173:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18876,"name":"string","nodeType":"ElementaryTypeName","src":"75173:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18879,"mutability":"mutable","name":"value","nameLocation":"75200:5:30","nodeType":"VariableDeclaration","scope":18882,"src":"75195:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18878,"name":"bool","nodeType":"ElementaryTypeName","src":"75195:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"75172:34:30"},"returnParameters":{"id":18881,"nodeType":"ParameterList","parameters":[],"src":"75215:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18888,"nodeType":"FunctionDefinition","src":"75621:75:30","nodes":[],"documentation":{"id":18883,"nodeType":"StructuredDocumentation","src":"75222:394:30","text":"Returns the Foundry version.\n Format: <cargo_version>+<git_sha>+<build_timestamp>\n Sample output: 0.2.0+faa94c384+202407110019\n Note: Build timestamps may vary slightly across platforms due to separate CI jobs.\n For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000)\n to compare timestamps while ignoring minor time differences."},"functionSelector":"ea991bb5","implemented":false,"kind":"function","modifiers":[],"name":"getFoundryVersion","nameLocation":"75630:17:30","parameters":{"id":18884,"nodeType":"ParameterList","parameters":[],"src":"75647:2:30"},"returnParameters":{"id":18887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18886,"mutability":"mutable","name":"version","nameLocation":"75687:7:30","nodeType":"VariableDeclaration","scope":18888,"src":"75673:21:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18885,"name":"string","nodeType":"ElementaryTypeName","src":"75673:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75672:23:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18896,"nodeType":"FunctionDefinition","src":"75751:85:30","nodes":[],"documentation":{"id":18889,"nodeType":"StructuredDocumentation","src":"75702:44:30","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"75760:6:30","parameters":{"id":18892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18891,"mutability":"mutable","name":"rpcAlias","nameLocation":"75783:8:30","nodeType":"VariableDeclaration","scope":18896,"src":"75767:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18890,"name":"string","nodeType":"ElementaryTypeName","src":"75767:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75766:26:30"},"returnParameters":{"id":18895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18894,"mutability":"mutable","name":"json","nameLocation":"75830:4:30","nodeType":"VariableDeclaration","scope":18896,"src":"75816:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18893,"name":"string","nodeType":"ElementaryTypeName","src":"75816:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75815:20:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18904,"nodeType":"FunctionDefinition","src":"75901:67:30","nodes":[],"documentation":{"id":18897,"nodeType":"StructuredDocumentation","src":"75842:54:30","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"75910:13:30","parameters":{"id":18898,"nodeType":"ParameterList","parameters":[],"src":"75923:2:30"},"returnParameters":{"id":18903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18902,"mutability":"mutable","name":"urls","nameLocation":"75962:4:30","nodeType":"VariableDeclaration","scope":18904,"src":"75949:17:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$15881_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":18900,"nodeType":"UserDefinedTypeName","pathNode":{"id":18899,"name":"Rpc","nameLocations":["75949:3:30"],"nodeType":"IdentifierPath","referencedDeclaration":15881,"src":"75949:3:30"},"referencedDeclaration":15881,"src":"75949:3:30","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$15881_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":18901,"nodeType":"ArrayTypeName","src":"75949:5:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$15881_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"75948:19:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18913,"nodeType":"FunctionDefinition","src":"76039:67:30","nodes":[],"documentation":{"id":18905,"nodeType":"StructuredDocumentation","src":"75974:60:30","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"76048:7:30","parameters":{"id":18906,"nodeType":"ParameterList","parameters":[],"src":"76055:2:30"},"returnParameters":{"id":18912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18911,"mutability":"mutable","name":"urls","nameLocation":"76100:4:30","nodeType":"VariableDeclaration","scope":18913,"src":"76081:23:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":18907,"name":"string","nodeType":"ElementaryTypeName","src":"76081:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18909,"length":{"hexValue":"32","id":18908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"76088:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"76081:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":18910,"nodeType":"ArrayTypeName","src":"76081:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"76080:25:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18919,"nodeType":"FunctionDefinition","src":"76187:42:30","nodes":[],"documentation":{"id":18914,"nodeType":"StructuredDocumentation","src":"76112:70:30","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"76196:5:30","parameters":{"id":18917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18916,"mutability":"mutable","name":"duration","nameLocation":"76210:8:30","nodeType":"VariableDeclaration","scope":18919,"src":"76202:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18915,"name":"uint256","nodeType":"ElementaryTypeName","src":"76202:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76201:18:30"},"returnParameters":{"id":18918,"nodeType":"ParameterList","parameters":[],"src":"76228:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18929,"nodeType":"FunctionDefinition","src":"76314:95:30","nodes":[],"documentation":{"id":18920,"nodeType":"StructuredDocumentation","src":"76266:43:30","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"76323:13:30","parameters":{"id":18925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18922,"mutability":"mutable","name":"toml","nameLocation":"76353:4:30","nodeType":"VariableDeclaration","scope":18929,"src":"76337:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18921,"name":"string","nodeType":"ElementaryTypeName","src":"76337:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18924,"mutability":"mutable","name":"key","nameLocation":"76375:3:30","nodeType":"VariableDeclaration","scope":18929,"src":"76359:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18923,"name":"string","nodeType":"ElementaryTypeName","src":"76359:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76336:43:30"},"returnParameters":{"id":18928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18929,"src":"76403:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18926,"name":"bool","nodeType":"ElementaryTypeName","src":"76403:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"76402:6:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18939,"nodeType":"FunctionDefinition","src":"76490:101:30","nodes":[],"documentation":{"id":18930,"nodeType":"StructuredDocumentation","src":"76415:70:30","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"76499:16:30","parameters":{"id":18935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18932,"mutability":"mutable","name":"toml","nameLocation":"76532:4:30","nodeType":"VariableDeclaration","scope":18939,"src":"76516:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18931,"name":"string","nodeType":"ElementaryTypeName","src":"76516:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18934,"mutability":"mutable","name":"key","nameLocation":"76554:3:30","nodeType":"VariableDeclaration","scope":18939,"src":"76538:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18933,"name":"string","nodeType":"ElementaryTypeName","src":"76538:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76515:43:30"},"returnParameters":{"id":18938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18939,"src":"76582:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18936,"name":"address","nodeType":"ElementaryTypeName","src":"76582:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"76581:9:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18950,"nodeType":"FunctionDefinition","src":"76674:139:30","nodes":[],"documentation":{"id":18940,"nodeType":"StructuredDocumentation","src":"76597:72:30","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"76683:21:30","parameters":{"id":18945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18942,"mutability":"mutable","name":"toml","nameLocation":"76721:4:30","nodeType":"VariableDeclaration","scope":18950,"src":"76705:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18941,"name":"string","nodeType":"ElementaryTypeName","src":"76705:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18944,"mutability":"mutable","name":"key","nameLocation":"76743:3:30","nodeType":"VariableDeclaration","scope":18950,"src":"76727:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18943,"name":"string","nodeType":"ElementaryTypeName","src":"76727:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76704:43:30"},"returnParameters":{"id":18949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18950,"src":"76795:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18946,"name":"address","nodeType":"ElementaryTypeName","src":"76795:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18947,"nodeType":"ArrayTypeName","src":"76795:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"76794:18:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18960,"nodeType":"FunctionDefinition","src":"76891:95:30","nodes":[],"documentation":{"id":18951,"nodeType":"StructuredDocumentation","src":"76819:67:30","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"76900:13:30","parameters":{"id":18956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18953,"mutability":"mutable","name":"toml","nameLocation":"76930:4:30","nodeType":"VariableDeclaration","scope":18960,"src":"76914:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18952,"name":"string","nodeType":"ElementaryTypeName","src":"76914:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18955,"mutability":"mutable","name":"key","nameLocation":"76952:3:30","nodeType":"VariableDeclaration","scope":18960,"src":"76936:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18954,"name":"string","nodeType":"ElementaryTypeName","src":"76936:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76913:43:30"},"returnParameters":{"id":18959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18960,"src":"76980:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18957,"name":"bool","nodeType":"ElementaryTypeName","src":"76980:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"76979:6:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18971,"nodeType":"FunctionDefinition","src":"77066:109:30","nodes":[],"documentation":{"id":18961,"nodeType":"StructuredDocumentation","src":"76992:69:30","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"77075:18:30","parameters":{"id":18966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18963,"mutability":"mutable","name":"toml","nameLocation":"77110:4:30","nodeType":"VariableDeclaration","scope":18971,"src":"77094:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18962,"name":"string","nodeType":"ElementaryTypeName","src":"77094:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18965,"mutability":"mutable","name":"key","nameLocation":"77132:3:30","nodeType":"VariableDeclaration","scope":18971,"src":"77116:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18964,"name":"string","nodeType":"ElementaryTypeName","src":"77116:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77093:43:30"},"returnParameters":{"id":18970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18971,"src":"77160:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18967,"name":"bool","nodeType":"ElementaryTypeName","src":"77160:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18968,"nodeType":"ArrayTypeName","src":"77160:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"77159:15:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18981,"nodeType":"FunctionDefinition","src":"77254:104:30","nodes":[],"documentation":{"id":18972,"nodeType":"StructuredDocumentation","src":"77181:68:30","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"77263:14:30","parameters":{"id":18977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18974,"mutability":"mutable","name":"toml","nameLocation":"77294:4:30","nodeType":"VariableDeclaration","scope":18981,"src":"77278:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18973,"name":"string","nodeType":"ElementaryTypeName","src":"77278:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18976,"mutability":"mutable","name":"key","nameLocation":"77316:3:30","nodeType":"VariableDeclaration","scope":18981,"src":"77300:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18975,"name":"string","nodeType":"ElementaryTypeName","src":"77300:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77277:43:30"},"returnParameters":{"id":18980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18981,"src":"77344:12:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18978,"name":"bytes","nodeType":"ElementaryTypeName","src":"77344:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"77343:14:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18991,"nodeType":"FunctionDefinition","src":"77439:101:30","nodes":[],"documentation":{"id":18982,"nodeType":"StructuredDocumentation","src":"77364:70:30","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"77448:16:30","parameters":{"id":18987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18984,"mutability":"mutable","name":"toml","nameLocation":"77481:4:30","nodeType":"VariableDeclaration","scope":18991,"src":"77465:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18983,"name":"string","nodeType":"ElementaryTypeName","src":"77465:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18986,"mutability":"mutable","name":"key","nameLocation":"77503:3:30","nodeType":"VariableDeclaration","scope":18991,"src":"77487:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18985,"name":"string","nodeType":"ElementaryTypeName","src":"77487:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77464:43:30"},"returnParameters":{"id":18990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18991,"src":"77531:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77531:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"77530:9:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19002,"nodeType":"FunctionDefinition","src":"77623:139:30","nodes":[],"documentation":{"id":18992,"nodeType":"StructuredDocumentation","src":"77546:72:30","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"77632:21:30","parameters":{"id":18997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18994,"mutability":"mutable","name":"toml","nameLocation":"77670:4:30","nodeType":"VariableDeclaration","scope":19002,"src":"77654:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18993,"name":"string","nodeType":"ElementaryTypeName","src":"77654:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18996,"mutability":"mutable","name":"key","nameLocation":"77692:3:30","nodeType":"VariableDeclaration","scope":19002,"src":"77676:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18995,"name":"string","nodeType":"ElementaryTypeName","src":"77676:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77653:43:30"},"returnParameters":{"id":19001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19002,"src":"77744:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77744:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18999,"nodeType":"ArrayTypeName","src":"77744:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"77743:18:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19013,"nodeType":"FunctionDefinition","src":"77843:111:30","nodes":[],"documentation":{"id":19003,"nodeType":"StructuredDocumentation","src":"77768:70:30","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"77852:19:30","parameters":{"id":19008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19005,"mutability":"mutable","name":"toml","nameLocation":"77888:4:30","nodeType":"VariableDeclaration","scope":19013,"src":"77872:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19004,"name":"string","nodeType":"ElementaryTypeName","src":"77872:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19007,"mutability":"mutable","name":"key","nameLocation":"77910:3:30","nodeType":"VariableDeclaration","scope":19013,"src":"77894:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19006,"name":"string","nodeType":"ElementaryTypeName","src":"77894:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77871:43:30"},"returnParameters":{"id":19012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19013,"src":"77938:14:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":19009,"name":"bytes","nodeType":"ElementaryTypeName","src":"77938:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":19010,"nodeType":"ArrayTypeName","src":"77938:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"77937:16:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19023,"nodeType":"FunctionDefinition","src":"78034:96:30","nodes":[],"documentation":{"id":19014,"nodeType":"StructuredDocumentation","src":"77960:69:30","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"78043:12:30","parameters":{"id":19019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19016,"mutability":"mutable","name":"toml","nameLocation":"78072:4:30","nodeType":"VariableDeclaration","scope":19023,"src":"78056:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19015,"name":"string","nodeType":"ElementaryTypeName","src":"78056:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19018,"mutability":"mutable","name":"key","nameLocation":"78094:3:30","nodeType":"VariableDeclaration","scope":19023,"src":"78078:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19017,"name":"string","nodeType":"ElementaryTypeName","src":"78078:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78055:43:30"},"returnParameters":{"id":19022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19023,"src":"78122:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19020,"name":"int256","nodeType":"ElementaryTypeName","src":"78122:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"78121:8:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19034,"nodeType":"FunctionDefinition","src":"78212:110:30","nodes":[],"documentation":{"id":19024,"nodeType":"StructuredDocumentation","src":"78136:71:30","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"78221:17:30","parameters":{"id":19029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19026,"mutability":"mutable","name":"toml","nameLocation":"78255:4:30","nodeType":"VariableDeclaration","scope":19034,"src":"78239:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19025,"name":"string","nodeType":"ElementaryTypeName","src":"78239:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19028,"mutability":"mutable","name":"key","nameLocation":"78277:3:30","nodeType":"VariableDeclaration","scope":19034,"src":"78261:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19027,"name":"string","nodeType":"ElementaryTypeName","src":"78261:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78238:43:30"},"returnParameters":{"id":19033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19034,"src":"78305:15:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":19030,"name":"int256","nodeType":"ElementaryTypeName","src":"78305:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":19031,"nodeType":"ArrayTypeName","src":"78305:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"78304:17:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19045,"nodeType":"FunctionDefinition","src":"78386:111:30","nodes":[],"documentation":{"id":19035,"nodeType":"StructuredDocumentation","src":"78328:53:30","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"78395:13:30","parameters":{"id":19040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19037,"mutability":"mutable","name":"toml","nameLocation":"78425:4:30","nodeType":"VariableDeclaration","scope":19045,"src":"78409:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19036,"name":"string","nodeType":"ElementaryTypeName","src":"78409:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19039,"mutability":"mutable","name":"key","nameLocation":"78447:3:30","nodeType":"VariableDeclaration","scope":19045,"src":"78431:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19038,"name":"string","nodeType":"ElementaryTypeName","src":"78431:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78408:43:30"},"returnParameters":{"id":19044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19043,"mutability":"mutable","name":"keys","nameLocation":"78491:4:30","nodeType":"VariableDeclaration","scope":19045,"src":"78475:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":19041,"name":"string","nodeType":"ElementaryTypeName","src":"78475:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":19042,"nodeType":"ArrayTypeName","src":"78475:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"78474:22:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19055,"nodeType":"FunctionDefinition","src":"78577:106:30","nodes":[],"documentation":{"id":19046,"nodeType":"StructuredDocumentation","src":"78503:69:30","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"78586:15:30","parameters":{"id":19051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19048,"mutability":"mutable","name":"toml","nameLocation":"78618:4:30","nodeType":"VariableDeclaration","scope":19055,"src":"78602:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19047,"name":"string","nodeType":"ElementaryTypeName","src":"78602:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19050,"mutability":"mutable","name":"key","nameLocation":"78640:3:30","nodeType":"VariableDeclaration","scope":19055,"src":"78624:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19049,"name":"string","nodeType":"ElementaryTypeName","src":"78624:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78601:43:30"},"returnParameters":{"id":19054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19055,"src":"78668:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19052,"name":"string","nodeType":"ElementaryTypeName","src":"78668:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78667:15:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19066,"nodeType":"FunctionDefinition","src":"78765:113:30","nodes":[],"documentation":{"id":19056,"nodeType":"StructuredDocumentation","src":"78689:71:30","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"78774:20:30","parameters":{"id":19061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19058,"mutability":"mutable","name":"toml","nameLocation":"78811:4:30","nodeType":"VariableDeclaration","scope":19066,"src":"78795:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19057,"name":"string","nodeType":"ElementaryTypeName","src":"78795:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19060,"mutability":"mutable","name":"key","nameLocation":"78833:3:30","nodeType":"VariableDeclaration","scope":19066,"src":"78817:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19059,"name":"string","nodeType":"ElementaryTypeName","src":"78817:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78794:43:30"},"returnParameters":{"id":19065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19066,"src":"78861:15:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":19062,"name":"string","nodeType":"ElementaryTypeName","src":"78861:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":19063,"nodeType":"ArrayTypeName","src":"78861:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"78860:17:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19076,"nodeType":"FunctionDefinition","src":"78959:98:30","nodes":[],"documentation":{"id":19067,"nodeType":"StructuredDocumentation","src":"78884:70:30","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"78968:13:30","parameters":{"id":19072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19069,"mutability":"mutable","name":"toml","nameLocation":"78998:4:30","nodeType":"VariableDeclaration","scope":19076,"src":"78982:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19068,"name":"string","nodeType":"ElementaryTypeName","src":"78982:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19071,"mutability":"mutable","name":"key","nameLocation":"79020:3:30","nodeType":"VariableDeclaration","scope":19076,"src":"79004:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19070,"name":"string","nodeType":"ElementaryTypeName","src":"79004:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78981:43:30"},"returnParameters":{"id":19075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19076,"src":"79048:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19073,"name":"uint256","nodeType":"ElementaryTypeName","src":"79048:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79047:9:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19087,"nodeType":"FunctionDefinition","src":"79140:112:30","nodes":[],"documentation":{"id":19077,"nodeType":"StructuredDocumentation","src":"79063:72:30","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"79149:18:30","parameters":{"id":19082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19079,"mutability":"mutable","name":"toml","nameLocation":"79184:4:30","nodeType":"VariableDeclaration","scope":19087,"src":"79168:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19078,"name":"string","nodeType":"ElementaryTypeName","src":"79168:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19081,"mutability":"mutable","name":"key","nameLocation":"79206:3:30","nodeType":"VariableDeclaration","scope":19087,"src":"79190:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19080,"name":"string","nodeType":"ElementaryTypeName","src":"79190:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79167:43:30"},"returnParameters":{"id":19086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19087,"src":"79234:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":19083,"name":"uint256","nodeType":"ElementaryTypeName","src":"79234:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":19084,"nodeType":"ArrayTypeName","src":"79234:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"79233:18:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19095,"nodeType":"FunctionDefinition","src":"79292:93:30","nodes":[],"documentation":{"id":19088,"nodeType":"StructuredDocumentation","src":"79258:29:30","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"79301:9:30","parameters":{"id":19091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19090,"mutability":"mutable","name":"toml","nameLocation":"79327:4:30","nodeType":"VariableDeclaration","scope":19095,"src":"79311:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19089,"name":"string","nodeType":"ElementaryTypeName","src":"79311:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79310:22:30"},"returnParameters":{"id":19094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19093,"mutability":"mutable","name":"abiEncodedData","nameLocation":"79369:14:30","nodeType":"VariableDeclaration","scope":19095,"src":"79356:27:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":19092,"name":"bytes","nodeType":"ElementaryTypeName","src":"79356:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"79355:29:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19105,"nodeType":"FunctionDefinition","src":"79434:114:30","nodes":[],"documentation":{"id":19096,"nodeType":"StructuredDocumentation","src":"79391:38:30","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"79443:9:30","parameters":{"id":19101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19098,"mutability":"mutable","name":"toml","nameLocation":"79469:4:30","nodeType":"VariableDeclaration","scope":19105,"src":"79453:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19097,"name":"string","nodeType":"ElementaryTypeName","src":"79453:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19100,"mutability":"mutable","name":"key","nameLocation":"79491:3:30","nodeType":"VariableDeclaration","scope":19105,"src":"79475:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19099,"name":"string","nodeType":"ElementaryTypeName","src":"79475:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79452:43:30"},"returnParameters":{"id":19104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19103,"mutability":"mutable","name":"abiEncodedData","nameLocation":"79532:14:30","nodeType":"VariableDeclaration","scope":19105,"src":"79519:27:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":19102,"name":"bytes","nodeType":"ElementaryTypeName","src":"79519:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"79518:29:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19113,"nodeType":"FunctionDefinition","src":"79641:72:30","nodes":[],"documentation":{"id":19106,"nodeType":"StructuredDocumentation","src":"79554:82:30","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"79650:9:30","parameters":{"id":19111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19108,"mutability":"mutable","name":"json","nameLocation":"79676:4:30","nodeType":"VariableDeclaration","scope":19113,"src":"79660:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19107,"name":"string","nodeType":"ElementaryTypeName","src":"79660:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19110,"mutability":"mutable","name":"path","nameLocation":"79698:4:30","nodeType":"VariableDeclaration","scope":19113,"src":"79682:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19109,"name":"string","nodeType":"ElementaryTypeName","src":"79682:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79659:44:30"},"returnParameters":{"id":19112,"nodeType":"ParameterList","parameters":[],"src":"79712:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19123,"nodeType":"FunctionDefinition","src":"79982:98:30","nodes":[],"documentation":{"id":19114,"nodeType":"StructuredDocumentation","src":"79719:258:30","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"79991:9:30","parameters":{"id":19121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19116,"mutability":"mutable","name":"json","nameLocation":"80017:4:30","nodeType":"VariableDeclaration","scope":19123,"src":"80001:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19115,"name":"string","nodeType":"ElementaryTypeName","src":"80001:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19118,"mutability":"mutable","name":"path","nameLocation":"80039:4:30","nodeType":"VariableDeclaration","scope":19123,"src":"80023:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19117,"name":"string","nodeType":"ElementaryTypeName","src":"80023:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19120,"mutability":"mutable","name":"valueKey","nameLocation":"80061:8:30","nodeType":"VariableDeclaration","scope":19123,"src":"80045:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19119,"name":"string","nodeType":"ElementaryTypeName","src":"80045:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80000:70:30"},"returnParameters":{"id":19122,"nodeType":"ParameterList","parameters":[],"src":"80079:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19135,"nodeType":"FunctionDefinition","src":"80219:141:30","nodes":[],"documentation":{"id":19124,"nodeType":"StructuredDocumentation","src":"80122:92:30","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"80228:21:30","parameters":{"id":19131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19126,"mutability":"mutable","name":"salt","nameLocation":"80258:4:30","nodeType":"VariableDeclaration","scope":19135,"src":"80250:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80250:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19128,"mutability":"mutable","name":"initCodeHash","nameLocation":"80272:12:30","nodeType":"VariableDeclaration","scope":19135,"src":"80264:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80264:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19130,"mutability":"mutable","name":"deployer","nameLocation":"80294:8:30","nodeType":"VariableDeclaration","scope":19135,"src":"80286:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19129,"name":"address","nodeType":"ElementaryTypeName","src":"80286:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80249:54:30"},"returnParameters":{"id":19134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19135,"src":"80351:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19132,"name":"address","nodeType":"ElementaryTypeName","src":"80351:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80350:9:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19145,"nodeType":"FunctionDefinition","src":"80465:99:30","nodes":[],"documentation":{"id":19136,"nodeType":"StructuredDocumentation","src":"80366:94:30","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"80474:21:30","parameters":{"id":19141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19138,"mutability":"mutable","name":"salt","nameLocation":"80504:4:30","nodeType":"VariableDeclaration","scope":19145,"src":"80496:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80496:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19140,"mutability":"mutable","name":"initCodeHash","nameLocation":"80518:12:30","nodeType":"VariableDeclaration","scope":19145,"src":"80510:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80510:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"80495:36:30"},"returnParameters":{"id":19144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19145,"src":"80555:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19142,"name":"address","nodeType":"ElementaryTypeName","src":"80555:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80554:9:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19155,"nodeType":"FunctionDefinition","src":"80669:95:30","nodes":[],"documentation":{"id":19146,"nodeType":"StructuredDocumentation","src":"80570:94:30","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"80678:20:30","parameters":{"id":19151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19148,"mutability":"mutable","name":"deployer","nameLocation":"80707:8:30","nodeType":"VariableDeclaration","scope":19155,"src":"80699:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19147,"name":"address","nodeType":"ElementaryTypeName","src":"80699:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19150,"mutability":"mutable","name":"nonce","nameLocation":"80725:5:30","nodeType":"VariableDeclaration","scope":19155,"src":"80717:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19149,"name":"uint256","nodeType":"ElementaryTypeName","src":"80717:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80698:33:30"},"returnParameters":{"id":19154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19155,"src":"80755:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19152,"name":"address","nodeType":"ElementaryTypeName","src":"80755:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80754:9:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19163,"nodeType":"FunctionDefinition","src":"80820:75:30","nodes":[],"documentation":{"id":19156,"nodeType":"StructuredDocumentation","src":"80770:45:30","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"80829:11:30","parameters":{"id":19159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19158,"mutability":"mutable","name":"name","nameLocation":"80857:4:30","nodeType":"VariableDeclaration","scope":19163,"src":"80841:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19157,"name":"string","nodeType":"ElementaryTypeName","src":"80841:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80840:22:30"},"returnParameters":{"id":19162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19163,"src":"80886:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80886:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"80885:9:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19171,"nodeType":"FunctionDefinition","src":"80951:86:30","nodes":[],"documentation":{"id":19164,"nodeType":"StructuredDocumentation","src":"80901:45:30","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"80960:8:30","parameters":{"id":19167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19166,"mutability":"mutable","name":"account","nameLocation":"80977:7:30","nodeType":"VariableDeclaration","scope":19171,"src":"80969:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19165,"name":"address","nodeType":"ElementaryTypeName","src":"80969:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80968:17:30"},"returnParameters":{"id":19170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19169,"mutability":"mutable","name":"currentLabel","nameLocation":"81023:12:30","nodeType":"VariableDeclaration","scope":19171,"src":"81009:26:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19168,"name":"string","nodeType":"ElementaryTypeName","src":"81009:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81008:28:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19179,"nodeType":"FunctionDefinition","src":"81085:67:30","nodes":[],"documentation":{"id":19172,"nodeType":"StructuredDocumentation","src":"81043:37:30","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"81094:5:30","parameters":{"id":19177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19174,"mutability":"mutable","name":"account","nameLocation":"81108:7:30","nodeType":"VariableDeclaration","scope":19179,"src":"81100:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19173,"name":"address","nodeType":"ElementaryTypeName","src":"81100:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19176,"mutability":"mutable","name":"newLabel","nameLocation":"81133:8:30","nodeType":"VariableDeclaration","scope":19179,"src":"81117:24:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19175,"name":"string","nodeType":"ElementaryTypeName","src":"81117:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81099:43:30"},"returnParameters":{"id":19178,"nodeType":"ParameterList","parameters":[],"src":"81151:0:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19183,"nodeType":"FunctionDefinition","src":"81307:38:30","nodes":[],"documentation":{"id":19180,"nodeType":"StructuredDocumentation","src":"81158:144:30","text":"Pauses collection of call traces. Useful in cases when you want to skip tracing of\n complex calls which are not useful for debugging."},"functionSelector":"c94d1f90","implemented":false,"kind":"function","modifiers":[],"name":"pauseTracing","nameLocation":"81316:12:30","parameters":{"id":19181,"nodeType":"ParameterList","parameters":[],"src":"81328:2:30"},"returnParameters":{"id":19182,"nodeType":"ParameterList","parameters":[],"src":"81344:0:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19189,"nodeType":"FunctionDefinition","src":"81387:52:30","nodes":[],"documentation":{"id":19184,"nodeType":"StructuredDocumentation","src":"81351:31:30","text":"Returns a random `address`."},"functionSelector":"d5bee9f5","implemented":false,"kind":"function","modifiers":[],"name":"randomAddress","nameLocation":"81396:13:30","parameters":{"id":19185,"nodeType":"ParameterList","parameters":[],"src":"81409:2:30"},"returnParameters":{"id":19188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19189,"src":"81430:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19186,"name":"address","nodeType":"ElementaryTypeName","src":"81430:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"81429:9:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19195,"nodeType":"FunctionDefinition","src":"81485:49:30","nodes":[],"documentation":{"id":19190,"nodeType":"StructuredDocumentation","src":"81445:35:30","text":"Returns a random uint256 value."},"functionSelector":"25124730","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"81494:10:30","parameters":{"id":19191,"nodeType":"ParameterList","parameters":[],"src":"81504:2:30"},"returnParameters":{"id":19194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19195,"src":"81525:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19192,"name":"uint256","nodeType":"ElementaryTypeName","src":"81525:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81524:9:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19205,"nodeType":"FunctionDefinition","src":"81617:73:30","nodes":[],"documentation":{"id":19196,"nodeType":"StructuredDocumentation","src":"81540:72:30","text":"Returns random uin256 value between the provided range (=min..=max)."},"functionSelector":"d61b051b","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"81626:10:30","parameters":{"id":19201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19198,"mutability":"mutable","name":"min","nameLocation":"81645:3:30","nodeType":"VariableDeclaration","scope":19205,"src":"81637:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19197,"name":"uint256","nodeType":"ElementaryTypeName","src":"81637:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19200,"mutability":"mutable","name":"max","nameLocation":"81658:3:30","nodeType":"VariableDeclaration","scope":19205,"src":"81650:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19199,"name":"uint256","nodeType":"ElementaryTypeName","src":"81650:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81636:26:30"},"returnParameters":{"id":19204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19205,"src":"81681:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19202,"name":"uint256","nodeType":"ElementaryTypeName","src":"81681:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81680:9:30"},"scope":19242,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19209,"nodeType":"FunctionDefinition","src":"81740:39:30","nodes":[],"documentation":{"id":19206,"nodeType":"StructuredDocumentation","src":"81696:39:30","text":"Unpauses collection of call traces."},"functionSelector":"72a09ccb","implemented":false,"kind":"function","modifiers":[],"name":"resumeTracing","nameLocation":"81749:13:30","parameters":{"id":19207,"nodeType":"ParameterList","parameters":[],"src":"81762:2:30"},"returnParameters":{"id":19208,"nodeType":"ParameterList","parameters":[],"src":"81778:0:30"},"scope":19242,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19217,"nodeType":"FunctionDefinition","src":"81840:80:30","nodes":[],"documentation":{"id":19210,"nodeType":"StructuredDocumentation","src":"81785:50:30","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"81849:11:30","parameters":{"id":19213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19212,"mutability":"mutable","name":"data","nameLocation":"81876:4:30","nodeType":"VariableDeclaration","scope":19217,"src":"81861:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19211,"name":"bytes","nodeType":"ElementaryTypeName","src":"81861:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81860:21:30"},"returnParameters":{"id":19216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19217,"src":"81905:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19214,"name":"string","nodeType":"ElementaryTypeName","src":"81905:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81904:15:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19225,"nodeType":"FunctionDefinition","src":"81982:81:30","nodes":[],"documentation":{"id":19218,"nodeType":"StructuredDocumentation","src":"81926:51:30","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"81991:11:30","parameters":{"id":19221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19220,"mutability":"mutable","name":"data","nameLocation":"82019:4:30","nodeType":"VariableDeclaration","scope":19225,"src":"82003:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19219,"name":"string","nodeType":"ElementaryTypeName","src":"82003:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82002:22:30"},"returnParameters":{"id":19224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19225,"src":"82048:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19222,"name":"string","nodeType":"ElementaryTypeName","src":"82048:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82047:15:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19233,"nodeType":"FunctionDefinition","src":"82121:77:30","nodes":[],"documentation":{"id":19226,"nodeType":"StructuredDocumentation","src":"82069:47:30","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"82130:8:30","parameters":{"id":19229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19228,"mutability":"mutable","name":"data","nameLocation":"82154:4:30","nodeType":"VariableDeclaration","scope":19233,"src":"82139:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19227,"name":"bytes","nodeType":"ElementaryTypeName","src":"82139:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"82138:21:30"},"returnParameters":{"id":19232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19233,"src":"82183:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19230,"name":"string","nodeType":"ElementaryTypeName","src":"82183:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82182:15:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19241,"nodeType":"FunctionDefinition","src":"82257:78:30","nodes":[],"documentation":{"id":19234,"nodeType":"StructuredDocumentation","src":"82204:48:30","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"82266:8:30","parameters":{"id":19237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19236,"mutability":"mutable","name":"data","nameLocation":"82291:4:30","nodeType":"VariableDeclaration","scope":19241,"src":"82275:20:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19235,"name":"string","nodeType":"ElementaryTypeName","src":"82275:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82274:22:30"},"returnParameters":{"id":19240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19241,"src":"82320:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19238,"name":"string","nodeType":"ElementaryTypeName","src":"82320:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82319:15:30"},"scope":19242,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":15835,"nodeType":"StructuredDocumentation","src":"184:225:30","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[19242],"name":"VmSafe","nameLocation":"419:6:30","scope":19898,"usedErrors":[],"usedEvents":[]},{"id":19897,"nodeType":"ContractDefinition","src":"82510:16027:30","nodes":[{"id":19251,"nodeType":"FunctionDefinition","src":"82670:61:30","nodes":[],"documentation":{"id":19246,"nodeType":"StructuredDocumentation","src":"82569:96:30","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"82679:10:30","parameters":{"id":19247,"nodeType":"ParameterList","parameters":[],"src":"82689:2:30"},"returnParameters":{"id":19250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19249,"mutability":"mutable","name":"forkId","nameLocation":"82723:6:30","nodeType":"VariableDeclaration","scope":19251,"src":"82715:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19248,"name":"uint256","nodeType":"ElementaryTypeName","src":"82715:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82714:16:30"},"scope":19897,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19257,"nodeType":"FunctionDefinition","src":"82815:51:30","nodes":[],"documentation":{"id":19252,"nodeType":"StructuredDocumentation","src":"82737:73:30","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"82824:15:30","parameters":{"id":19255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19254,"mutability":"mutable","name":"account","nameLocation":"82848:7:30","nodeType":"VariableDeclaration","scope":19257,"src":"82840:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19253,"name":"address","nodeType":"ElementaryTypeName","src":"82840:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82839:17:30"},"returnParameters":{"id":19256,"nodeType":"ParameterList","parameters":[],"src":"82865:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19263,"nodeType":"FunctionDefinition","src":"82905:54:30","nodes":[],"documentation":{"id":19258,"nodeType":"StructuredDocumentation","src":"82872:28:30","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"82914:11:30","parameters":{"id":19261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19260,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"82934:14:30","nodeType":"VariableDeclaration","scope":19263,"src":"82926:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19259,"name":"uint256","nodeType":"ElementaryTypeName","src":"82926:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82925:24:30"},"returnParameters":{"id":19262,"nodeType":"ParameterList","parameters":[],"src":"82958:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19270,"nodeType":"FunctionDefinition","src":"83126:56:30","nodes":[],"documentation":{"id":19264,"nodeType":"StructuredDocumentation","src":"82965:156:30","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"83135:10:30","parameters":{"id":19268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19267,"mutability":"mutable","name":"hashes","nameLocation":"83165:6:30","nodeType":"VariableDeclaration","scope":19270,"src":"83146:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":19265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"83146:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":19266,"nodeType":"ArrayTypeName","src":"83146:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"83145:27:30"},"returnParameters":{"id":19269,"nodeType":"ParameterList","parameters":[],"src":"83181:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19276,"nodeType":"FunctionDefinition","src":"83218:46:30","nodes":[],"documentation":{"id":19271,"nodeType":"StructuredDocumentation","src":"83188:25:30","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"83227:7:30","parameters":{"id":19274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19273,"mutability":"mutable","name":"newChainId","nameLocation":"83243:10:30","nodeType":"VariableDeclaration","scope":19276,"src":"83235:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19272,"name":"uint256","nodeType":"ElementaryTypeName","src":"83235:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83234:20:30"},"returnParameters":{"id":19275,"nodeType":"ParameterList","parameters":[],"src":"83263:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19280,"nodeType":"FunctionDefinition","src":"83303:37:30","nodes":[],"documentation":{"id":19277,"nodeType":"StructuredDocumentation","src":"83270:28:30","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"83312:16:30","parameters":{"id":19278,"nodeType":"ParameterList","parameters":[],"src":"83328:2:30"},"returnParameters":{"id":19279,"nodeType":"ParameterList","parameters":[],"src":"83339:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19286,"nodeType":"FunctionDefinition","src":"83377:48:30","nodes":[],"documentation":{"id":19281,"nodeType":"StructuredDocumentation","src":"83346:26:30","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"83386:8:30","parameters":{"id":19284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19283,"mutability":"mutable","name":"newCoinbase","nameLocation":"83403:11:30","nodeType":"VariableDeclaration","scope":19286,"src":"83395:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19282,"name":"address","nodeType":"ElementaryTypeName","src":"83395:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83394:21:30"},"returnParameters":{"id":19285,"nodeType":"ParameterList","parameters":[],"src":"83424:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19294,"nodeType":"FunctionDefinition","src":"83545:82:30","nodes":[],"documentation":{"id":19287,"nodeType":"StructuredDocumentation","src":"83431:109:30","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"83554:10:30","parameters":{"id":19290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19289,"mutability":"mutable","name":"urlOrAlias","nameLocation":"83581:10:30","nodeType":"VariableDeclaration","scope":19294,"src":"83565:26:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19288,"name":"string","nodeType":"ElementaryTypeName","src":"83565:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83564:28:30"},"returnParameters":{"id":19293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19292,"mutability":"mutable","name":"forkId","nameLocation":"83619:6:30","nodeType":"VariableDeclaration","scope":19294,"src":"83611:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19291,"name":"uint256","nodeType":"ElementaryTypeName","src":"83611:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83610:16:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19304,"nodeType":"FunctionDefinition","src":"83734:103:30","nodes":[],"documentation":{"id":19295,"nodeType":"StructuredDocumentation","src":"83633:96:30","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"83743:10:30","parameters":{"id":19300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19297,"mutability":"mutable","name":"urlOrAlias","nameLocation":"83770:10:30","nodeType":"VariableDeclaration","scope":19304,"src":"83754:26:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19296,"name":"string","nodeType":"ElementaryTypeName","src":"83754:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19299,"mutability":"mutable","name":"blockNumber","nameLocation":"83790:11:30","nodeType":"VariableDeclaration","scope":19304,"src":"83782:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19298,"name":"uint256","nodeType":"ElementaryTypeName","src":"83782:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83753:49:30"},"returnParameters":{"id":19303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19302,"mutability":"mutable","name":"forkId","nameLocation":"83829:6:30","nodeType":"VariableDeclaration","scope":19304,"src":"83821:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19301,"name":"uint256","nodeType":"ElementaryTypeName","src":"83821:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83820:16:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19314,"nodeType":"FunctionDefinition","src":"84062:98:30","nodes":[],"documentation":{"id":19305,"nodeType":"StructuredDocumentation","src":"83843:214:30","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"84071:10:30","parameters":{"id":19310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19307,"mutability":"mutable","name":"urlOrAlias","nameLocation":"84098:10:30","nodeType":"VariableDeclaration","scope":19314,"src":"84082:26:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19306,"name":"string","nodeType":"ElementaryTypeName","src":"84082:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19309,"mutability":"mutable","name":"txHash","nameLocation":"84118:6:30","nodeType":"VariableDeclaration","scope":19314,"src":"84110:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84110:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"84081:44:30"},"returnParameters":{"id":19313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19312,"mutability":"mutable","name":"forkId","nameLocation":"84152:6:30","nodeType":"VariableDeclaration","scope":19314,"src":"84144:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19311,"name":"uint256","nodeType":"ElementaryTypeName","src":"84144:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84143:16:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19322,"nodeType":"FunctionDefinition","src":"84295:88:30","nodes":[],"documentation":{"id":19315,"nodeType":"StructuredDocumentation","src":"84166:124:30","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"84304:16:30","parameters":{"id":19318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19317,"mutability":"mutable","name":"urlOrAlias","nameLocation":"84337:10:30","nodeType":"VariableDeclaration","scope":19322,"src":"84321:26:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19316,"name":"string","nodeType":"ElementaryTypeName","src":"84321:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84320:28:30"},"returnParameters":{"id":19321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19320,"mutability":"mutable","name":"forkId","nameLocation":"84375:6:30","nodeType":"VariableDeclaration","scope":19322,"src":"84367:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19319,"name":"uint256","nodeType":"ElementaryTypeName","src":"84367:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84366:16:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19332,"nodeType":"FunctionDefinition","src":"84507:109:30","nodes":[],"documentation":{"id":19323,"nodeType":"StructuredDocumentation","src":"84389:113:30","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"84516:16:30","parameters":{"id":19328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19325,"mutability":"mutable","name":"urlOrAlias","nameLocation":"84549:10:30","nodeType":"VariableDeclaration","scope":19332,"src":"84533:26:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19324,"name":"string","nodeType":"ElementaryTypeName","src":"84533:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19327,"mutability":"mutable","name":"blockNumber","nameLocation":"84569:11:30","nodeType":"VariableDeclaration","scope":19332,"src":"84561:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19326,"name":"uint256","nodeType":"ElementaryTypeName","src":"84561:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84532:49:30"},"returnParameters":{"id":19331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19330,"mutability":"mutable","name":"forkId","nameLocation":"84608:6:30","nodeType":"VariableDeclaration","scope":19332,"src":"84600:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19329,"name":"uint256","nodeType":"ElementaryTypeName","src":"84600:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84599:16:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19342,"nodeType":"FunctionDefinition","src":"84852:104:30","nodes":[],"documentation":{"id":19333,"nodeType":"StructuredDocumentation","src":"84622:225:30","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"84861:16:30","parameters":{"id":19338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19335,"mutability":"mutable","name":"urlOrAlias","nameLocation":"84894:10:30","nodeType":"VariableDeclaration","scope":19342,"src":"84878:26:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19334,"name":"string","nodeType":"ElementaryTypeName","src":"84878:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19337,"mutability":"mutable","name":"txHash","nameLocation":"84914:6:30","nodeType":"VariableDeclaration","scope":19342,"src":"84906:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84906:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"84877:44:30"},"returnParameters":{"id":19341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19340,"mutability":"mutable","name":"forkId","nameLocation":"84948:6:30","nodeType":"VariableDeclaration","scope":19342,"src":"84940:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19339,"name":"uint256","nodeType":"ElementaryTypeName","src":"84940:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84939:16:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19350,"nodeType":"FunctionDefinition","src":"84996:60:30","nodes":[],"documentation":{"id":19343,"nodeType":"StructuredDocumentation","src":"84962:29:30","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"85005:4:30","parameters":{"id":19348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19345,"mutability":"mutable","name":"account","nameLocation":"85018:7:30","nodeType":"VariableDeclaration","scope":19350,"src":"85010:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19344,"name":"address","nodeType":"ElementaryTypeName","src":"85010:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19347,"mutability":"mutable","name":"newBalance","nameLocation":"85035:10:30","nodeType":"VariableDeclaration","scope":19350,"src":"85027:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19346,"name":"uint256","nodeType":"ElementaryTypeName","src":"85027:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85009:37:30"},"returnParameters":{"id":19349,"nodeType":"ParameterList","parameters":[],"src":"85055:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19358,"nodeType":"FunctionDefinition","src":"85294:76:30","nodes":[],"documentation":{"id":19351,"nodeType":"StructuredDocumentation","src":"85062:227:30","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"85303:14:30","parameters":{"id":19354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19353,"mutability":"mutable","name":"snapshotId","nameLocation":"85326:10:30","nodeType":"VariableDeclaration","scope":19358,"src":"85318:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19352,"name":"uint256","nodeType":"ElementaryTypeName","src":"85318:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85317:20:30"},"returnParameters":{"id":19357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19356,"mutability":"mutable","name":"success","nameLocation":"85361:7:30","nodeType":"VariableDeclaration","scope":19358,"src":"85356:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19355,"name":"bool","nodeType":"ElementaryTypeName","src":"85356:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"85355:14:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19362,"nodeType":"FunctionDefinition","src":"85442:36:30","nodes":[],"documentation":{"id":19359,"nodeType":"StructuredDocumentation","src":"85376:61:30","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"85451:15:30","parameters":{"id":19360,"nodeType":"ParameterList","parameters":[],"src":"85466:2:30"},"returnParameters":{"id":19361,"nodeType":"ParameterList","parameters":[],"src":"85477:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19368,"nodeType":"FunctionDefinition","src":"85654:52:30","nodes":[],"documentation":{"id":19363,"nodeType":"StructuredDocumentation","src":"85484:165:30","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"85663:10:30","parameters":{"id":19366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19365,"mutability":"mutable","name":"newDifficulty","nameLocation":"85682:13:30","nodeType":"VariableDeclaration","scope":19368,"src":"85674:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19364,"name":"uint256","nodeType":"ElementaryTypeName","src":"85674:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85673:23:30"},"returnParameters":{"id":19367,"nodeType":"ParameterList","parameters":[],"src":"85705:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19374,"nodeType":"FunctionDefinition","src":"85765:61:30","nodes":[],"documentation":{"id":19369,"nodeType":"StructuredDocumentation","src":"85712:48:30","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"85774:9:30","parameters":{"id":19372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19371,"mutability":"mutable","name":"pathToStateJson","nameLocation":"85800:15:30","nodeType":"VariableDeclaration","scope":19374,"src":"85784:31:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19370,"name":"string","nodeType":"ElementaryTypeName","src":"85784:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85783:33:30"},"returnParameters":{"id":19373,"nodeType":"ParameterList","parameters":[],"src":"85825:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19382,"nodeType":"FunctionDefinition","src":"85863:74:30","nodes":[],"documentation":{"id":19375,"nodeType":"StructuredDocumentation","src":"85832:26:30","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"85872:4:30","parameters":{"id":19380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19377,"mutability":"mutable","name":"target","nameLocation":"85885:6:30","nodeType":"VariableDeclaration","scope":19382,"src":"85877:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19376,"name":"address","nodeType":"ElementaryTypeName","src":"85877:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19379,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"85908:18:30","nodeType":"VariableDeclaration","scope":19382,"src":"85893:33:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19378,"name":"bytes","nodeType":"ElementaryTypeName","src":"85893:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"85876:51:30"},"returnParameters":{"id":19381,"nodeType":"ParameterList","parameters":[],"src":"85936:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19388,"nodeType":"FunctionDefinition","src":"85973:42:30","nodes":[],"documentation":{"id":19383,"nodeType":"StructuredDocumentation","src":"85943:25:30","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"85982:3:30","parameters":{"id":19386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19385,"mutability":"mutable","name":"newBasefee","nameLocation":"85994:10:30","nodeType":"VariableDeclaration","scope":19388,"src":"85986:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19384,"name":"uint256","nodeType":"ElementaryTypeName","src":"85986:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85985:20:30"},"returnParameters":{"id":19387,"nodeType":"ParameterList","parameters":[],"src":"86014:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19395,"nodeType":"FunctionDefinition","src":"86193:73:30","nodes":[],"documentation":{"id":19389,"nodeType":"StructuredDocumentation","src":"86021:167:30","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"86202:13:30","parameters":{"id":19390,"nodeType":"ParameterList","parameters":[],"src":"86215:2:30"},"returnParameters":{"id":19394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19393,"mutability":"mutable","name":"hashes","nameLocation":"86258:6:30","nodeType":"VariableDeclaration","scope":19395,"src":"86241:23:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":19391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86241:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":19392,"nodeType":"ArrayTypeName","src":"86241:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"86240:25:30"},"scope":19897,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19403,"nodeType":"FunctionDefinition","src":"86333:79:30","nodes":[],"documentation":{"id":19396,"nodeType":"StructuredDocumentation","src":"86272:56:30","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"86342:12:30","parameters":{"id":19399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19398,"mutability":"mutable","name":"account","nameLocation":"86363:7:30","nodeType":"VariableDeclaration","scope":19403,"src":"86355:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19397,"name":"address","nodeType":"ElementaryTypeName","src":"86355:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86354:17:30"},"returnParameters":{"id":19402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19401,"mutability":"mutable","name":"persistent","nameLocation":"86400:10:30","nodeType":"VariableDeclaration","scope":19403,"src":"86395:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19400,"name":"bool","nodeType":"ElementaryTypeName","src":"86395:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"86394:17:30"},"scope":19897,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19409,"nodeType":"FunctionDefinition","src":"86493:63:30","nodes":[],"documentation":{"id":19404,"nodeType":"StructuredDocumentation","src":"86418:70:30","text":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"86502:10:30","parameters":{"id":19407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19406,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"86529:16:30","nodeType":"VariableDeclaration","scope":19409,"src":"86513:32:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19405,"name":"string","nodeType":"ElementaryTypeName","src":"86513:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86512:34:30"},"returnParameters":{"id":19408,"nodeType":"ParameterList","parameters":[],"src":"86555:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19415,"nodeType":"FunctionDefinition","src":"86759:50:30","nodes":[],"documentation":{"id":19410,"nodeType":"StructuredDocumentation","src":"86562:192:30","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"86768:14:30","parameters":{"id":19413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19412,"mutability":"mutable","name":"account","nameLocation":"86791:7:30","nodeType":"VariableDeclaration","scope":19415,"src":"86783:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19411,"name":"address","nodeType":"ElementaryTypeName","src":"86783:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86782:17:30"},"returnParameters":{"id":19414,"nodeType":"ParameterList","parameters":[],"src":"86808:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19423,"nodeType":"FunctionDefinition","src":"86854:69:30","nodes":[],"documentation":{"id":19416,"nodeType":"StructuredDocumentation","src":"86815:34:30","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"86863:14:30","parameters":{"id":19421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19418,"mutability":"mutable","name":"account0","nameLocation":"86886:8:30","nodeType":"VariableDeclaration","scope":19423,"src":"86878:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19417,"name":"address","nodeType":"ElementaryTypeName","src":"86878:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19420,"mutability":"mutable","name":"account1","nameLocation":"86904:8:30","nodeType":"VariableDeclaration","scope":19423,"src":"86896:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19419,"name":"address","nodeType":"ElementaryTypeName","src":"86896:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86877:36:30"},"returnParameters":{"id":19422,"nodeType":"ParameterList","parameters":[],"src":"86922:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19433,"nodeType":"FunctionDefinition","src":"86968:87:30","nodes":[],"documentation":{"id":19424,"nodeType":"StructuredDocumentation","src":"86929:34:30","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"86977:14:30","parameters":{"id":19431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19426,"mutability":"mutable","name":"account0","nameLocation":"87000:8:30","nodeType":"VariableDeclaration","scope":19433,"src":"86992:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19425,"name":"address","nodeType":"ElementaryTypeName","src":"86992:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19428,"mutability":"mutable","name":"account1","nameLocation":"87018:8:30","nodeType":"VariableDeclaration","scope":19433,"src":"87010:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19427,"name":"address","nodeType":"ElementaryTypeName","src":"87010:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19430,"mutability":"mutable","name":"account2","nameLocation":"87036:8:30","nodeType":"VariableDeclaration","scope":19433,"src":"87028:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19429,"name":"address","nodeType":"ElementaryTypeName","src":"87028:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86991:54:30"},"returnParameters":{"id":19432,"nodeType":"ParameterList","parameters":[],"src":"87054:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19440,"nodeType":"FunctionDefinition","src":"87100:62:30","nodes":[],"documentation":{"id":19434,"nodeType":"StructuredDocumentation","src":"87061:34:30","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"87109:14:30","parameters":{"id":19438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19437,"mutability":"mutable","name":"accounts","nameLocation":"87143:8:30","nodeType":"VariableDeclaration","scope":19440,"src":"87124:27:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19435,"name":"address","nodeType":"ElementaryTypeName","src":"87124:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19436,"nodeType":"ArrayTypeName","src":"87124:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"87123:29:30"},"returnParameters":{"id":19439,"nodeType":"ParameterList","parameters":[],"src":"87161:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19450,"nodeType":"FunctionDefinition","src":"87233:97:30","nodes":[],"documentation":{"id":19441,"nodeType":"StructuredDocumentation","src":"87168:60:30","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"87242:14:30","parameters":{"id":19448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19443,"mutability":"mutable","name":"callee","nameLocation":"87265:6:30","nodeType":"VariableDeclaration","scope":19450,"src":"87257:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19442,"name":"address","nodeType":"ElementaryTypeName","src":"87257:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19445,"mutability":"mutable","name":"data","nameLocation":"87288:4:30","nodeType":"VariableDeclaration","scope":19450,"src":"87273:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19444,"name":"bytes","nodeType":"ElementaryTypeName","src":"87273:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19447,"mutability":"mutable","name":"revertData","nameLocation":"87309:10:30","nodeType":"VariableDeclaration","scope":19450,"src":"87294:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19446,"name":"bytes","nodeType":"ElementaryTypeName","src":"87294:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87256:64:30"},"returnParameters":{"id":19449,"nodeType":"ParameterList","parameters":[],"src":"87329:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19462,"nodeType":"FunctionDefinition","src":"87430:123:30","nodes":[],"documentation":{"id":19451,"nodeType":"StructuredDocumentation","src":"87336:89:30","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"87439:14:30","parameters":{"id":19460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19453,"mutability":"mutable","name":"callee","nameLocation":"87462:6:30","nodeType":"VariableDeclaration","scope":19462,"src":"87454:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19452,"name":"address","nodeType":"ElementaryTypeName","src":"87454:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19455,"mutability":"mutable","name":"msgValue","nameLocation":"87478:8:30","nodeType":"VariableDeclaration","scope":19462,"src":"87470:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19454,"name":"uint256","nodeType":"ElementaryTypeName","src":"87470:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19457,"mutability":"mutable","name":"data","nameLocation":"87503:4:30","nodeType":"VariableDeclaration","scope":19462,"src":"87488:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19456,"name":"bytes","nodeType":"ElementaryTypeName","src":"87488:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19459,"mutability":"mutable","name":"revertData","nameLocation":"87524:10:30","nodeType":"VariableDeclaration","scope":19462,"src":"87509:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19458,"name":"bytes","nodeType":"ElementaryTypeName","src":"87509:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87453:82:30"},"returnParameters":{"id":19461,"nodeType":"ParameterList","parameters":[],"src":"87552:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19472,"nodeType":"FunctionDefinition","src":"87813:91:30","nodes":[],"documentation":{"id":19463,"nodeType":"StructuredDocumentation","src":"87559:249:30","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"87822:8:30","parameters":{"id":19470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19465,"mutability":"mutable","name":"callee","nameLocation":"87839:6:30","nodeType":"VariableDeclaration","scope":19472,"src":"87831:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19464,"name":"address","nodeType":"ElementaryTypeName","src":"87831:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19467,"mutability":"mutable","name":"data","nameLocation":"87862:4:30","nodeType":"VariableDeclaration","scope":19472,"src":"87847:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19466,"name":"bytes","nodeType":"ElementaryTypeName","src":"87847:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19469,"mutability":"mutable","name":"returnData","nameLocation":"87883:10:30","nodeType":"VariableDeclaration","scope":19472,"src":"87868:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19468,"name":"bytes","nodeType":"ElementaryTypeName","src":"87868:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87830:64:30"},"returnParameters":{"id":19471,"nodeType":"ParameterList","parameters":[],"src":"87903:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19484,"nodeType":"FunctionDefinition","src":"88079:109:30","nodes":[],"documentation":{"id":19473,"nodeType":"StructuredDocumentation","src":"87910:164:30","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"88088:8:30","parameters":{"id":19482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19475,"mutability":"mutable","name":"callee","nameLocation":"88105:6:30","nodeType":"VariableDeclaration","scope":19484,"src":"88097:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19474,"name":"address","nodeType":"ElementaryTypeName","src":"88097:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19477,"mutability":"mutable","name":"msgValue","nameLocation":"88121:8:30","nodeType":"VariableDeclaration","scope":19484,"src":"88113:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19476,"name":"uint256","nodeType":"ElementaryTypeName","src":"88113:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19479,"mutability":"mutable","name":"data","nameLocation":"88146:4:30","nodeType":"VariableDeclaration","scope":19484,"src":"88131:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19478,"name":"bytes","nodeType":"ElementaryTypeName","src":"88131:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19481,"mutability":"mutable","name":"returnData","nameLocation":"88167:10:30","nodeType":"VariableDeclaration","scope":19484,"src":"88152:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19480,"name":"bytes","nodeType":"ElementaryTypeName","src":"88152:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88096:82:30"},"returnParameters":{"id":19483,"nodeType":"ParameterList","parameters":[],"src":"88187:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19490,"nodeType":"FunctionDefinition","src":"88263:43:30","nodes":[],"documentation":{"id":19485,"nodeType":"StructuredDocumentation","src":"88194:64:30","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"88272:5:30","parameters":{"id":19488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19487,"mutability":"mutable","name":"msgSender","nameLocation":"88286:9:30","nodeType":"VariableDeclaration","scope":19490,"src":"88278:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19486,"name":"address","nodeType":"ElementaryTypeName","src":"88278:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88277:19:30"},"returnParameters":{"id":19489,"nodeType":"ParameterList","parameters":[],"src":"88305:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19498,"nodeType":"FunctionDefinition","src":"88425:61:30","nodes":[],"documentation":{"id":19491,"nodeType":"StructuredDocumentation","src":"88312:108:30","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"88434:5:30","parameters":{"id":19496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19493,"mutability":"mutable","name":"msgSender","nameLocation":"88448:9:30","nodeType":"VariableDeclaration","scope":19498,"src":"88440:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19492,"name":"address","nodeType":"ElementaryTypeName","src":"88440:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19495,"mutability":"mutable","name":"txOrigin","nameLocation":"88467:8:30","nodeType":"VariableDeclaration","scope":19498,"src":"88459:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19494,"name":"address","nodeType":"ElementaryTypeName","src":"88459:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88439:37:30"},"returnParameters":{"id":19497,"nodeType":"ParameterList","parameters":[],"src":"88485:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19504,"nodeType":"FunctionDefinition","src":"88663:52:30","nodes":[],"documentation":{"id":19499,"nodeType":"StructuredDocumentation","src":"88492:166:30","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"88672:10:30","parameters":{"id":19502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19501,"mutability":"mutable","name":"newPrevrandao","nameLocation":"88691:13:30","nodeType":"VariableDeclaration","scope":19504,"src":"88683:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"88683:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"88682:23:30"},"returnParameters":{"id":19503,"nodeType":"ParameterList","parameters":[],"src":"88714:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19510,"nodeType":"FunctionDefinition","src":"88892:52:30","nodes":[],"documentation":{"id":19505,"nodeType":"StructuredDocumentation","src":"88721:166:30","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"88901:10:30","parameters":{"id":19508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19507,"mutability":"mutable","name":"newPrevrandao","nameLocation":"88920:13:30","nodeType":"VariableDeclaration","scope":19510,"src":"88912:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19506,"name":"uint256","nodeType":"ElementaryTypeName","src":"88912:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88911:23:30"},"returnParameters":{"id":19509,"nodeType":"ParameterList","parameters":[],"src":"88943:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19521,"nodeType":"FunctionDefinition","src":"89072:101:30","nodes":[],"documentation":{"id":19511,"nodeType":"StructuredDocumentation","src":"88950:117:30","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"89081:11:30","parameters":{"id":19512,"nodeType":"ParameterList","parameters":[],"src":"89092:2:30"},"returnParameters":{"id":19520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19515,"mutability":"mutable","name":"callerMode","nameLocation":"89124:10:30","nodeType":"VariableDeclaration","scope":19521,"src":"89113:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$15842","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":19514,"nodeType":"UserDefinedTypeName","pathNode":{"id":19513,"name":"CallerMode","nameLocations":["89113:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":15842,"src":"89113:10:30"},"referencedDeclaration":15842,"src":"89113:10:30","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$15842","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":19517,"mutability":"mutable","name":"msgSender","nameLocation":"89144:9:30","nodeType":"VariableDeclaration","scope":19521,"src":"89136:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19516,"name":"address","nodeType":"ElementaryTypeName","src":"89136:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19519,"mutability":"mutable","name":"txOrigin","nameLocation":"89163:8:30","nodeType":"VariableDeclaration","scope":19521,"src":"89155:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19518,"name":"address","nodeType":"ElementaryTypeName","src":"89155:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89112:60:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19527,"nodeType":"FunctionDefinition","src":"89261:46:30","nodes":[],"documentation":{"id":19522,"nodeType":"StructuredDocumentation","src":"89179:77:30","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"89270:10:30","parameters":{"id":19525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19524,"mutability":"mutable","name":"account","nameLocation":"89289:7:30","nodeType":"VariableDeclaration","scope":19527,"src":"89281:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19523,"name":"address","nodeType":"ElementaryTypeName","src":"89281:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89280:17:30"},"returnParameters":{"id":19526,"nodeType":"ParameterList","parameters":[],"src":"89306:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19535,"nodeType":"FunctionDefinition","src":"89650:70:30","nodes":[],"documentation":{"id":19528,"nodeType":"StructuredDocumentation","src":"89313:332:30","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"89659:8:30","parameters":{"id":19531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19530,"mutability":"mutable","name":"snapshotId","nameLocation":"89676:10:30","nodeType":"VariableDeclaration","scope":19535,"src":"89668:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19529,"name":"uint256","nodeType":"ElementaryTypeName","src":"89668:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89667:20:30"},"returnParameters":{"id":19534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19533,"mutability":"mutable","name":"success","nameLocation":"89711:7:30","nodeType":"VariableDeclaration","scope":19535,"src":"89706:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19532,"name":"bool","nodeType":"ElementaryTypeName","src":"89706:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"89705:14:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19543,"nodeType":"FunctionDefinition","src":"90003:79:30","nodes":[],"documentation":{"id":19536,"nodeType":"StructuredDocumentation","src":"89726:272:30","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"90012:17:30","parameters":{"id":19539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19538,"mutability":"mutable","name":"snapshotId","nameLocation":"90038:10:30","nodeType":"VariableDeclaration","scope":19543,"src":"90030:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19537,"name":"uint256","nodeType":"ElementaryTypeName","src":"90030:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90029:20:30"},"returnParameters":{"id":19542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19541,"mutability":"mutable","name":"success","nameLocation":"90073:7:30","nodeType":"VariableDeclaration","scope":19543,"src":"90068:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19540,"name":"bool","nodeType":"ElementaryTypeName","src":"90068:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"90067:14:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19549,"nodeType":"FunctionDefinition","src":"90179:52:30","nodes":[],"documentation":{"id":19544,"nodeType":"StructuredDocumentation","src":"90088:86:30","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"90188:16:30","parameters":{"id":19547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19546,"mutability":"mutable","name":"account","nameLocation":"90213:7:30","nodeType":"VariableDeclaration","scope":19549,"src":"90205:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19545,"name":"address","nodeType":"ElementaryTypeName","src":"90205:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"90204:17:30"},"returnParameters":{"id":19548,"nodeType":"ParameterList","parameters":[],"src":"90230:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19556,"nodeType":"FunctionDefinition","src":"90278:64:30","nodes":[],"documentation":{"id":19550,"nodeType":"StructuredDocumentation","src":"90237:36:30","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"90287:16:30","parameters":{"id":19554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19553,"mutability":"mutable","name":"accounts","nameLocation":"90323:8:30","nodeType":"VariableDeclaration","scope":19556,"src":"90304:27:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19551,"name":"address","nodeType":"ElementaryTypeName","src":"90304:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19552,"nodeType":"ArrayTypeName","src":"90304:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"90303:29:30"},"returnParameters":{"id":19555,"nodeType":"ParameterList","parameters":[],"src":"90341:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19562,"nodeType":"FunctionDefinition","src":"90377:42:30","nodes":[],"documentation":{"id":19557,"nodeType":"StructuredDocumentation","src":"90348:24:30","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"90386:4:30","parameters":{"id":19560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19559,"mutability":"mutable","name":"newHeight","nameLocation":"90399:9:30","nodeType":"VariableDeclaration","scope":19562,"src":"90391:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19558,"name":"uint256","nodeType":"ElementaryTypeName","src":"90391:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90390:19:30"},"returnParameters":{"id":19561,"nodeType":"ParameterList","parameters":[],"src":"90418:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19568,"nodeType":"FunctionDefinition","src":"90558:48:30","nodes":[],"documentation":{"id":19563,"nodeType":"StructuredDocumentation","src":"90425:128:30","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"90567:8:30","parameters":{"id":19566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19565,"mutability":"mutable","name":"blockNumber","nameLocation":"90584:11:30","nodeType":"VariableDeclaration","scope":19568,"src":"90576:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19564,"name":"uint256","nodeType":"ElementaryTypeName","src":"90576:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90575:21:30"},"returnParameters":{"id":19567,"nodeType":"ParameterList","parameters":[],"src":"90605:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19574,"nodeType":"FunctionDefinition","src":"90821:43:30","nodes":[],"documentation":{"id":19569,"nodeType":"StructuredDocumentation","src":"90612:204:30","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"90830:8:30","parameters":{"id":19572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19571,"mutability":"mutable","name":"txHash","nameLocation":"90847:6:30","nodeType":"VariableDeclaration","scope":19574,"src":"90839:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"90839:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"90838:16:30"},"returnParameters":{"id":19573,"nodeType":"ParameterList","parameters":[],"src":"90863:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19582,"nodeType":"FunctionDefinition","src":"90924:64:30","nodes":[],"documentation":{"id":19575,"nodeType":"StructuredDocumentation","src":"90870:49:30","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"90933:8:30","parameters":{"id":19580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19577,"mutability":"mutable","name":"forkId","nameLocation":"90950:6:30","nodeType":"VariableDeclaration","scope":19582,"src":"90942:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19576,"name":"uint256","nodeType":"ElementaryTypeName","src":"90942:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19579,"mutability":"mutable","name":"blockNumber","nameLocation":"90966:11:30","nodeType":"VariableDeclaration","scope":19582,"src":"90958:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19578,"name":"uint256","nodeType":"ElementaryTypeName","src":"90958:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90941:37:30"},"returnParameters":{"id":19581,"nodeType":"ParameterList","parameters":[],"src":"90987:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19590,"nodeType":"FunctionDefinition","src":"91124:59:30","nodes":[],"documentation":{"id":19583,"nodeType":"StructuredDocumentation","src":"90994:125:30","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"91133:8:30","parameters":{"id":19588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19585,"mutability":"mutable","name":"forkId","nameLocation":"91150:6:30","nodeType":"VariableDeclaration","scope":19590,"src":"91142:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19584,"name":"uint256","nodeType":"ElementaryTypeName","src":"91142:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19587,"mutability":"mutable","name":"txHash","nameLocation":"91166:6:30","nodeType":"VariableDeclaration","scope":19590,"src":"91158:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"91158:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"91141:32:30"},"returnParameters":{"id":19589,"nodeType":"ParameterList","parameters":[],"src":"91182:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19596,"nodeType":"FunctionDefinition","src":"91296:45:30","nodes":[],"documentation":{"id":19591,"nodeType":"StructuredDocumentation","src":"91189:102:30","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"91305:10:30","parameters":{"id":19594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19593,"mutability":"mutable","name":"forkId","nameLocation":"91324:6:30","nodeType":"VariableDeclaration","scope":19596,"src":"91316:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19592,"name":"uint256","nodeType":"ElementaryTypeName","src":"91316:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"91315:16:30"},"returnParameters":{"id":19595,"nodeType":"ParameterList","parameters":[],"src":"91340:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19604,"nodeType":"FunctionDefinition","src":"91491:71:30","nodes":[],"documentation":{"id":19597,"nodeType":"StructuredDocumentation","src":"91347:139:30","text":"Set blockhash for the current block.\n It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"functionSelector":"5314b54a","implemented":false,"kind":"function","modifiers":[],"name":"setBlockhash","nameLocation":"91500:12:30","parameters":{"id":19602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19599,"mutability":"mutable","name":"blockNumber","nameLocation":"91521:11:30","nodeType":"VariableDeclaration","scope":19604,"src":"91513:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19598,"name":"uint256","nodeType":"ElementaryTypeName","src":"91513:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19601,"mutability":"mutable","name":"blockHash","nameLocation":"91542:9:30","nodeType":"VariableDeclaration","scope":19604,"src":"91534:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"91534:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"91512:40:30"},"returnParameters":{"id":19603,"nodeType":"ParameterList","parameters":[],"src":"91561:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19612,"nodeType":"FunctionDefinition","src":"91660:61:30","nodes":[],"documentation":{"id":19605,"nodeType":"StructuredDocumentation","src":"91568:87:30","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"91669:8:30","parameters":{"id":19610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19607,"mutability":"mutable","name":"account","nameLocation":"91686:7:30","nodeType":"VariableDeclaration","scope":19612,"src":"91678:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19606,"name":"address","nodeType":"ElementaryTypeName","src":"91678:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19609,"mutability":"mutable","name":"newNonce","nameLocation":"91702:8:30","nodeType":"VariableDeclaration","scope":19612,"src":"91695:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19608,"name":"uint64","nodeType":"ElementaryTypeName","src":"91695:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"91677:34:30"},"returnParameters":{"id":19611,"nodeType":"ParameterList","parameters":[],"src":"91720:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19620,"nodeType":"FunctionDefinition","src":"91787:67:30","nodes":[],"documentation":{"id":19613,"nodeType":"StructuredDocumentation","src":"91727:55:30","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"91796:14:30","parameters":{"id":19618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19615,"mutability":"mutable","name":"account","nameLocation":"91819:7:30","nodeType":"VariableDeclaration","scope":19620,"src":"91811:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19614,"name":"address","nodeType":"ElementaryTypeName","src":"91811:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19617,"mutability":"mutable","name":"newNonce","nameLocation":"91835:8:30","nodeType":"VariableDeclaration","scope":19620,"src":"91828:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19616,"name":"uint64","nodeType":"ElementaryTypeName","src":"91828:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"91810:34:30"},"returnParameters":{"id":19619,"nodeType":"ParameterList","parameters":[],"src":"91853:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19626,"nodeType":"FunctionDefinition","src":"92009:58:30","nodes":[],"documentation":{"id":19621,"nodeType":"StructuredDocumentation","src":"91860:144:30","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertTo`."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"92018:8:30","parameters":{"id":19622,"nodeType":"ParameterList","parameters":[],"src":"92026:2:30"},"returnParameters":{"id":19625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19624,"mutability":"mutable","name":"snapshotId","nameLocation":"92055:10:30","nodeType":"VariableDeclaration","scope":19626,"src":"92047:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19623,"name":"uint256","nodeType":"ElementaryTypeName","src":"92047:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"92046:20:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19632,"nodeType":"FunctionDefinition","src":"92174:48:30","nodes":[],"documentation":{"id":19627,"nodeType":"StructuredDocumentation","src":"92073:96:30","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"92183:10:30","parameters":{"id":19630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19629,"mutability":"mutable","name":"msgSender","nameLocation":"92202:9:30","nodeType":"VariableDeclaration","scope":19632,"src":"92194:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19628,"name":"address","nodeType":"ElementaryTypeName","src":"92194:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"92193:19:30"},"returnParameters":{"id":19631,"nodeType":"ParameterList","parameters":[],"src":"92221:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19640,"nodeType":"FunctionDefinition","src":"92373:66:30","nodes":[],"documentation":{"id":19633,"nodeType":"StructuredDocumentation","src":"92228:140:30","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"92382:10:30","parameters":{"id":19638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19635,"mutability":"mutable","name":"msgSender","nameLocation":"92401:9:30","nodeType":"VariableDeclaration","scope":19640,"src":"92393:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19634,"name":"address","nodeType":"ElementaryTypeName","src":"92393:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19637,"mutability":"mutable","name":"txOrigin","nameLocation":"92420:8:30","nodeType":"VariableDeclaration","scope":19640,"src":"92412:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19636,"name":"address","nodeType":"ElementaryTypeName","src":"92412:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"92392:37:30"},"returnParameters":{"id":19639,"nodeType":"ParameterList","parameters":[],"src":"92438:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19644,"nodeType":"FunctionDefinition","src":"92514:30:30","nodes":[],"documentation":{"id":19641,"nodeType":"StructuredDocumentation","src":"92445:64:30","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"92523:9:30","parameters":{"id":19642,"nodeType":"ParameterList","parameters":[],"src":"92532:2:30"},"returnParameters":{"id":19643,"nodeType":"ParameterList","parameters":[],"src":"92543:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19654,"nodeType":"FunctionDefinition","src":"92602:69:30","nodes":[],"documentation":{"id":19645,"nodeType":"StructuredDocumentation","src":"92550:47:30","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"92611:5:30","parameters":{"id":19652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19647,"mutability":"mutable","name":"target","nameLocation":"92625:6:30","nodeType":"VariableDeclaration","scope":19654,"src":"92617:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19646,"name":"address","nodeType":"ElementaryTypeName","src":"92617:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19649,"mutability":"mutable","name":"slot","nameLocation":"92641:4:30","nodeType":"VariableDeclaration","scope":19654,"src":"92633:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92633:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19651,"mutability":"mutable","name":"value","nameLocation":"92655:5:30","nodeType":"VariableDeclaration","scope":19654,"src":"92647:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92647:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"92616:45:30"},"returnParameters":{"id":19653,"nodeType":"ParameterList","parameters":[],"src":"92670:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19660,"nodeType":"FunctionDefinition","src":"92774:43:30","nodes":[],"documentation":{"id":19655,"nodeType":"StructuredDocumentation","src":"92677:92:30","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"92783:8:30","parameters":{"id":19658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19657,"mutability":"mutable","name":"txHash","nameLocation":"92800:6:30","nodeType":"VariableDeclaration","scope":19660,"src":"92792:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92792:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"92791:16:30"},"returnParameters":{"id":19659,"nodeType":"ParameterList","parameters":[],"src":"92816:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19668,"nodeType":"FunctionDefinition","src":"92919:59:30","nodes":[],"documentation":{"id":19661,"nodeType":"StructuredDocumentation","src":"92823:91:30","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"92928:8:30","parameters":{"id":19666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19663,"mutability":"mutable","name":"forkId","nameLocation":"92945:6:30","nodeType":"VariableDeclaration","scope":19668,"src":"92937:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19662,"name":"uint256","nodeType":"ElementaryTypeName","src":"92937:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19665,"mutability":"mutable","name":"txHash","nameLocation":"92961:6:30","nodeType":"VariableDeclaration","scope":19668,"src":"92953:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92953:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"92936:32:30"},"returnParameters":{"id":19667,"nodeType":"ParameterList","parameters":[],"src":"92977:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19674,"nodeType":"FunctionDefinition","src":"93012:50:30","nodes":[],"documentation":{"id":19669,"nodeType":"StructuredDocumentation","src":"92984:23:30","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"93021:10:30","parameters":{"id":19672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19671,"mutability":"mutable","name":"newGasPrice","nameLocation":"93040:11:30","nodeType":"VariableDeclaration","scope":19674,"src":"93032:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19670,"name":"uint256","nodeType":"ElementaryTypeName","src":"93032:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"93031:21:30"},"returnParameters":{"id":19673,"nodeType":"ParameterList","parameters":[],"src":"93061:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19680,"nodeType":"FunctionDefinition","src":"93100:45:30","nodes":[],"documentation":{"id":19675,"nodeType":"StructuredDocumentation","src":"93068:27:30","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"93109:4:30","parameters":{"id":19678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19677,"mutability":"mutable","name":"newTimestamp","nameLocation":"93122:12:30","nodeType":"VariableDeclaration","scope":19680,"src":"93114:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19676,"name":"uint256","nodeType":"ElementaryTypeName","src":"93114:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"93113:22:30"},"returnParameters":{"id":19679,"nodeType":"ParameterList","parameters":[],"src":"93144:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19692,"nodeType":"FunctionDefinition","src":"93297:105:30","nodes":[],"documentation":{"id":19681,"nodeType":"StructuredDocumentation","src":"93185:107:30","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"93306:16:30","parameters":{"id":19690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19683,"mutability":"mutable","name":"callee","nameLocation":"93331:6:30","nodeType":"VariableDeclaration","scope":19692,"src":"93323:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19682,"name":"address","nodeType":"ElementaryTypeName","src":"93323:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19685,"mutability":"mutable","name":"msgValue","nameLocation":"93347:8:30","nodeType":"VariableDeclaration","scope":19692,"src":"93339:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19684,"name":"uint256","nodeType":"ElementaryTypeName","src":"93339:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19687,"mutability":"mutable","name":"minGas","nameLocation":"93364:6:30","nodeType":"VariableDeclaration","scope":19692,"src":"93357:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19686,"name":"uint64","nodeType":"ElementaryTypeName","src":"93357:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19689,"mutability":"mutable","name":"data","nameLocation":"93387:4:30","nodeType":"VariableDeclaration","scope":19692,"src":"93372:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19688,"name":"bytes","nodeType":"ElementaryTypeName","src":"93372:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"93322:70:30"},"returnParameters":{"id":19691,"nodeType":"ParameterList","parameters":[],"src":"93401:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19706,"nodeType":"FunctionDefinition","src":"93535:127:30","nodes":[],"documentation":{"id":19693,"nodeType":"StructuredDocumentation","src":"93408:122:30","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"93544:16:30","parameters":{"id":19704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19695,"mutability":"mutable","name":"callee","nameLocation":"93569:6:30","nodeType":"VariableDeclaration","scope":19706,"src":"93561:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19694,"name":"address","nodeType":"ElementaryTypeName","src":"93561:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19697,"mutability":"mutable","name":"msgValue","nameLocation":"93585:8:30","nodeType":"VariableDeclaration","scope":19706,"src":"93577:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19696,"name":"uint256","nodeType":"ElementaryTypeName","src":"93577:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19699,"mutability":"mutable","name":"minGas","nameLocation":"93602:6:30","nodeType":"VariableDeclaration","scope":19706,"src":"93595:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19698,"name":"uint64","nodeType":"ElementaryTypeName","src":"93595:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19701,"mutability":"mutable","name":"data","nameLocation":"93625:4:30","nodeType":"VariableDeclaration","scope":19706,"src":"93610:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19700,"name":"bytes","nodeType":"ElementaryTypeName","src":"93610:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19703,"mutability":"mutable","name":"count","nameLocation":"93638:5:30","nodeType":"VariableDeclaration","scope":19706,"src":"93631:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19702,"name":"uint64","nodeType":"ElementaryTypeName","src":"93631:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"93560:84:30"},"returnParameters":{"id":19705,"nodeType":"ParameterList","parameters":[],"src":"93661:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19714,"nodeType":"FunctionDefinition","src":"93794:66:30","nodes":[],"documentation":{"id":19707,"nodeType":"StructuredDocumentation","src":"93668:121:30","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"93803:10:30","parameters":{"id":19712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19709,"mutability":"mutable","name":"callee","nameLocation":"93822:6:30","nodeType":"VariableDeclaration","scope":19714,"src":"93814:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19708,"name":"address","nodeType":"ElementaryTypeName","src":"93814:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19711,"mutability":"mutable","name":"data","nameLocation":"93845:4:30","nodeType":"VariableDeclaration","scope":19714,"src":"93830:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19710,"name":"bytes","nodeType":"ElementaryTypeName","src":"93830:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"93813:37:30"},"returnParameters":{"id":19713,"nodeType":"ParameterList","parameters":[],"src":"93859:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19724,"nodeType":"FunctionDefinition","src":"93947:80:30","nodes":[],"documentation":{"id":19715,"nodeType":"StructuredDocumentation","src":"93866:76:30","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"93956:10:30","parameters":{"id":19722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19717,"mutability":"mutable","name":"callee","nameLocation":"93975:6:30","nodeType":"VariableDeclaration","scope":19724,"src":"93967:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19716,"name":"address","nodeType":"ElementaryTypeName","src":"93967:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19719,"mutability":"mutable","name":"data","nameLocation":"93998:4:30","nodeType":"VariableDeclaration","scope":19724,"src":"93983:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19718,"name":"bytes","nodeType":"ElementaryTypeName","src":"93983:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19721,"mutability":"mutable","name":"count","nameLocation":"94011:5:30","nodeType":"VariableDeclaration","scope":19724,"src":"94004:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19720,"name":"uint64","nodeType":"ElementaryTypeName","src":"94004:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"93966:51:30"},"returnParameters":{"id":19723,"nodeType":"ParameterList","parameters":[],"src":"94026:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19734,"nodeType":"FunctionDefinition","src":"94115:84:30","nodes":[],"documentation":{"id":19725,"nodeType":"StructuredDocumentation","src":"94033:77:30","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"94124:10:30","parameters":{"id":19732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19727,"mutability":"mutable","name":"callee","nameLocation":"94143:6:30","nodeType":"VariableDeclaration","scope":19734,"src":"94135:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19726,"name":"address","nodeType":"ElementaryTypeName","src":"94135:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19729,"mutability":"mutable","name":"msgValue","nameLocation":"94159:8:30","nodeType":"VariableDeclaration","scope":19734,"src":"94151:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19728,"name":"uint256","nodeType":"ElementaryTypeName","src":"94151:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19731,"mutability":"mutable","name":"data","nameLocation":"94184:4:30","nodeType":"VariableDeclaration","scope":19734,"src":"94169:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19730,"name":"bytes","nodeType":"ElementaryTypeName","src":"94169:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"94134:55:30"},"returnParameters":{"id":19733,"nodeType":"ParameterList","parameters":[],"src":"94198:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19746,"nodeType":"FunctionDefinition","src":"94302:98:30","nodes":[],"documentation":{"id":19735,"nodeType":"StructuredDocumentation","src":"94205:92:30","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"94311:10:30","parameters":{"id":19744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19737,"mutability":"mutable","name":"callee","nameLocation":"94330:6:30","nodeType":"VariableDeclaration","scope":19746,"src":"94322:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19736,"name":"address","nodeType":"ElementaryTypeName","src":"94322:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19739,"mutability":"mutable","name":"msgValue","nameLocation":"94346:8:30","nodeType":"VariableDeclaration","scope":19746,"src":"94338:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19738,"name":"uint256","nodeType":"ElementaryTypeName","src":"94338:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19741,"mutability":"mutable","name":"data","nameLocation":"94371:4:30","nodeType":"VariableDeclaration","scope":19746,"src":"94356:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19740,"name":"bytes","nodeType":"ElementaryTypeName","src":"94356:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19743,"mutability":"mutable","name":"count","nameLocation":"94384:5:30","nodeType":"VariableDeclaration","scope":19746,"src":"94377:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19742,"name":"uint64","nodeType":"ElementaryTypeName","src":"94377:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"94321:69:30"},"returnParameters":{"id":19745,"nodeType":"ParameterList","parameters":[],"src":"94399:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19758,"nodeType":"FunctionDefinition","src":"94493:96:30","nodes":[],"documentation":{"id":19747,"nodeType":"StructuredDocumentation","src":"94406:82:30","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"94502:10:30","parameters":{"id":19756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19749,"mutability":"mutable","name":"callee","nameLocation":"94521:6:30","nodeType":"VariableDeclaration","scope":19758,"src":"94513:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19748,"name":"address","nodeType":"ElementaryTypeName","src":"94513:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19751,"mutability":"mutable","name":"msgValue","nameLocation":"94537:8:30","nodeType":"VariableDeclaration","scope":19758,"src":"94529:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19750,"name":"uint256","nodeType":"ElementaryTypeName","src":"94529:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19753,"mutability":"mutable","name":"gas","nameLocation":"94554:3:30","nodeType":"VariableDeclaration","scope":19758,"src":"94547:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19752,"name":"uint64","nodeType":"ElementaryTypeName","src":"94547:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19755,"mutability":"mutable","name":"data","nameLocation":"94574:4:30","nodeType":"VariableDeclaration","scope":19758,"src":"94559:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19754,"name":"bytes","nodeType":"ElementaryTypeName","src":"94559:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"94512:67:30"},"returnParameters":{"id":19757,"nodeType":"ParameterList","parameters":[],"src":"94588:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19772,"nodeType":"FunctionDefinition","src":"94698:110:30","nodes":[],"documentation":{"id":19759,"nodeType":"StructuredDocumentation","src":"94595:98:30","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"94707:10:30","parameters":{"id":19770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19761,"mutability":"mutable","name":"callee","nameLocation":"94726:6:30","nodeType":"VariableDeclaration","scope":19772,"src":"94718:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19760,"name":"address","nodeType":"ElementaryTypeName","src":"94718:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19763,"mutability":"mutable","name":"msgValue","nameLocation":"94742:8:30","nodeType":"VariableDeclaration","scope":19772,"src":"94734:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19762,"name":"uint256","nodeType":"ElementaryTypeName","src":"94734:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19765,"mutability":"mutable","name":"gas","nameLocation":"94759:3:30","nodeType":"VariableDeclaration","scope":19772,"src":"94752:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19764,"name":"uint64","nodeType":"ElementaryTypeName","src":"94752:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19767,"mutability":"mutable","name":"data","nameLocation":"94779:4:30","nodeType":"VariableDeclaration","scope":19772,"src":"94764:19:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19766,"name":"bytes","nodeType":"ElementaryTypeName","src":"94764:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19769,"mutability":"mutable","name":"count","nameLocation":"94792:5:30","nodeType":"VariableDeclaration","scope":19772,"src":"94785:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19768,"name":"uint64","nodeType":"ElementaryTypeName","src":"94785:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"94717:81:30"},"returnParameters":{"id":19771,"nodeType":"ParameterList","parameters":[],"src":"94807:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19786,"nodeType":"FunctionDefinition","src":"95167:134:30","nodes":[],"documentation":{"id":19773,"nodeType":"StructuredDocumentation","src":"94814:348:30","text":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"c948db5e","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"95176:19:30","parameters":{"id":19784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19775,"mutability":"mutable","name":"checkTopic0","nameLocation":"95201:11:30","nodeType":"VariableDeclaration","scope":19786,"src":"95196:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19774,"name":"bool","nodeType":"ElementaryTypeName","src":"95196:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19777,"mutability":"mutable","name":"checkTopic1","nameLocation":"95219:11:30","nodeType":"VariableDeclaration","scope":19786,"src":"95214:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19776,"name":"bool","nodeType":"ElementaryTypeName","src":"95214:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19779,"mutability":"mutable","name":"checkTopic2","nameLocation":"95237:11:30","nodeType":"VariableDeclaration","scope":19786,"src":"95232:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19778,"name":"bool","nodeType":"ElementaryTypeName","src":"95232:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19781,"mutability":"mutable","name":"checkTopic3","nameLocation":"95255:11:30","nodeType":"VariableDeclaration","scope":19786,"src":"95250:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19780,"name":"bool","nodeType":"ElementaryTypeName","src":"95250:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19783,"mutability":"mutable","name":"checkData","nameLocation":"95273:9:30","nodeType":"VariableDeclaration","scope":19786,"src":"95268:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19782,"name":"bool","nodeType":"ElementaryTypeName","src":"95268:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"95195:88:30"},"returnParameters":{"id":19785,"nodeType":"ParameterList","parameters":[],"src":"95300:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19802,"nodeType":"FunctionDefinition","src":"95404:197:30","nodes":[],"documentation":{"id":19787,"nodeType":"StructuredDocumentation","src":"95307:92:30","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"71c95899","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"95413:19:30","parameters":{"id":19800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19789,"mutability":"mutable","name":"checkTopic0","nameLocation":"95447:11:30","nodeType":"VariableDeclaration","scope":19802,"src":"95442:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19788,"name":"bool","nodeType":"ElementaryTypeName","src":"95442:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19791,"mutability":"mutable","name":"checkTopic1","nameLocation":"95473:11:30","nodeType":"VariableDeclaration","scope":19802,"src":"95468:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19790,"name":"bool","nodeType":"ElementaryTypeName","src":"95468:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19793,"mutability":"mutable","name":"checkTopic2","nameLocation":"95499:11:30","nodeType":"VariableDeclaration","scope":19802,"src":"95494:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19792,"name":"bool","nodeType":"ElementaryTypeName","src":"95494:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19795,"mutability":"mutable","name":"checkTopic3","nameLocation":"95525:11:30","nodeType":"VariableDeclaration","scope":19802,"src":"95520:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19794,"name":"bool","nodeType":"ElementaryTypeName","src":"95520:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19797,"mutability":"mutable","name":"checkData","nameLocation":"95551:9:30","nodeType":"VariableDeclaration","scope":19802,"src":"95546:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19796,"name":"bool","nodeType":"ElementaryTypeName","src":"95546:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19799,"mutability":"mutable","name":"emitter","nameLocation":"95578:7:30","nodeType":"VariableDeclaration","scope":19802,"src":"95570:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19798,"name":"address","nodeType":"ElementaryTypeName","src":"95570:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"95432:159:30"},"returnParameters":{"id":19801,"nodeType":"ParameterList","parameters":[],"src":"95600:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19806,"nodeType":"FunctionDefinition","src":"95891:40:30","nodes":[],"documentation":{"id":19803,"nodeType":"StructuredDocumentation","src":"95607:279:30","text":"Prepare an expected anonymous log with all topic and data checks enabled.\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"2e5f270c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"95900:19:30","parameters":{"id":19804,"nodeType":"ParameterList","parameters":[],"src":"95919:2:30"},"returnParameters":{"id":19805,"nodeType":"ParameterList","parameters":[],"src":"95930:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19812,"nodeType":"FunctionDefinition","src":"96034:55:30","nodes":[],"documentation":{"id":19807,"nodeType":"StructuredDocumentation","src":"95937:92:30","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"6fc68705","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"96043:19:30","parameters":{"id":19810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19809,"mutability":"mutable","name":"emitter","nameLocation":"96071:7:30","nodeType":"VariableDeclaration","scope":19812,"src":"96063:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19808,"name":"address","nodeType":"ElementaryTypeName","src":"96063:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"96062:17:30"},"returnParameters":{"id":19811,"nodeType":"ParameterList","parameters":[],"src":"96088:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19824,"nodeType":"FunctionDefinition","src":"96428:99:30","nodes":[],"documentation":{"id":19813,"nodeType":"StructuredDocumentation","src":"96095:328:30","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"96437:10:30","parameters":{"id":19822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19815,"mutability":"mutable","name":"checkTopic1","nameLocation":"96453:11:30","nodeType":"VariableDeclaration","scope":19824,"src":"96448:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19814,"name":"bool","nodeType":"ElementaryTypeName","src":"96448:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19817,"mutability":"mutable","name":"checkTopic2","nameLocation":"96471:11:30","nodeType":"VariableDeclaration","scope":19824,"src":"96466:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19816,"name":"bool","nodeType":"ElementaryTypeName","src":"96466:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19819,"mutability":"mutable","name":"checkTopic3","nameLocation":"96489:11:30","nodeType":"VariableDeclaration","scope":19824,"src":"96484:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19818,"name":"bool","nodeType":"ElementaryTypeName","src":"96484:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19821,"mutability":"mutable","name":"checkData","nameLocation":"96507:9:30","nodeType":"VariableDeclaration","scope":19824,"src":"96502:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19820,"name":"bool","nodeType":"ElementaryTypeName","src":"96502:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"96447:70:30"},"returnParameters":{"id":19823,"nodeType":"ParameterList","parameters":[],"src":"96526:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19838,"nodeType":"FunctionDefinition","src":"96630:124:30","nodes":[],"documentation":{"id":19825,"nodeType":"StructuredDocumentation","src":"96533:92:30","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"96639:10:30","parameters":{"id":19836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19827,"mutability":"mutable","name":"checkTopic1","nameLocation":"96655:11:30","nodeType":"VariableDeclaration","scope":19838,"src":"96650:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19826,"name":"bool","nodeType":"ElementaryTypeName","src":"96650:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19829,"mutability":"mutable","name":"checkTopic2","nameLocation":"96673:11:30","nodeType":"VariableDeclaration","scope":19838,"src":"96668:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19828,"name":"bool","nodeType":"ElementaryTypeName","src":"96668:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19831,"mutability":"mutable","name":"checkTopic3","nameLocation":"96691:11:30","nodeType":"VariableDeclaration","scope":19838,"src":"96686:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19830,"name":"bool","nodeType":"ElementaryTypeName","src":"96686:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19833,"mutability":"mutable","name":"checkData","nameLocation":"96709:9:30","nodeType":"VariableDeclaration","scope":19838,"src":"96704:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19832,"name":"bool","nodeType":"ElementaryTypeName","src":"96704:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19835,"mutability":"mutable","name":"emitter","nameLocation":"96728:7:30","nodeType":"VariableDeclaration","scope":19838,"src":"96720:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19834,"name":"address","nodeType":"ElementaryTypeName","src":"96720:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"96649:87:30"},"returnParameters":{"id":19837,"nodeType":"ParameterList","parameters":[],"src":"96753:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19842,"nodeType":"FunctionDefinition","src":"97024:31:30","nodes":[],"documentation":{"id":19839,"nodeType":"StructuredDocumentation","src":"96760:259:30","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"97033:10:30","parameters":{"id":19840,"nodeType":"ParameterList","parameters":[],"src":"97043:2:30"},"returnParameters":{"id":19841,"nodeType":"ParameterList","parameters":[],"src":"97054:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19848,"nodeType":"FunctionDefinition","src":"97158:46:30","nodes":[],"documentation":{"id":19843,"nodeType":"StructuredDocumentation","src":"97061:92:30","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"97167:10:30","parameters":{"id":19846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19845,"mutability":"mutable","name":"emitter","nameLocation":"97186:7:30","nodeType":"VariableDeclaration","scope":19848,"src":"97178:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19844,"name":"address","nodeType":"ElementaryTypeName","src":"97178:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"97177:17:30"},"returnParameters":{"id":19847,"nodeType":"ParameterList","parameters":[],"src":"97203:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19854,"nodeType":"FunctionDefinition","src":"97282:57:30","nodes":[],"documentation":{"id":19849,"nodeType":"StructuredDocumentation","src":"97210:67:30","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"11fb5b9c","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"97291:19:30","parameters":{"id":19852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19851,"mutability":"mutable","name":"revertData","nameLocation":"97318:10:30","nodeType":"VariableDeclaration","scope":19854,"src":"97311:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19850,"name":"bytes4","nodeType":"ElementaryTypeName","src":"97311:6:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"97310:19:30"},"returnParameters":{"id":19853,"nodeType":"ParameterList","parameters":[],"src":"97338:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19858,"nodeType":"FunctionDefinition","src":"97405:33:30","nodes":[],"documentation":{"id":19855,"nodeType":"StructuredDocumentation","src":"97345:55:30","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"97414:12:30","parameters":{"id":19856,"nodeType":"ParameterList","parameters":[],"src":"97426:2:30"},"returnParameters":{"id":19857,"nodeType":"ParameterList","parameters":[],"src":"97437:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19864,"nodeType":"FunctionDefinition","src":"97520:50:30","nodes":[],"documentation":{"id":19859,"nodeType":"StructuredDocumentation","src":"97444:71:30","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"97529:12:30","parameters":{"id":19862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19861,"mutability":"mutable","name":"revertData","nameLocation":"97549:10:30","nodeType":"VariableDeclaration","scope":19864,"src":"97542:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19860,"name":"bytes4","nodeType":"ElementaryTypeName","src":"97542:6:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"97541:19:30"},"returnParameters":{"id":19863,"nodeType":"ParameterList","parameters":[],"src":"97569:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19870,"nodeType":"FunctionDefinition","src":"97652:58:30","nodes":[],"documentation":{"id":19865,"nodeType":"StructuredDocumentation","src":"97576:71:30","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"97661:12:30","parameters":{"id":19868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19867,"mutability":"mutable","name":"revertData","nameLocation":"97689:10:30","nodeType":"VariableDeclaration","scope":19870,"src":"97674:25:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19866,"name":"bytes","nodeType":"ElementaryTypeName","src":"97674:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"97673:27:30"},"returnParameters":{"id":19869,"nodeType":"ParameterList","parameters":[],"src":"97709:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19878,"nodeType":"FunctionDefinition","src":"97939:59:30","nodes":[],"documentation":{"id":19871,"nodeType":"StructuredDocumentation","src":"97716:218:30","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"97948:16:30","parameters":{"id":19876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19873,"mutability":"mutable","name":"min","nameLocation":"97972:3:30","nodeType":"VariableDeclaration","scope":19878,"src":"97965:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19872,"name":"uint64","nodeType":"ElementaryTypeName","src":"97965:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19875,"mutability":"mutable","name":"max","nameLocation":"97984:3:30","nodeType":"VariableDeclaration","scope":19878,"src":"97977:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19874,"name":"uint64","nodeType":"ElementaryTypeName","src":"97977:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"97964:24:30"},"returnParameters":{"id":19877,"nodeType":"ParameterList","parameters":[],"src":"97997:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19886,"nodeType":"FunctionDefinition","src":"98240:63:30","nodes":[],"documentation":{"id":19879,"nodeType":"StructuredDocumentation","src":"98004:231:30","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"98249:20:30","parameters":{"id":19884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19881,"mutability":"mutable","name":"min","nameLocation":"98277:3:30","nodeType":"VariableDeclaration","scope":19886,"src":"98270:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19880,"name":"uint64","nodeType":"ElementaryTypeName","src":"98270:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19883,"mutability":"mutable","name":"max","nameLocation":"98289:3:30","nodeType":"VariableDeclaration","scope":19886,"src":"98282:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19882,"name":"uint64","nodeType":"ElementaryTypeName","src":"98282:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"98269:24:30"},"returnParameters":{"id":19885,"nodeType":"ParameterList","parameters":[],"src":"98302:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19892,"nodeType":"FunctionDefinition","src":"98381:38:30","nodes":[],"documentation":{"id":19887,"nodeType":"StructuredDocumentation","src":"98309:67:30","text":"Marks a test as skipped. Must be called at the top of the test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"98390:4:30","parameters":{"id":19890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19889,"mutability":"mutable","name":"skipTest","nameLocation":"98400:8:30","nodeType":"VariableDeclaration","scope":19892,"src":"98395:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19888,"name":"bool","nodeType":"ElementaryTypeName","src":"98395:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"98394:15:30"},"returnParameters":{"id":19891,"nodeType":"ParameterList","parameters":[],"src":"98418:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19896,"nodeType":"FunctionDefinition","src":"98494:41:30","nodes":[],"documentation":{"id":19893,"nodeType":"StructuredDocumentation","src":"98425:64:30","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"98503:20:30","parameters":{"id":19894,"nodeType":"ParameterList","parameters":[],"src":"98523:2:30"},"returnParameters":{"id":19895,"nodeType":"ParameterList","parameters":[],"src":"98534:0:30"},"scope":19897,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":19244,"name":"VmSafe","nameLocations":["82526:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":19242,"src":"82526:6:30"},"id":19245,"nodeType":"InheritanceSpecifier","src":"82526:6:30"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":19243,"nodeType":"StructuredDocumentation","src":"82339:171:30","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[19897,19242],"name":"Vm","nameLocation":"82520:2:30","scope":19898,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":30}